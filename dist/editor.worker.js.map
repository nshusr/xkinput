{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/monaco-editor/esm/vs/base/common/platform.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/winjs.base.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/errors.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/functional.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/iterator.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/event.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/linkedList.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/cancellation.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/async.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/winjs.polyfill.promise.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/arrays.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/uri.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/position.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/range.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/uint.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/token.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/editor.worker.js","webpack:///./node_modules/process/browser.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","process","global","__webpack_exports__","isWindows","isWeb","globals","setImmediate","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_locale","undefined","LANGUAGE_DEFAULT","isElectronRenderer","versions","electron","type","navigator","platform","rawNlsConfig","NODE_ENV","BASE_URL","nlsConfig","JSON","parse","resolved","availableLanguages","locale","_translationsConfigFile","e","userAgent","indexOf","language","_globals","self","_setImmediate","callback","nextTick","setTimeout","__winjs_exports","Promise","TPromise","_modules","_winjs","deps","factory","exportsPassedIn","depsValues","map","dep","result","apply","globalObject","window","_Global","hasWinRT","Windows","markSupportedForProcessing","func","supportedForProcessing","actualSetImmediate","msWriteProfilerMark","_WinJS","_BaseCoreUtils","_WriteProfilerMark","initializeProperties","target","members","prefix","properties","len","keys","isArray","Array","length","charCodeAt","member","set","forEach","configurable","writable","setName","defineProperties","_rootNamespace","createNamespace","parentNamespace","currentNamespace","namespaceFragments","split","splice","namespaceName","defineWithParent","define","Namespace","LazyStates","uninitialized","working","initialized","lazy","f","state","moduleDefine","publicNS","push","_lazy","_moduleDefine","constructor","instanceMembers","staticMembers","derive","baseClass","basePrototype","mix","arguments","Class","_Base","ErrorFromName","Error","message","this","createEventProperty","eventPropStateName","userHandler","handler","wrapper","evt","addEventListener","removeEventListener","createEventProperties","props","EventMixinEvent","detail","timeStamp","Date","now","bubbles","cancelable","currentTarget","defaultPrevented","_preventDefaultCalled","trusted","eventPhase","preventDefault","stopImmediatePropagation","_stopImmediatePropagationCalled","stopPropagation","eventMixin","_listeners","listener","useCapture","eventListeners","dispatchEvent","details","listeners","eventValue","slice","_createEventProperty","nop","v","_traceAsyncOperationStarting","Debug","msTraceAsyncOperationStarting","_traceAsyncOperationCompleted","msTraceAsyncOperationCompleted","_traceAsyncCallbackStarting","msTraceAsyncCallbackStarting","_traceAsyncCallbackCompleted","msTraceAsyncCallbackCompleted","_ErrorFromName","_Events","_Trace","setNonUserCodeExceptions","ListenerType","promiseEventListeners","errorET","canceledName","tagWithStack","tag","promise","thenPromise","errorPromise","exceptionPromise","completePromise","all","state_created","state_working","state_waiting","state_waiting_canceled","state_canceled","state_canceling","state_success_notify","state_success","state_error_notify","state_error","error_number","_","enter","_setState","cancel","done","then","_completed","_error","_notify","_progress","_setCompleteValue","_setErrorValue","completed","error","progress","setCompleteValue","setErrorValue","waitedUpon","_value","ThenPromise","_state","pushListener","_errorId","_chainedError","callonerror","detailsForHandledError","handlesOnError","_cancelAction","CompletePromise","queue","shift","notifySuccess","_cleanupAction","ErrorPromise","notifyError","PromiseStateMachine","_nextState","_run","onComplete","onError","onProgress","Promise_then","context","detailsForChainedError","detailsForError","_setChainedErrorValue","_setExceptionValue","detailsForException","targetState","createErrorDetails","exception","id","parent","errorValue","_isException","errorId","setErrorInfo","exceptionValue","asyncOpID","onerrorDetails","MS_ASYNC_OP_STATUS_SUCCESS","ex","errorID","MS_ASYNC_OP_STATUS_CANCELED","MS_ASYNC_OP_STATUS_ERROR","asyncCallbackStarted","onerrorDetailsGenerator","isException","staticCanceledPromise","creator","_stack","_getStack","_creator","unused","_doneHandler","ExceptionPromise","newValue","timeout","timeoutMS","clearTimeout","timeoutWithPromise","cancelPromise","cancelTimeout","init","oncancel","_oncancel","complete","stack","eventType","capture","any","values","canceled","as","is","join","errors","results","undefineds","pending","argDone","errorCount","canceledCount","Key","Done","thenEach","time","to","wrap","wrapError","_veryExpensiveTagWithStack","_veryExpensiveTagWithStack_tag","debuggerEnabled","_cancelBlocker","input","output","_StateMachine","PPromise","g","Function","outstandingPromiseErrors","promiseErrorHandler","onUnexpectedError","console","log","winjs_base","ErrorHandler","unexpectedErrorHandler","emit","onUnexpectedExternalError","errorHandler","isPromiseCanceledError","transformErrorForSerialization","name_1","stacktrace","$isError","lifecycle_dispose","first","rest","_i","dispose","toDisposable","fn","Disposable","_toDispose","_register","None","freeze","ImmortalReference","once","_this","didCall","Iterator","__extends","extendStatics","b","setPrototypeOf","__proto__","__","FIN","_empty","next","empty","fromArray","array","index","from","elements","iterator","element","filter","collect","Event","ArrayIterator","items","start","end","Math","min","current","Node","_super","ArrayNavigator","previous","max","last","MappedIterator","linkedList_LinkedList","LinkedList","isEmpty","_first","unshift","insert","atTheEnd","newNode","oldLast","_last","prev","oldFirst","candidate","anchor","node","_disposable","event_Emitter","Emitter","_options","_event","_disposed","_deliveryQueue","thisArgs","disposables","firstListener","onFirstListenerAdd","remove","onFirstListenerDidAdd","onListenerDidAdd","_noop","onLastListenerRemove","hasListeners","fire","event","iter","_a","event_1","EventMultiplexer","events","emitter","add","hook","unhook","idx","EventBufferer","buffers","wrapEvent","buffer","bufferEvents","pop","flush","mapEvent","filterEvent","ChainableEvent","on","Relay","listening","inputEvent","inputEventListener","cancellation_CancellationToken","shortcutEvent","handle","CancellationToken","isCancellationToken","thing","Cancelled","cancellation_MutableToken","isCancellationRequested","onCancellationRequested","MutableToken","_isCancelled","_emitter","CancellationTokenSource","_token","async_extends","isThenable","obj","Delayer","defaultDelay","completionPromise","doResolve","task","trigger","delay","doReject","runWhenIdle","TimeoutTimer","runner","setIfNotSet","cancelAndSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","onTimeout","isScheduled","schedule","doRun","requestIdleCallback","cancelIdleCallback","dummyIdle_1","didTimeout","timeRemaining","disposed","IdleValue","executor","_executor","err","_didRun","_handle","getValue","isWinJSPromise","winjs_polyfill_promise_PolyfillPromise","PolyfillPromise","initOrPromise","_winjsPromise","resolve","reject","initializing","thenables","race","entry","onFulfilled","onRejected","sync","err2","catch","simpleWorker_extends","INITIALIZE","simpleWorker_SimpleWorkerProtocol","SimpleWorkerProtocol","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","method","args","req","String","_send","vsWorker","handleMessage","serializedMessage","_handleMessage","msg","seq","replyMessage","warn","reply","res","requestMessage","strMsg","stringify","SimpleWorkerServer","SimpleWorkerClient","workerFactory","lazyProxyReject","_worker","_protocol","postMessage","getId","loaderConfiguration","require","getConfig","requirejs","contexts","config","_onModuleLoaded","_lazyProxy","availableMethods","proxy","createProxyMethod","proxyMethodRequest","_onError","_request","getProxyObject","info","postSerializedMessage","requestHandler","_requestHandler","onmessage","initialize","loaderConfig","methods","prop","baseUrl","paths","vs","catchError","handlerModule","mergeSort","data","compare","_sort","_merge","a","lo","mid","hi","aux","leftIdx","rightIdx","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","createStringSequence","getLength","getElementAtIndex","pos","stringDiff","original","modified","pretty","diff_LcsDiff","ComputeDiff","uri_a","Assert","condition","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","MaxDifferencesHistory","diff_DiffChangeHelper","DiffChangeHelper","m_changes","m_originalStart","Number","MAX_VALUE","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","AddModifiedElement","getChanges","getReverseChanges","reverse","LcsDiff","originalSequence","newSequence","continueProcessingPredicate","OriginalSequence","ModifiedSequence","ContinueProcessingPredicate","m_forwardHistory","m_reverseHistory","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","changes","ComputeDiffRecursive","PrettifyChanges","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","diagonal","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_VALUE","historyIndex","originalStartPoint","modifiedStartPoint","lastForwardChange","numDifferences","tempOriginalIndex","maxDifferences","numDiagonals","delta","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","abs","matchLengthOfLongest","temp","change","originalStop","modifiedStop","checkOriginal","checkModified","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","score","_OriginalIsBoundary","test","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","originalScore","modifiedScore","left","right","diagonalBaseIndex","diagonalsBelow","diagonalsAbove","diffEven","lowerBoundEven","upperBoundEven","uri_extends","_schemePattern","_singleSlashStart","_doubleSlashStart","_throwOnMissingSchema","_validateUri","ret","scheme","authority","path","query","fragment","_referenceResolution","_slash","_regexp","uri_URI","URI","schemeOrData","isUri","_makeFsPath","with","_URI","match","exec","decodeURIComponent","file","replace","substring","components","toString","skipEncoding","_asFormatted","toJSON","revive","_fsPath","fsPath","_formatted","external","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","code","encodeURIComponent","charAt","substr","escaped","encodeURIComponentMinimal","uri","toLowerCase","encoder","userinfo","fromCharCode","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","equals","other","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","aColumn","bColumn","clone","lift","isIPosition","range_Range","Range","startLineNumber","startColumn","endLineNumber","endColumn","range","containsPosition","position","containsRange","otherRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","setEndPosition","setStartPosition","collapseToStart","fromPositions","isIRange","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","aEndColumn","bEndColumn","aExists","bExists","compareRangesUsingEnds","spansMultipleLines","firstNonWhitespaceIndex","str","chCode","lastNonWhitespaceIndex","startIndex","MAXIMUM_RUN_TIME","MINIMUM_MATCHING_CHARACTER_LENGTH","computeDiff","modifiedSequence","diffAlgo","diffComputer_LineMarkerSequence","LineMarkerSequence","lines","startColumns","endColumns","length_1","_getFirstNonBlankColumn","_getLastNonBlankColumn","_lines","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","txt","defaultValue","getCharSequence","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","col","CharSequence","_charCodes","_lineNumbers","_columns","getStartColumn","getEndColumn","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","postProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","matchingLength","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","shouldComputeCharChanges","shouldPostProcessCharChanges","length_2","DiffComputer","originalLines","modifiedLines","opts","shouldMakePrettyDiff","maximumRunTimeMs","computationStartTime","getTime","_continueProcessingPredicate","lineChanges","length_3","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","originalChar","modifiedChar","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","Uint8Matrix","rows","cols","Uint8Array","_data","row","toUint8","toUint32","PrefixSumIndexOfResult","remainder","prefixSumComputer_PrefixSumComputer","PrefixSumComputer","prefixSum","Uint32Array","prefixSumValidIndex","Int32Array","getCount","insertValues","insertIndex","oldValues","oldPrefixSum","insertValuesLen","subarray","changeValue","removeValues","cnt","maxCnt","getTotalValue","_getAccumulatedValue","getAccumulatedValue","getIndexOf","accumulatedValue","floor","low","high","midStop","midStart","mirrorTextModel_MirrorTextModel","PrefixSumComputerWithCache","_cacheAccumulatedValueStart","_cache","_actual","_bustCache","cacheIndex","warmUpCache","accumulatedValueStart","accumulatedValueEnd","newCache","MirrorTextModel","eol","versionId","_uri","_eol","_versionId","_lineStarts","getText","onEvents","_acceptDeleteRange","_acceptInsertText","text","_ensureLineStarts","eolLength","linesLength","lineStartValues","_setLineText","lineIndex","insertText","insertLines","newLengths","USUAL_WORD_SEPARATORS","createWordRegExp","allowInWords","source","RegExp","DEFAULT_WORD_REGEXP","ensureValidWordDefinition","wordDefinition","flags","ignoreCase","multiline","lastIndex","getWordAtPosFast","textOffset","lastIndexOf","matchIndex","word","getWordAtPosSlow","getWordAtText","characterClassifier_CharacterClassifier","CharacterClassifier","_defaultValue","_asciiMap","_createAsciiMap","_map","Map","asciiMap","charCode","linkComputer_StateMachine","CharacterSet","has","StateMachine","edges","maxCharCode","maxState","states","_b","_states","_maxCharCode","nextState","currentState","_stateMachine","getStateMachine","_classifier","getClassifier","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","LinkComputer","_createLink","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","chClass","charCodeBeforeLink","lastCharCodeInLink","url","computeLinks","model","stateMachine","lineCount","getLineCount","getLineContent","j","linkBeginChCode","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","KeyCodeUtils","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","n2","parseFloat","isNaN","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","keyCode","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","KeyChord","firstPart","secondPart","chordPart","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","SimpleKeybinding","ctrlKey","shiftKey","altKey","metaKey","isModifierKey","isDuplicateModifierCase","ChordKeybinding","ResolvedKeybindingPart","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","ResolvedKeybinding","MarkerTag","MarkerSeverity","KeyCode","SelectionDirection","ScrollbarVisibility","OverviewRulerLane","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","TrackedRangeStickiness","ScrollType","CursorChangeReason","RenderMinimap","WrappingIndent","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","RenderLineNumbersType","ContentWidgetPositionPreference","OverlayWidgetPositionPreference","MouseTargetType","IndentAction","CompletionItemKind","CompletionItemInsertTextRule","CompletionTriggerKind","SignatureHelpTriggerReason","DocumentHighlightKind","SymbolKind","selection_extends","selection_Selection","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","Token","offset","TokenizationResult","tokens","endState","TokenizationResult2","standaloneBase_KeyMod","KeyMod","chord","CtrlCmd","Shift","Alt","WinCtrl","createMonacoBaseAPI","editor","languages","Uri","editorSimpleWorker_extends","editorSimpleWorker_MirrorModel","MirrorModel","getLinesContent","getWordAtPosition","wordAtText","getWordUntilPosition","wordAtPosition","createWordIterator","lineText","wordRangesIdx","wordRanges","_wordenize","getLineWords","content","ranges","words","ranges_1","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","positionAt","out","lineLength","hasChanged","maxCharacter","editorSimpleWorker_BaseEditorSimpleWorker","BaseEditorSimpleWorker","foreignModuleFactory","_foreignModuleFactory","_foreignModule","originalUrl","modifiedUrl","ignoreTrimWhitespace","_getModel","diffComputer","identical","_modelsAreIdentical","originalLineCount","modifiedLineCount","computeMoreMinimalEdits","modelUrl","edits","lastEol","aRng","bRng","edits_1","_diffLimit","editOffset","changes_1","newEdit","textualSuggest","wordDef","wordDefFlags","suggestions","wordDefRegExp","currentWord","seen","_suggestionsLimit","kind","label","computeWordRanges","words_1","selectionText","wordRange","loadForeignModule","createData","ctx","getMirrorModels","_getModels","fmr","editorSimpleWorker_EditorSimpleWorkerImpl","EditorSimpleWorkerImpl","_models","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","importScripts","monaco","foreignModule","editorWorker","simpleWorker","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","marker","currentQueue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","run","Item","noop","title","browser","env","argv","version","addListener","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,qBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,kBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,YAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,YAIAlC,IAAAmC,EAAA,gDClFA,SAAAC,EAAAC,GAAArC,EAAAU,EAAA4B,EAAA,sBAAAC,IAAAvC,EAAAU,EAAA4B,EAAA,sBAAAE,IAAAxC,EAAAU,EAAA4B,EAAA,sBAAAG,IAAAzC,EAAAU,EAAA4B,EAAA,sBAAAI,IAIA,IAAAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,OAAAC,EAGOC,EAAA,KACPC,EAAA,qBAAAf,GAAA,qBAAAA,EAAAgB,UAAA,qBAAAhB,EAAAgB,SAAAC,UAAA,aAAAjB,EAAAkB,KAEA,qBAAAC,WAAAJ,GASA,qBAAAf,EAAA,CACAO,EAAA,UAAAP,EAAAoB,SACAZ,EAAA,WAAAR,EAAAoB,SACAX,EAAA,UAAAT,EAAAoB,SACAR,EAAAE,EACAA,EACA,IAAAO,EAAuB3C,OAAA,CAAA4C,SAAA,aAAAC,SAAA,cAAW,qBAClC,GAAAF,EACA,IACA,IAAAG,EAAAC,KAAAC,MAAAL,GACAM,EAAAH,EAAAI,mBAAA,KACAhB,EAAAY,EAAAK,OAEAF,GAAAb,EACAU,EAAAM,wBAEA,MAAAC,IAGArB,GAAA,OA5BA,CACA,IAAAsB,EAAAb,UAAAa,UACAzB,EAAAyB,EAAAC,QAAA,cACAzB,EAAAwB,EAAAC,QAAA,gBACAxB,EAAAuB,EAAAC,QAAA,YACAtB,GAAA,EACAC,EAAAO,UAAAe,SACAtB,EAmCO,IAAAT,EAAAI,EAIAH,EAAAO,EACPwB,EAAA,kBAAAC,UAAA,kBAAAnC,IAAA,GACOI,EAAA8B,EACPE,EAAA,KACO,SAAA/B,EAAAgC,GAYP,OAXA,OAAAD,IAEAA,EADAhC,EAAAC,aACAD,EAAAC,aAAAd,KAAAa,GAEA,qBAAAL,GAAA,oBAAAA,EAAAuC,SACAvC,EAAAuC,SAAA/C,KAAAQ,GAGAK,EAAAmC,WAAAhD,KAAAa,IAGAgC,EAAAC,2EC7EA,SAAArC,EAAAD,GAOA,IAAAyC,EAPA7E,EAAAU,EAAA4B,EAAA,sBAAAwC,IAAA9E,EAAAU,EAAA4B,EAAA,sBAAAyC,IASA,WAEA,IAAAC,EAAAlE,OAAAY,OAAA,MACAsD,EAAA,wBAEA,IAAAC,EAAA,SAAAhF,EAAAiF,EAAAC,GACA,IAAAjF,EAAA,GACAkF,GAAA,EAEAC,EAAAH,EAAAI,IAAA,SAAAC,GACA,kBAAAA,GACAH,GAAA,EACAlF,GAEA8E,EAAAO,KAGAC,EAAAL,EAAAM,MAAA,GAAiCJ,GAEjCL,EAAA/E,GAAAmF,EAAAlF,EAAAsF,GAIAP,EAAA,mCAMA,IAAAS,EACA,qBAAAC,cACA,qBAAAnB,UACA,qBAAAnC,IACA,GACA,OAAAqD,IAGAT,EAAA,4DAAAW,GAGA,IAAAC,IAAAD,EAAAE,QAEA,SAAAC,EAAAC,GAcA,OADAA,EAAAC,wBAAA,EACAD,EAGA,IAAAE,EAAA,KAEA,OACAL,WACAE,6BACAtB,cAAA,SAAAC,GAEA,OAAAwB,IAEAA,EADAN,EAAAlD,aACAkD,EAAAlD,aAAAd,KAAAgE,GACiB,qBAAAxD,GAAA,oBAAAA,EAAAuC,SACjBvC,EAAAuC,SAAA/C,KAAAQ,GAEAwD,EAAAhB,WAAAhD,KAAAgE,IAGAM,EAAAxB,OAKAO,EAAA,gEAAAW,GAGA,OAAAA,EAAAO,qBAAA,eAEAlB,EAAA,mIAAAmB,EAAAR,EAAAS,EAAAC,GAGA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAEAC,EACAvG,EAAAwG,EAHAC,EAAA/F,OAAA+F,KAAAJ,GACAK,EAAAC,MAAAD,QAAAN,GAGA,IAAApG,EAAA,EAAAwG,EAAAC,EAAAG,OAAsC5G,EAAAwG,EAASxG,IAAA,CAC/C,IAAAuB,EAAAkF,EAAAzG,GACAY,EAAA,KAAAW,EAAAsF,WAAA,GACAC,EAAAT,EAAA9E,IACAuF,GAAA,kBAAAA,QACAjE,IAAAiE,EAAA7F,OAAA,oBAAA6F,EAAAjG,KAAA,oBAAAiG,EAAAC,IAYAnG,EAKA8F,EACAN,EAAAY,QAAA,SAAAZ,GACAA,EAAA7E,GAAAuF,IAGAV,EAAA7E,GAAAuF,GATAP,KAAA,GACAA,EAAAhF,GAAA,CAAmCN,MAAA6F,EAAAlG,aAAAqG,cAAA,EAAAC,UAAA,UAbnCrE,IAAAiE,EAAAlG,aACAkG,EAAAlG,cAEA0F,GAAAQ,EAAAK,SAAA,oBAAAL,EAAAK,SACAL,EAAAK,QAAAb,EAAA,IAAA/E,GAEAgF,KAAA,GACAA,EAAAhF,GAAAuF,GAiBAP,IACAG,EACAN,EAAAY,QAAA,SAAAZ,GACA1F,OAAA0G,iBAAAhB,EAAAG,KAGA7F,OAAA0G,iBAAAhB,EAAAG,IAoQA,OA/PA,WAEA,IAAAc,EAAArB,EAKA,SAAAsB,EAAAC,EAAAhH,GACA,IAAAiH,EAAAD,GAAA,GACA,GAAAhH,EAAA,CACA,IAAAkH,EAAAlH,EAAAmH,MAAA,KACAF,IAAAhC,GAAA,UAAAiC,EAAA,KACAD,EAAAxB,EACAyB,EAAAE,OAAA,MAEA,QAAA3H,EAAA,EAAAwG,EAAAiB,EAAAb,OAAgE5G,EAAAwG,EAASxG,IAAA,CACzE,IAAA4H,EAAAH,EAAAzH,GACAwH,EAAAI,IACAlH,OAAAC,eAAA6G,EAAAI,EACA,CAA6B3G,MAAA,GAAUiG,UAAA,EAAAtG,YAAA,EAAAqG,cAAA,IAGvCO,IAAAI,IAGA,OAAAJ,EAGA,SAAAK,EAAAN,EAAAhH,EAAA8F,GAkBA,IAAAmB,EAAAF,EAAAC,EAAAhH,GAMA,OAJA8F,GACAF,EAAAqB,EAAAnB,EAAA9F,GAAA,eAGAiH,EAGA,SAAAM,EAAAvH,EAAA8F,GAeA,OAAAwB,EAAArC,EAAAjF,EAAA8F,GAnEAgB,EAAAU,YACAV,EAAAU,UAAArH,OAAAY,OAAAZ,OAAAkB,YAqEA,IAAAoG,EAAA,CACAC,cAAA,EACAC,QAAA,EACAC,YAAA,GAGA,SAAAC,EAAAC,GACA,IAAA9H,EAEA6E,EADAkD,EAAAN,EAAAC,cAEA,OACAd,QAAA,SAAAlG,GACAV,EAAAU,GAEAJ,IAAA,WACA,OAAAyH,GACA,KAAAN,EAAAG,YACA,OAAA/C,EAEA,KAAA4C,EAAAC,cACAK,EAAAN,EAAAE,QACA,IACAhC,EAAA,yBAAA3F,EAAA,YACA6E,EAAAiD,IAC6B,QAC7BnC,EAAA,yBAAA3F,EAAA,WACA+H,EAAAN,EAAAC,cAIA,OAFAI,EAAA,KACAC,EAAAN,EAAAG,YACA/C,EAEA,KAAA4C,EAAAE,QACA,6CAEA,QACA,iBAGAnB,IAAA,SAAA9F,GACA,OAAAqH,GACA,KAAAN,EAAAE,QACA,6CAEA,QACAI,EAAAN,EAAAG,YACA/C,EAAAnE,EACA,QAGAL,YAAA,EACAqG,cAAA,GAKA,SAAAsB,EAAAzI,EAAAS,EAAA8F,GACA,IAAAD,EAAA,CAAAtG,GACA0I,EAAA,KAMA,OALAjI,IACAiI,EAAAlB,EAAA9B,EAAAjF,GACA6F,EAAAqC,KAAAD,IAEArC,EAAAC,EAAAC,EAAA9F,GAAA,eACAiI,EAIA9H,OAAA0G,iBAAAC,EAAAU,UAAA,CAEAF,iBAAA,CAA+B5G,MAAA4G,EAAAX,UAAA,EAAAtG,YAAA,EAAAqG,cAAA,GAE/Ba,OAAA,CAAqB7G,MAAA6G,EAAAZ,UAAA,EAAAtG,YAAA,EAAAqG,cAAA,GAErByB,MAAA,CAAoBzH,MAAAmH,EAAAlB,UAAA,EAAAtG,YAAA,EAAAqG,cAAA,GAEpB0B,cAAA,CAA4B1H,MAAAsH,EAAArB,UAAA,EAAAtG,YAAA,EAAAqG,cAAA,KArJ5B,GA2JA,WAEA,SAAAa,EAAAc,EAAAC,EAAAC,GA0BA,OARAF,KAAA,aACA3C,EAAAN,2BAAAiD,GACAC,GACA1C,EAAAyC,EAAAhH,UAAAiH,GAEAC,GACA3C,EAAAyC,EAAAE,GAEAF,EAGA,SAAAG,EAAAC,EAAAJ,EAAAC,EAAAC,GAqBA,GAAAE,EAAA,CACAJ,KAAA,aACA,IAAAK,EAAAD,EAAApH,UAUA,OATAgH,EAAAhH,UAAAlB,OAAAY,OAAA2H,GACAhD,EAAAN,2BAAAiD,GACAlI,OAAAC,eAAAiI,EAAAhH,UAAA,eAA6EX,MAAA2H,EAAA1B,UAAA,EAAAD,cAAA,EAAArG,YAAA,IAC7EiI,GACA1C,EAAAyC,EAAAhH,UAAAiH,GAEAC,GACA3C,EAAAyC,EAAAE,GAEAF,EAEA,OAAAd,EAAAc,EAAAC,EAAAC,GAIA,SAAAI,EAAAN,GAcA,IAAA5I,EAAAwG,EACA,IAFAoC,KAAA,aAEA5I,EAAA,EAAAwG,EAAA2C,UAAAvC,OAA+C5G,EAAAwG,EAASxG,IACxDmG,EAAAyC,EAAAhH,UAAAuH,UAAAnJ,IAEA,OAAA4I,EAIA5C,EAAA+B,UAAAD,OAAA,eACAA,SACAiB,SACAG,QA/FA,GAoGA,CACAnB,UAAA/B,EAAA+B,UACAqB,MAAApD,EAAAoD,SAIAvE,EAAA,0DAAAwE,GAGA,IAAAC,EAAAD,EAAAD,MAAAL,OAAAQ,MAAA,SAAAhJ,EAAAiJ,GASAC,KAAAlJ,OACAkJ,KAAAD,WAAAjJ,GACK,GAEA,CACLsF,wBAAA,IASA,OANAwD,EAAAtB,UAAAD,OAAA,SAGAwB,kBAGAA,IAKAzE,EAAA,6DAAA/E,EAAAuJ,GAIA,SAAAK,EAAAnJ,GACA,IAAAoJ,EAAA,MAAApJ,EAAA,QAEA,OACAM,IAAA,WACA,IAAAyH,EAAAmB,KAAAE,GACA,OAAArB,KAAAsB,aAEA7C,IAAA,SAAA8C,GACA,IAAAvB,EAAAmB,KAAAE,GACAE,GACAvB,IACAA,EAAA,CAAiCwB,QAAA,SAAAC,GAA0B,OAAAzB,EAAAsB,YAAAG,IAAiCH,YAAAC,GAC5FnJ,OAAAC,eAAA8I,KAAAE,EAAA,CAAyE1I,MAAAqH,EAAA1H,YAAA,EAAAsG,UAAA,EAAAD,cAAA,IACzEwC,KAAAO,iBAAAzJ,EAAA+H,EAAAwB,SAAA,IAEAxB,EAAAsB,YAAAC,GACiBvB,IACjBmB,KAAAQ,oBAAA1J,EAAA+H,EAAAwB,SAAA,GACAL,KAAAE,GAAA,OAGA/I,YAAA,GAIA,SAAAsJ,IAaA,IADA,IAAAC,EAAA,GACAnK,EAAA,EAAAwG,EAAA2C,UAAAvC,OAA+C5G,EAAAwG,EAASxG,IAAA,CACxD,IAAAO,EAAA4I,UAAAnJ,GACAmK,EAAA,KAAA5J,GAAAmJ,EAAAnJ,GAEA,OAAA4J,EAGA,IAAAC,EAAAf,EAAAD,MAAAtB,OACA,SAAA5E,EAAAmH,EAAAjE,GACAqD,KAAAY,SACAZ,KAAArD,SACAqD,KAAAa,UAAAC,KAAAC,MACAf,KAAAvG,QAEA,CACAuH,QAAA,CAAsBxJ,OAAA,EAAAiG,UAAA,GACtBwD,WAAA,CAAyBzJ,OAAA,EAAAiG,UAAA,GACzByD,cAAA,CACA9J,IAAA,WAAkC,OAAA4I,KAAArD,SAElCwE,iBAAA,CACA/J,IAAA,WAAkC,OAAA4I,KAAAoB,wBAElCC,QAAA,CAAsB7J,OAAA,EAAAiG,UAAA,GACtB6D,WAAA,CAAyB9J,MAAA,EAAAiG,UAAA,GACzBd,OAAA,KACAkE,UAAA,KACApH,KAAA,KAEA8H,eAAA,WACAvB,KAAAoB,uBAAA,GAEAI,yBAAA,WACAxB,KAAAyB,iCAAA,GAEAC,gBAAA,cAES,CACTtF,wBAAA,IAIAuF,EAAA,CACAC,WAAA,KAEArB,iBAAA,SAAA9G,EAAAoI,EAAAC,GAeAA,MAAA,EACA9B,KAAA4B,WAAA5B,KAAA4B,YAAA,GAEA,IADA,IAAAG,EAAA/B,KAAA4B,WAAAnI,GAAAuG,KAAA4B,WAAAnI,IAAA,GACAlD,EAAA,EAAAwG,EAAAgF,EAAA5E,OAAwD5G,EAAAwG,EAASxG,IAAA,CACjE,IAAAC,EAAAuL,EAAAxL,GACA,GAAAC,EAAAsL,gBAAAtL,EAAAqL,aACA,OAGAE,EAAA/C,KAAA,CAAiC6C,WAAAC,gBAEjCE,cAAA,SAAAvI,EAAAwI,GAeA,IAAAC,EAAAlC,KAAA4B,YAAA5B,KAAA4B,WAAAnI,GACA,GAAAyI,EAAA,CACA,IAAAC,EAAA,IAAAxB,EAAAlH,EAAAwI,EAAAjC,MAEAkC,IAAAE,MAAA,EAAAF,EAAA/E,QACA,QAAA5G,EAAA,EAAAwG,EAAAmF,EAAA/E,OAAuD5G,EAAAwG,IAAAoF,EAAAV,gCAAwDlL,IAC/G2L,EAAA3L,GAAAsL,SAAAM,GAEA,OAAAA,EAAAhB,mBAAA,EAEA,UAEAX,oBAAA,SAAA/G,EAAAoI,EAAAC,GAeAA,MAAA,EACA,IAAAI,EAAAlC,KAAA4B,YAAA5B,KAAA4B,WAAAnI,GACA,GAAAyI,EACA,QAAA3L,EAAA,EAAAwG,EAAAmF,EAAA/E,OAAuD5G,EAAAwG,EAASxG,IAAA,CAChE,IAAAC,EAAA0L,EAAA3L,GACA,GAAAC,EAAAqL,cAAArL,EAAAsL,eAAA,CACAI,EAAAhE,OAAA3H,EAAA,GACA,IAAA2L,EAAA/E,eACA6C,KAAA4B,WAAAnI,GAGA,UAOAmG,EAAAtB,UAAAY,cAAA7I,EAAA,mBACAgM,qBAAApC,EACAQ,wBACAkB,iBAMAvG,EAAA,oDAAAW,GAGA,SAAAuG,EAAAC,GACA,OAAAA,EAGA,OACAC,6BAAAzG,EAAA0G,OAAA1G,EAAA0G,MAAAC,+BAAA3G,EAAA0G,MAAAC,8BAAA3K,KAAAgE,EAAA0G,QAAAH,EACAK,8BAAA5G,EAAA0G,OAAA1G,EAAA0G,MAAAG,gCAAA7G,EAAA0G,MAAAG,+BAAA7K,KAAAgE,EAAA0G,QAAAH,EACAO,4BAAA9G,EAAA0G,OAAA1G,EAAA0G,MAAAK,8BAAA/G,EAAA0G,MAAAK,6BAAA/K,KAAAgE,EAAA0G,QAAAH,EACAS,6BAAAhH,EAAA0G,OAAA1G,EAAA0G,MAAAO,+BAAAjH,EAAA0G,MAAAO,8BAAAjL,KAAAgE,EAAA0G,QAAAH,KAGAlH,EAAA,kLAAAW,EAAAS,EAAAoD,EAAAqD,EAAAC,EAAAC,GAGApH,EAAA0G,QAAA1G,EAAA0G,MAAAW,0BAAA,GAEA,IAAAC,EAAAzD,EAAAD,MAAAF,IAAAG,EAAAD,MAAAtB,OAAA,QAA6E,CAAGjC,wBAAA,IAAgC8G,EAAAvB,YAChH2B,EAAA,IAAAD,EAEAC,EAAA1B,WAAA,GACA,IAAA2B,EAAA,QACAC,EAAA,WACAC,GAAA,EACAC,EAAA,CACAC,QAAA,EACAC,YAAA,EACAC,aAAA,EACAC,iBAAA,EACAC,gBAAA,IAEAL,EAAAM,IAAAN,EAAAC,QAAAD,EAAAE,YAAAF,EAAAG,aAAAH,EAAAI,iBAAAJ,EAAAK,gBAaA,IAgBAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAzBAC,EAAA,EA8BA,SAAAC,KAIAX,EAAA,CACAnN,KAAA,UACA+N,MAAA,SAAAlB,GACAA,EAAAmB,UAAAZ,IAEAa,OAAAH,EACAI,KAAAJ,EACAK,KAAAL,EACAM,WAAAN,EACAO,OAAAP,EACAQ,QAAAR,EACAS,UAAAT,EACAU,kBAAAV,EACAW,eAAAX,GAKAV,EAAA,CACApN,KAAA,UACA+N,MAAAD,EACAG,OAAA,SAAApB,GACAA,EAAAmB,UAAAT,IAEAW,OACAC,OACAC,WAAAM,EACAL,OAAAM,EACAL,QAAAR,EACAS,UAAAK,EACAJ,kBAAAK,EACAJ,eAAAK,GAOAzB,EAAA,CACArN,KAAA,UACA+N,MAAA,SAAAlB,GACA,IAAAkC,EAAAlC,EAAAmC,OAIA,GAAAD,aAAAE,GACAF,EAAAG,SAAAtB,GACAmB,EAAAG,SAAAxB,EACAyB,EAAAJ,EAAA,CAA0ClC,gBAC7B,CACb,IAAA8B,EAAA,SAAAjO,GACAqO,EAAAK,SACAvC,EAAAwC,cAAA3O,EAAAqO,IAMAO,EAAAzC,EAAAnM,EAAA6O,EAAAR,EAAAJ,GACA9B,EAAAwB,OAAA3N,KAGAiO,EAAAa,gBAAA,EACAT,EAAAZ,KACAtB,EAAAuB,WAAAnN,KAAA4L,GACA8B,EACA9B,EAAA0B,UAAAtN,KAAA4L,MAIAoB,OAAA,SAAApB,GACAA,EAAAmB,UAAAV,IAEAY,OACAC,OACAC,WAAAM,EACAL,OAAAM,EACAL,QAAAR,EACAS,UAAAK,EACAJ,kBAAAK,EACAJ,eAAAK,GASAxB,EAAA,CACAtN,KAAA,mBACA+N,MAAA,SAAAlB,GAIAA,EAAAmB,UAAAR,GACA,IAAAuB,EAAAlC,EAAAmC,OACAD,EAAAd,QACAc,EAAAd,UAGAA,OAAAH,EACAI,OACAC,OACAC,WAAAM,EACAL,OAAAM,EACAL,QAAAR,EACAS,UAAAK,EACAJ,kBAAAK,EACAJ,eAAAK,GAMAvB,EAAA,CACAvN,KAAA,WACA+N,MAAA,SAAAlB,GAGAA,EAAAmB,UAAAR,GACAX,EAAA4C,iBAEAxB,OAAAH,EACAI,OACAC,OACAC,WAAAM,EACAL,OAAAM,EACAL,QAAAR,EACAS,UAAAK,EACAJ,kBAAAK,EACAJ,eAAAK,GAMAtB,EAAA,CACAxN,KAAA,YACA+N,MAAA,SAAAlB,GACA,IAAA8B,EAAA,IAAA3F,MAAA0D,GACAiC,EAAA3O,KAAA2O,EAAA1F,QACA4D,EAAAmC,OAAAL,EACA9B,EAAAmB,UAAAL,IAEAM,OAAAH,EACAI,KAAAJ,EACAK,KAAAL,EACAM,WAAAN,EACAO,OAAAP,EACAQ,QAAAR,EACAS,UAAAT,EACAU,kBAAAV,EACAW,eAAAX,GAKAL,EAAA,CACAzN,KAAA,kBACA+N,MAAA,SAAAlB,GAGA,GAFAA,EAAAqB,KAAAwB,EAAArO,UAAA6M,KACArB,EAAAsB,KAAAuB,EAAArO,UAAA8M,KACAtB,EAAA/B,WAAA,CACA,IACAvJ,EADAoO,EAAA,CAAA9C,GAEA,MAAA8C,EAAAtJ,OACA9E,EAAAoO,EAAAC,QACArO,EAAA2N,OAAAZ,QAAA/M,EAAAoO,GAGA9C,EAAAmB,UAAAN,IAEAO,OAAAH,EACAI,KAAA,KACAC,KAAA,KACAC,WAAAN,EACAO,OAAAP,EACAQ,QAAAuB,EACAtB,UAAAT,EACAU,kBAAAV,EACAW,eAAAX,GAMAJ,EAAA,CACA1N,KAAA,UACA+N,MAAA,SAAAlB,GACAA,EAAAqB,KAAAwB,EAAArO,UAAA6M,KACArB,EAAAsB,KAAAuB,EAAArO,UAAA8M,KACAtB,EAAAiD,kBAEA7B,OAAAH,EACAI,KAAA,KACAC,KAAA,KACAC,WAAAN,EACAO,OAAAP,EACAQ,QAAAuB,EACAtB,UAAAT,EACAU,kBAAAV,EACAW,eAAAX,GAKAH,EAAA,CACA3N,KAAA,eACA+N,MAAA,SAAAlB,GAGA,GAFAA,EAAAqB,KAAA6B,EAAA1O,UAAA6M,KACArB,EAAAsB,KAAA4B,EAAA1O,UAAA8M,KACAtB,EAAA/B,WAAA,CACA,IACAvJ,EADAoO,EAAA,CAAA9C,GAEA,MAAA8C,EAAAtJ,OACA9E,EAAAoO,EAAAC,QACArO,EAAA2N,OAAAZ,QAAA/M,EAAAoO,GAGA9C,EAAAmB,UAAAJ,IAEAK,OAAAH,EACAI,KAAA,KACAC,KAAA,KACAC,WAAAN,EACAO,OAAAP,EACAQ,QAAA0B,EACAzB,UAAAT,EACAU,kBAAAV,EACAW,eAAAX,GAMAF,EAAA,CACA5N,KAAA,QACA+N,MAAA,SAAAlB,GACAA,EAAAqB,KAAA6B,EAAA1O,UAAA6M,KACArB,EAAAsB,KAAA4B,EAAA1O,UAAA8M,KACAtB,EAAAiD,kBAEA7B,OAAAH,EACAI,KAAA,KACAC,KAAA,KACAC,WAAAN,EACAO,OAAAP,EACAQ,QAAA0B,EACAzB,UAAAT,EACAU,kBAAAV,EACAW,eAAAX,GAcA,IAAAmC,EAAAnH,EAAAD,MAAAtB,OAAA,MACAuD,WAAA,KACAoF,WAAA,KACAhB,OAAA,KACAF,OAAA,KAEAf,OAAA,WAQA/E,KAAAgG,OAAAjB,OAAA/E,MACAA,KAAAiH,QAEAjC,KAAA,SAAAkC,EAAAC,EAAAC,GA6BApH,KAAAgG,OAAAhB,KAAAhF,KAAAkH,EAAAC,EAAAC,IAEAnC,KAAA,SAAAoC,EAAAH,EAAAC,EAAAC,GA8BA,GAAApH,KAAAiF,OAAAoC,EAKA,OAAArH,KAAAgG,OAAAf,KAAAjF,KAAAkH,EAAAC,EAAAC,GAJApH,KAAAiF,KAAAiC,EAAAC,EAAAC,IAOAjB,cAAA,SAAA3O,EAAA8P,GACA,IAAA3L,EAAAqE,KAAAgG,OAAAb,OAAAnF,KAAAxI,EAAA+P,EAAAD,GAEA,OADAtH,KAAAiH,OACAtL,GAEAuJ,WAAA,SAAA1N,GACA,IAAAmE,EAAAqE,KAAAgG,OAAAd,WAAAlF,KAAAxI,GAEA,OADAwI,KAAAiH,OACAtL,GAEAwJ,OAAA,SAAA3N,GACA,IAAAmE,EAAAqE,KAAAgG,OAAAb,OAAAnF,KAAAxI,EAAAgQ,GAEA,OADAxH,KAAAiH,OACAtL,GAEA0J,UAAA,SAAA7N,GACAwI,KAAAgG,OAAAX,UAAArF,KAAAxI,IAEAsN,UAAA,SAAAjG,GACAmB,KAAAgH,WAAAnI,GAEAyG,kBAAA,SAAA9N,GACAwI,KAAAgG,OAAAV,kBAAAtF,KAAAxI,GACAwI,KAAAiH,QAEAQ,sBAAA,SAAAjQ,EAAA8P,GACA,IAAA3L,EAAAqE,KAAAgG,OAAAT,eAAAvF,KAAAxI,EAAA+P,EAAAD,GAEA,OADAtH,KAAAiH,OACAtL,GAEA+L,mBAAA,SAAAlQ,GACA,IAAAmE,EAAAqE,KAAAgG,OAAAT,eAAAvF,KAAAxI,EAAAmQ,GAEA,OADA3H,KAAAiH,OACAtL,GAEAsL,KAAA,WACA,MAAAjH,KAAAgH,WACAhH,KAAAgG,OAAAhG,KAAAgH,WACAhH,KAAAgH,WAAA,KACAhH,KAAAgG,OAAAnB,MAAA7E,QAGK,CACL5D,wBAAA,IAOA,SAAAoJ,EAAA7B,EAAAnM,GACA,IAAAoQ,EAEAA,EADApQ,GAAA,kBAAAA,GAAA,oBAAAA,EAAAyN,KACAd,EAEAI,EAEAZ,EAAAmC,OAAAtO,EACAmM,EAAAmB,UAAA8C,GAEA,SAAAC,EAAAC,EAAArC,EAAA9B,EAAAoE,EAAAC,EAAA5H,GACA,OACA0H,YACArC,QACA9B,UACAvD,UACA2H,KACAC,UAGA,SAAA3B,EAAA1C,EAAAsE,EAAAX,EAAAlH,GACA,IAAA0H,EAAAR,EAAAY,aACAC,EAAAb,EAAApB,SACA,OAAA2B,EACAC,EAAAG,EAAA,KACAH,EAAA,KAAAG,EACAtE,EACAwE,EACAb,EACAlH,GAGA,SAAAmH,EAAA5D,EAAAsE,EAAAX,GACA,IAAAQ,EAAAR,EAAAY,aACAC,EAAAb,EAAApB,SAEA,OADAkC,EAAAzE,EAAAwE,EAAAL,GACAD,EACAC,EAAAG,EAAA,KACAH,EAAA,KAAAG,EACAtE,EACAwE,EACAb,GAGA,SAAAE,EAAA7D,EAAAsE,GACA,IAAAE,IAAAxD,EAEA,OADAyD,EAAAzE,EAAAwE,GACAN,EACA,KACAI,EACAtE,EACAwE,GAGA,SAAAR,EAAAhE,EAAA0E,GACA,IAAAF,IAAAxD,EAEA,OADAyD,EAAAzE,EAAAwE,GAAA,GACAN,EACAQ,EACA,KACA1E,EACAwE,GAGA,SAAAnD,EAAArB,EAAAuD,EAAAC,EAAAC,GACA,IAAAkB,EAAAnF,EAAAX,6BAAA,sBACAyD,EAAAtC,EAAA,CAA+B/M,EAAAsQ,EAAA5M,EAAA6M,EAAA9O,EAAA+O,EAAAkB,cAE/B,SAAA7C,EAAA9B,EAAAnM,EAAA+Q,EAAAjB,GACA3D,EAAAmC,OAAAtO,EACA4O,EAAAzC,EAAAnM,EAAA+Q,EAAAjB,GACA3D,EAAAmB,UAAAL,GAEA,SAAAkC,EAAAhD,EAAA8C,GACA,IAMAlQ,EAAAwG,EANAvF,EAAAmM,EAAAmC,OACA5D,EAAAyB,EAAA/B,WACA,GAAAM,EAKA,IAFAyB,EAAA/B,WAAA,KAEArL,EAAA,EAAAwG,EAAAG,MAAAD,QAAAiF,KAAA/E,OAAA,EAA0E5G,EAAAwG,EAASxG,IAAA,CACnF,IAAAsL,EAAA,IAAA9E,EAAAmF,IAAA3L,GACA2Q,EAAArF,EAAAjL,EACA+F,EAAAkF,EAAA8B,QAIA,GAFAR,EAAAR,8BAAAd,EAAAyG,UAAAvM,EAAA0G,OAAA1G,EAAA0G,MAAA+F,4BAEA7L,EAAA,CACAwG,EAAAN,4BAAAhB,EAAAyG,WACA,IACA3L,EAAA2I,kBAAA4B,IAAA1P,MACiB,MAAAiR,GACjB9L,EAAA+K,mBAAAe,GACiB,QACjBtF,EAAAJ,+BAEApG,EAAAqJ,SAAA7B,GAAAxH,EAAAiF,YACA6E,EAAAzH,KAAArC,QAGA6J,EAAArO,UAAA6M,KAAAtO,KAAAiN,EAAAuD,IAIA,SAAAJ,EAAAnD,EAAA8C,GACA,IAMAlQ,EAAAwG,EANAvF,EAAAmM,EAAAmC,OACA5D,EAAAyB,EAAA/B,WACA,GAAAM,EAKA,IAFAyB,EAAA/B,WAAA,KAEArL,EAAA,EAAAwG,EAAAG,MAAAD,QAAAiF,KAAA/E,OAAA,EAA0E5G,EAAAwG,EAASxG,IAAA,CACnF,IAAAsL,EAAA,IAAA9E,EAAAmF,IAAA3L,GACA4Q,EAAAtF,EAAAvH,EACAqC,EAAAkF,EAAA8B,QAEA+E,EAAA3M,EAAA0G,QAAAjL,KAAAV,OAAA0M,EAAAzH,EAAA0G,MAAAkG,4BAAA5M,EAAA0G,MAAAmG,0BAGA,GAFAzF,EAAAR,8BAAAd,EAAAyG,UAAAI,GAEA/L,EAAA,CACA,IAAAkM,GAAA,EACA,IACA1B,GACAhE,EAAAN,4BAAAhB,EAAAyG,WACAO,GAAA,EACA1B,EAAAb,gBACAF,EAAAzJ,EAAAnF,EAAA6O,EAAA1C,EAAAwD,GAEAxK,EAAA2I,kBAAA6B,EAAA3P,KAEAmF,EAAA8K,sBAAAjQ,EAAAmM,GAEiB,MAAA8E,GACjB9L,EAAA+K,mBAAAe,GACiB,QACjBI,GACA1F,EAAAJ,+BAGApG,EAAAqJ,SAAA7B,GAAAxH,EAAAiF,YACA6E,EAAAzH,KAAArC,QAGAkK,EAAA1O,UAAA6M,KAAAtO,KAAAiN,EAAA,KAAAwD,IAIA,SAAAf,EAAAzC,EAAAnM,EAAAsR,EAAAxB,EAAAlH,GACA,GAAAkD,EAAA1B,WAAA2B,GAAA,CACA,GAAA/L,aAAAsI,OAAAtI,EAAAuI,UAAAyD,EACA,OAEAF,EAAAtB,cAAAuB,EAAAuF,EAAAnF,EAAAnM,EAAA8P,EAAAlH,KAGA,SAAAsF,EAAA/B,EAAAnM,GACA,IAEAjB,EAAAwG,EAFAmF,EAAAyB,EAAA/B,WACA,GAAAM,EAEA,IAAA3L,EAAA,EAAAwG,EAAAG,MAAAD,QAAAiF,KAAA/E,OAAA,EAA8E5G,EAAAwG,EAASxG,IAAA,CACvF,IAAAsL,EAAA,IAAA9E,EAAAmF,IAAA3L,GACA6Q,EAAAvF,EAAAxJ,EACA,GAAA+O,EACA,IAAyBA,EAAA5P,GAAqB,MAAAiR,IAE9C5G,EAAAjL,GAAAiL,EAAAvH,IAAAuH,EAAA8B,SACA9B,EAAA8B,QAAA0B,UAAA7N,IAKA,SAAAyO,EAAAtC,EAAA9B,GACA,IAAAK,EAAAyB,EAAA/B,WACAM,GAIAA,EAAAhF,MAAAD,QAAAiF,KAAA,CAAAA,GACAA,EAAAlD,KAAA6C,IAEAK,EAAAL,EAEA8B,EAAA/B,WAAAM,EAKA,SAAAkG,EAAAzE,EAAAwE,EAAAY,GACApF,EAAAuE,aAAAa,IAAA,EACApF,EAAAuC,SAAAiC,EAEA,SAAAvC,EAAAjC,EAAAnM,EAAA+Q,EAAAjB,GACA3D,EAAAmC,OAAAtO,EACA4O,EAAAzC,EAAAnM,EAAA+Q,EAAAjB,GACA3D,EAAAmB,UAAAJ,GAEA,SAAAiB,EAAAhC,EAAAnM,GACA,IAAAoQ,EAEAA,EADApQ,GAAA,kBAAAA,GAAA,oBAAAA,EAAAyN,KACAd,EAEAK,EAEAb,EAAAmC,OAAAtO,EACAmM,EAAAmB,UAAA8C,GAEA,SAAA3C,EAAAtB,EAAAuD,EAAAC,EAAAC,GACA,IAAAzL,EAAA,IAAAoK,EAAApC,GACA2E,EAAAnF,EAAAX,6BAAA,sBAEA,OADAyD,EAAAtC,EAAA,CAA+BA,QAAAhI,EAAA/E,EAAAsQ,EAAA5M,EAAA6M,EAAA9O,EAAA+O,EAAAkB,cAC/B3M,EAOA,IAqTAqN,EArTAjD,EAAAnG,EAAAD,MAAAL,OAAAyH,EACA,SAAAkC,GAEAxF,KAAA,IAAAA,KAAAC,EAAAE,eACA5D,KAAAkJ,OAAAjO,EAAAkO,aAGAnJ,KAAAoJ,SAAAH,EACAjJ,KAAA8E,UAAAb,GACAjE,KAAAiH,QACS,CACTmC,SAAA,KAEA7C,cAAA,WAAwCvG,KAAAoJ,UAAqBpJ,KAAAoJ,SAAArE,UAC7D6B,eAAA,WAAyC5G,KAAAoJ,SAAA,OAChC,CACThN,wBAAA,IAUAyK,EAAAjH,EAAAD,MAAAtB,OACA,SAAA7G,GAEAiM,KAAA,IAAAA,KAAAC,EAAAG,gBACA7D,KAAAkJ,OAAAjO,EAAAkO,aAGAnJ,KAAA8F,OAAAtO,EACA4O,EAAApG,KAAAxI,EAAAgQ,IACS,CACTzC,OAAA,aASAC,KAAA,SAAAqE,EAAAlC,GA6BA,IAAA3P,EAAAwI,KAAA8F,OACA,GAAAqB,EACA,IACAA,EAAAb,gBACAF,EAAA,KAAA5O,EAAA6O,EAAArG,KAAAmH,GAEA,IAAAxL,EAAAwL,EAAA3P,GAKA,YAJAmE,GAAA,kBAAAA,GAAA,oBAAAA,EAAAqJ,MAEArJ,EAAAqJ,QAGqB,MAAAyD,GACrBjR,EAAAiR,EAGAjR,aAAAsI,OAAAtI,EAAAuI,UAAAyD,GAMAvI,EAAAqO,aAAA9R,IAEAyN,KAAA,SAAAoE,EAAAlC,GAiCA,IAAAA,EAA+B,OAAAnH,KAC/B,IAAArE,EACAnE,EAAAwI,KAAA8F,OACA,IACAqB,EAAAb,gBACAF,EAAA,KAAA5O,EAAA6O,EAAArG,KAAAmH,GAEAxL,EAAA,IAAA6K,EAAAW,EAAA3P,IACiB,MAAAiR,GAKjB9M,EADA8M,IAAAjR,EACAwI,KAEA,IAAAuJ,EAAAd,GAGA,OAAA9M,IAES,CACTS,wBAAA,IAIAmN,EAAA3J,EAAAD,MAAAL,OAAAuH,EACA,SAAArP,GAEAiM,KAAA,IAAAA,KAAAC,EAAAI,oBACA9D,KAAAkJ,OAAAjO,EAAAkO,aAGAnJ,KAAA8F,OAAAtO,EACA4O,EAAApG,KAAAxI,EAAAmQ,IACS,GAEA,CACTvL,wBAAA,IAIAoK,EAAA5G,EAAAD,MAAAtB,OACA,SAAA7G,GAMA,GAJAiM,KAAA,IAAAA,KAAAC,EAAAK,mBACA/D,KAAAkJ,OAAAjO,EAAAkO,aAGA3R,GAAA,kBAAAA,GAAA,oBAAAA,EAAAyN,KAAA,CACA,IAAAtJ,EAAA,IAAAoK,EAAA,MAEA,OADApK,EAAA2J,kBAAA9N,GACAmE,EAEAqE,KAAA8F,OAAAtO,GACS,CACTuN,OAAA,aASAC,KAAA,SAAAkC,GA6BA,GAAAA,EACA,IACA,IAAAvL,EAAAuL,EAAAlH,KAAA8F,QACAnK,GAAA,kBAAAA,GAAA,oBAAAA,EAAAqJ,MACArJ,EAAAqJ,OAEiB,MAAAyD,GAEjBxN,EAAAqO,aAAAb,KAGAxD,KAAA,SAAAiC,GA6BA,IAIA,IAAAsC,EAAAtC,IAAAlH,KAAA8F,QAAA9F,KAAA8F,OACA,OAAA0D,IAAAxJ,KAAA8F,OAAA9F,KAAA,IAAAwG,EAAAgD,GACiB,MAAAf,GACjB,WAAAc,EAAAd,MAGS,CACTrM,wBAAA,IAQA,SAAAqN,EAAAC,GACA,IAAA3B,EACA,WAAA9M,EACA,SAAArE,GACA8S,EACA3B,EAAAhM,EAAAhB,WAAAnE,EAAA8S,GAEAlN,EAAA5B,cAAAhE,IAGA,WACAmR,GACAhM,EAAA4N,aAAA5B,KAMA,SAAA6B,EAAAH,EAAA9F,GACA,IAAAkG,EAAA,WAAyClG,EAAAoB,UACzC+E,EAAA,WAAyCL,EAAA1E,UAGzC,OAFA0E,EAAAxE,KAAA4E,GACAlG,EAAAsB,KAAA6E,KACAnG,EAKA,IAAA1I,EAAA2E,EAAAD,MAAAL,OAAAyH,EACA,SAAAgD,EAAAC,GAmBAvG,KAAA,IAAAA,KAAAC,EAAAC,WACA3D,KAAAkJ,OAAAjO,EAAAkO,aAGAnJ,KAAAiK,UAAAD,EACAhK,KAAA8E,UAAAb,GACAjE,KAAAiH,OAEA,IACA,IAAAiD,EAAAlK,KAAAkF,WAAAnN,KAAAiI,MACAyF,EAAAzF,KAAAmF,OAAApN,KAAAiI,MACA0F,EAAA1F,KAAAqF,UAAAtN,KAAAiI,MACA+J,EAAAG,EAAAzE,EAAAC,GACa,MAAA+C,GACbzI,KAAA0H,mBAAAe,KAES,CACTwB,UAAA,KAEA1D,cAAA,WAEA,IACA,IAAAvG,KAAAiK,UAGA,UAAAnK,MAAA,sCAFAE,KAAAiK,YAIiB,MAAAxB,GAEjBA,EAAA1I,QACA0I,EAAA0B,MACA7G,EAAAtB,cAAA,QAAAyG,KAIA7B,eAAA,WAAyC5G,KAAAiK,UAAA,OAChC,CAET1J,iBAAA,SAAA6J,EAAAvI,EAAAwI,GAeA/G,EAAA/C,iBAAA6J,EAAAvI,EAAAwI,IAEAC,IAAA,SAAAC,GAcA,WAAAtP,EACA,SAAAiP,EAAAzE,GACA,IAAAzI,EAAA/F,OAAA+F,KAAAuN,GACA,IAAAvN,EAAAG,QACA+M,IAEA,IAAAM,EAAA,EACAxN,EAAAO,QAAA,SAAAzF,GACAmD,EAAAwP,GAAAF,EAAAzS,IAAAmN,KACA,WAA6CiF,EAAA,CAAWpS,MAAAN,MAAA+S,EAAAzS,MACxD,SAAAwC,GACAA,aAAAwF,OAAAxF,EAAAxD,OAAA0M,IACAgH,IAAAxN,EAAAG,QACA+M,EAAAjP,EAAA8J,QAIAU,EAAA,CAA2C3N,MAAAN,MAAA+S,EAAAzS,UAK3C,WACA,IAAAkF,EAAA/F,OAAA+F,KAAAuN,GACAvN,EAAAO,QAAA,SAAAzF,GACA,IAAA6L,EAAA1I,EAAAwP,GAAAF,EAAAzS,IACA,oBAAA6L,EAAAoB,QACApB,EAAAoB,cAMA0F,GAAA,SAAAjT,GAaA,OAAAA,GAAA,kBAAAA,GAAA,oBAAAA,EAAAyN,KACAzN,EAEA,IAAAgP,EAAAhP,IAMAuN,OAAA,CACA3N,IAAA,WACA,OAAA4R,KAAA,IAAAnC,EAAA,IAAA5D,EAAAO,MAGAxB,cAAA,SAAAoI,EAAAnI,GAeA,OAAAqB,EAAAtB,cAAAoI,EAAAnI,IAEAyI,GAAA,SAAAlT,GAYA,OAAAA,GAAA,kBAAAA,GAAA,oBAAAA,EAAAyN,MAEA0F,KAAA,SAAAJ,GAaA,WAAAtP,EACA,SAAAiP,EAAAzE,EAAAC,GACA,IAAA1I,EAAA/F,OAAA+F,KAAAuN,GACAK,EAAA1N,MAAAD,QAAAsN,GAAA,MACAM,EAAA3N,MAAAD,QAAAsN,GAAA,MACAO,EAAA,EACAC,EAAA/N,EAAAG,OACA6N,EAAA,SAAAlT,GACA,SAAAiT,EAAA,CACA,IAAAE,EAAAhU,OAAA+F,KAAA4N,GAAAzN,OACA,OAAA8N,EACAf,EAAAW,OACiC,CACjC,IAAAK,EAAA,EACAlO,EAAAO,QAAA,SAAAzF,GACA,IAAAwC,EAAAsQ,EAAA9S,GACAwC,aAAAwF,OAAAxF,EAAAxD,OAAA0M,GACA0H,MAGAA,IAAAD,EACAf,EAAAjP,EAAA8J,QAEAU,EAAAmF,SAIAlF,EAAA,CAA0CyF,IAAArT,EAAAsT,MAAA,KAG1CpO,EAAAO,QAAA,SAAAzF,GACA,IAAAN,EAAA+S,EAAAzS,QACAsB,IAAA5B,EACAsT,IAEA7P,EAAAgK,KAAAzN,EACA,SAAAA,GAAsDqT,EAAA/S,GAAAN,EAAsBwT,EAAAlT,IAC5E,SAAAN,GAAsDoT,EAAA9S,GAAAN,EAAqBwT,EAAAlT,OAI3EiT,GAAAD,EACA,IAAAC,GACAb,EAAAW,IAIA,WACA5T,OAAA+F,KAAAuN,GAAAhN,QAAA,SAAAzF,GACA,IAAA6L,EAAA1I,EAAAwP,GAAAF,EAAAzS,IACA,oBAAA6L,EAAAoB,QACApB,EAAAoB,cAMAvE,oBAAA,SAAA4J,EAAAvI,EAAAwI,GAeA/G,EAAA9C,oBAAA4J,EAAAvI,EAAAwI,IAEAjO,wBAAA,EACA6I,KAAA,SAAAzN,EAAA0P,EAAAC,EAAAC,GA0BA,OAAAnM,EAAAwP,GAAAjT,GAAAyN,KAAAiC,EAAAC,EAAAC,IAEAiE,SAAA,SAAAd,EAAArD,EAAAC,EAAAC,GA4BA,IAAAzL,EAAAuB,MAAAD,QAAAsN,GAAA,MAIA,OAHAtT,OAAA+F,KAAAuN,GAAAhN,QAAA,SAAAzF,GACA6D,EAAA7D,GAAAmD,EAAAwP,GAAAF,EAAAzS,IAAAmN,KAAAiC,EAAAC,EAAAC,KAEAnM,EAAA0P,KAAAhP,IAEA8N,QAAA,SAAA6B,EAAA3H,GAiBA,IAAA4H,EAAA9B,EAAA6B,GACA,OAAA3H,EAAAiG,EAAA2B,EAAA5H,GAAA4H,GAEAC,KAAA,SAAAhU,GAaA,WAAAgP,EAAAhP,IAEAiU,UAAA,SAAAhG,GAaA,WAAAoB,EAAApB,IAGAiG,2BAAA,CACAtU,IAAA,WAAkC,OAAAqM,GAClCnG,IAAA,SAAA9F,GAAuCiM,EAAAjM,IAEvCmU,+BAAAjI,EACAyF,UAAA,WACA,GAAApN,EAAA0G,OAAA1G,EAAA0G,MAAAmJ,gBACA,IAAyB,UAAA9L,MAAqB,MAAAxF,GAAY,OAAAA,EAAA6P,QAI1D0B,eAAA,SAAAC,EAAA9B,GAMA,IAAA/O,EAAAyP,GAAAoB,GACA,OAAA7Q,EAAAuQ,KAAAM,GAEA,IAAA5B,EACAzE,EACAsG,EAAA,IAAA9Q,EACA,SAAArE,EAAA0D,GACA4P,EAAAtT,EACA6O,EAAAnL,GAEA,WACA4P,EAAA,KACAzE,EAAA,KACAuE,SAOA,OAJA8B,EAAA7G,KACA,SAAA1C,GAAkC2H,KAAA3H,IAClC,SAAAjI,GAAkCmL,KAAAnL,KAElCyR,KAaA,OARA9U,OAAA0G,iBAAA1C,EAAAiI,EAAAzC,sBAAA8C,IAEAtI,EAAAqO,aAAA,SAAA9R,GACAgF,EAAA5B,cAAA,WACA,MAAApD,KAIA,CACAuP,sBACA9L,UACAgJ,mBAIA7I,EAAA,4EAAAwE,EAAAoM,GAOA,OAJApM,EAAAtB,UAAAD,OAAA,SACApD,QAAA+Q,EAAA/Q,UAGA+Q,EAAA/Q,UAGAD,EAAAG,EAAA,qBACAH,EAAAE,SAAAF,EAAAC,QACAD,EAAAiR,SAAAjR,EAAAC,QAthEA,GAmiEO,IAAAA,EAAAD,EAAAC,QACAC,EAAAF,EAAAE,SACAF,EAAAiR,8DC9iEP,IAAAC,EAGAA,EAAA,WACA,OAAAlM,KADA,GAIA,IAEAkM,KAAA,IAAAC,SAAA,iBACC,MAAA7R,GAED,kBAAAwB,SAAAoQ,EAAApQ,QAOAxF,EAAAD,QAAA6V,4DCbAE,EAAA,GACA,SAAAC,EAAA/R,GAIA,IAAA2H,EAAA3H,EAAAsG,OACAmH,EAAA9F,EAAA8F,GAKA9F,EAAA+F,OACA/F,EAAA7B,SAAAgM,UACAA,EAAArE,IAKAqE,EAAArE,GAAA9F,EAGA,IAAAhL,OAAA+F,KAAAoP,GAAAjP,QACApC,WAAA,WACA,IAAA6P,EAAAwB,EACAA,EAAA,GACAnV,OAAA+F,KAAA4N,GAAArN,QAAA,SAAA4K,GACA,IAAA1C,EAAAmF,EAAAzC,GACA1C,EAAAqC,UACAwE,EAAA7G,EAAAqC,WAEArC,SACA6G,EAAA7G,SAEA8G,QAAAC,IAAA,2CAAA/G,EAAAsC,IACAwE,QAAAC,IAAA/G,GACAA,EAAAqC,WACAyE,QAAAC,IAAA/G,EAAAqC,UAAAqC,UAGS,IAGTsC,EAAA,KAAQlM,iBAAA,QAAA8L,GAER,IAAAK,EAAA,WACA,SAAAA,IACA1M,KAAAkC,UAAA,GACAlC,KAAA2M,uBAAA,SAAArS,GACAS,WAAA,WACA,GAAAT,EAAA6P,MACA,UAAArK,MAAAxF,EAAAyF,QAAA,OAAAzF,EAAA6P,OAEA,MAAA7P,GACa,IAgBb,OAbAoS,EAAAvU,UAAAyU,KAAA,SAAAtS,GACA0F,KAAAkC,UAAA3E,QAAA,SAAAsE,GACAA,EAAAvH,MAGAoS,EAAAvU,UAAAmU,kBAAA,SAAAhS,GACA0F,KAAA2M,uBAAArS,GACA0F,KAAA4M,KAAAtS,IAGAoS,EAAAvU,UAAA0U,0BAAA,SAAAvS,GACA0F,KAAA2M,uBAAArS,IAEAoS,EAzBA,GA4BOI,EAAA,IAAAJ,EACA,SAAAJ,EAAAhS,GAEPyS,EAAAzS,IACAwS,EAAAR,kBAAAhS,GAWO,SAAA0S,EAAAvH,GACP,GAAAA,aAAA3F,MAAA,CACA,IAAAmN,EAAAxH,EAAA3O,KAAAiJ,EAAA0F,EAAA1F,QACAoK,EAAA1E,EAAAyH,YAAAzH,EAAA0E,MACA,OACAgD,UAAA,EACArW,KAAAmW,EACAlN,UACAoK,SAIA,OAAA1E,EAEA,IAAAjC,EAAA,WAIO,SAAAuJ,EAAAtH,GACP,OAAAA,aAAA3F,OAAA2F,EAAA3O,OAAA0M,GAAAiC,EAAA1F,UAAAyD,EAKO,SAAAgH,IACP,IAAA/E,EAAA,IAAA3F,MAAA0D,GAEA,OADAiC,EAAA3O,KAAA2O,EAAA1F,QACA0F,ECpHO,SAAS2H,EAAOC,GAEvB,IADA,IAAAC,EAAA,GACAC,EAAA,EAAoBA,EAAA7N,UAAAvC,OAAuBoQ,IAC3CD,EAAAC,EAAA,GAAA7N,UAAA6N,GAEA,OAAArQ,MAAAD,QAAAoQ,IACAA,EAAA9P,QAAA,SAAA1G,GAAoC,OAAAA,KAAA2W,YACpC,IAEA,IAAAF,EAAAnQ,OACAkQ,GACAA,EAAAG,UACAH,QAEA,GAGQD,EAAOC,GACPD,EAAOE,GACf,IAMO,SAAAG,EAAAC,GACP,OAAYF,QAAA,WAAuBE,MAEnC,IAAAC,EAAA,WACA,SAAAA,IACA3N,KAAA4N,WAAA,GAUA,OARAD,EAAAxV,UAAAqV,QAAA,WACAxN,KAAA4N,WAA0BR,EAAOpN,KAAA4N,aAEjCD,EAAAxV,UAAA0V,UAAA,SAAApW,GAEA,OADAuI,KAAA4N,WAAA5O,KAAAvH,GACAA,GAEAkW,EAAAG,KAAA7W,OAAA8W,OAAA,CAAqCP,QAAA,eACrCG,EAZA,MAeA,WACA,SAAAK,EAAA/V,GACA+H,KAAA/H,SAEA+V,EAAA7V,UAAAqV,QAAA,aAJA,cC3CO,SAAAS,EAAAP,GACP,IAEA/R,EAFAuS,EAAAlO,KACAmO,GAAA,EAEA,kBACA,OAAAA,EACAxS,GAEAwS,GAAA,EACAxS,EAAA+R,EAAA9R,MAAAsS,EAAAxO,WACA/D,ICVA,IAcOyS,EAdPC,EAA6B,WAC7B,IAAAC,EAAA,SAAAzX,EAAA0X,GAIA,OAHAD,EAAArX,OAAAuX,gBACA,CAAcC,UAAA,cAAgBvR,OAAA,SAAArG,EAAA0X,GAAsC1X,EAAA4X,UAAAF,IACpE,SAAA1X,EAAA0X,GAA6B,QAAAlW,KAAAkW,IAAAnW,eAAAC,KAAAxB,EAAAwB,GAAAkW,EAAAlW,KAC7BiW,EAAAzX,EAAA0X,IAEA,gBAAA1X,EAAA0X,GAEA,SAAAG,IAAuB1O,KAAAb,YAAAtI,EADvByX,EAAAzX,EAAA0X,GAEA1X,EAAAsB,UAAA,OAAAoW,EAAAtX,OAAAY,OAAA0W,IAAAG,EAAAvW,UAAAoW,EAAApW,UAAA,IAAAuW,IAV6B,GAatBC,EAAA,CAAW3J,MAAA,EAAAxN,WAAA4B,IAElB,SAAAgV,GACA,IAAAQ,EAAA,CACAC,KAAA,WACA,OAAAF,IAGA,SAAAG,IACA,OAAAF,EAGA,SAAAG,EAAAC,EAAAC,EAAA9R,GAGA,YAFA,IAAA8R,IAA+BA,EAAA,QAC/B,IAAA9R,IAAgCA,EAAA6R,EAAA7R,QAChC,CACA0R,KAAA,WACA,OAAAI,GAAA9R,EACAwR,EAEA,CAAwB3J,MAAA,EAAAxN,MAAAwX,EAAAC,QAKxB,SAAAC,EAAAC,GACA,OAAAA,EAGAjS,MAAAD,QAAAkS,GACAf,EAAAW,UAAAI,GAGAA,EANAf,EAAAU,QAUA,SAAArT,EAAA2T,EAAA1B,GACA,OACAmB,KAAA,WACA,IAAAQ,EAAAD,EAAAP,OACA,OAAAQ,EAAArK,KACA2J,EAGA,CAA4B3J,MAAA,EAAAxN,MAAAkW,EAAA2B,EAAA7X,UAM5B,SAAA8X,EAAAF,EAAA1B,GACA,OACAmB,KAAA,WACA,SACA,IAAAQ,EAAAD,EAAAP,OACA,GAAAQ,EAAArK,KACA,OAAA2J,EAEA,GAAAjB,EAAA2B,EAAA7X,OACA,OAAgCwN,MAAA,EAAAxN,MAAA6X,EAAA7X,UAOhC,SAAA+F,EAAA6R,EAAA1B,GACA,QAAAmB,EAAAO,EAAAP,QAAwCA,EAAA7J,KAAY6J,EAAAO,EAAAP,OACpDnB,EAAAmB,EAAArX,OAIA,SAAA+X,EAAAH,GACA,IAAAzT,EAAA,GAEA,OADA4B,EAAA6R,EAAA,SAAA5X,GAA4C,OAAAmE,EAAAqD,KAAAxH,KAC5CmE,EAjEAyS,EAAAU,QAaAV,EAAAW,YAYAX,EAAAc,OAcAd,EAAA3S,MAgBA2S,EAAAkB,SAMAlB,EAAA7Q,UAMA6Q,EAAAmB,WA5EA,CA6ECnB,MAAA,KACD,ICzFOoB,EDyFPC,EAAA,WACA,SAAAA,EAAAC,EAAAC,EAAAC,EAAAX,QACA,IAAAU,IAA+BA,EAAA,QAC/B,IAAAC,IAA6BA,EAAAF,EAAAvS,aAC7B,IAAA8R,IAA+BA,EAAAU,EAAA,GAC/B3P,KAAA0P,QACA1P,KAAA2P,QACA3P,KAAA4P,MACA5P,KAAAiP,QAYA,OAVAQ,EAAAtX,UAAA0W,KAAA,WAEA,OADA7O,KAAAiP,MAAAY,KAAAC,IAAA9P,KAAAiP,MAAA,EAAAjP,KAAA4P,KACA5P,KAAA+P,WAEAN,EAAAtX,UAAA4X,QAAA,WACA,OAAA/P,KAAAiP,QAAAjP,KAAA2P,MAAA,GAAA3P,KAAAiP,QAAAjP,KAAA4P,IACA,KAEA5P,KAAA0P,MAAA1P,KAAAiP,QAEAQ,EApBA,GE5FAO,GFmHA,SAAAC,GAEA,SAAAC,EAAAR,EAAAC,EAAAC,EAAAX,GAIA,YAHA,IAAAU,IAA+BA,EAAA,QAC/B,IAAAC,IAA6BA,EAAAF,EAAAvS,aAC7B,IAAA8R,IAA+BA,EAAAU,EAAA,GAC/BM,EAAAvZ,KAAAsJ,KAAA0P,EAAAC,EAAAC,EAAAX,IAAAjP,KALAqO,EAAA6B,EAAAD,GAOAC,EAAA/X,UAAA4X,QAAA,WACA,OAAAE,EAAA9X,UAAA4X,QAAArZ,KAAAsJ,OAEAkQ,EAAA/X,UAAAgY,SAAA,WAEA,OADAnQ,KAAAiP,MAAAY,KAAAO,IAAApQ,KAAAiP,MAAA,EAAAjP,KAAA2P,MAAA,GACA3P,KAAA+P,WAEAG,EAAA/X,UAAAkV,MAAA,WAEA,OADArN,KAAAiP,MAAAjP,KAAA2P,MACA3P,KAAA+P,WAEAG,EAAA/X,UAAAkY,KAAA,WAEA,OADArQ,KAAAiP,MAAAjP,KAAA4P,IAAA,EACA5P,KAAA+P,WAEAG,EAAA/X,UAAA6P,OAAA,WACA,aAxBA,CA2BCyH,GAED,WACA,SAAAa,EAAAlB,EAAA1B,GACA1N,KAAAoP,WACApP,KAAA0N,KAGA4C,EAAAnY,UAAA0W,KAAA,WAAiD,OAAA7O,KAAA0N,GAAA1N,KAAAoP,SAAAP,SANjD,GEhJA,WACA,SAAAmB,EAAAX,GACArP,KAAAqP,UAEA,OAAAW,EAJA,IAMIO,EAAU,WACd,SAAAC,KAoFA,OAlFAA,EAAArY,UAAAsY,QAAA,WACA,OAAAzQ,KAAA0Q,QAEAF,EAAArY,UAAAwY,QAAA,SAAAtB,GACA,OAAArP,KAAA4Q,OAAAvB,GAAA,IAEAmB,EAAArY,UAAA6G,KAAA,SAAAqQ,GACA,OAAArP,KAAA4Q,OAAAvB,GAAA,IAEAmB,EAAArY,UAAAyY,OAAA,SAAAvB,EAAAwB,GACA,IAAA3C,EAAAlO,KACA8Q,EAAA,IAAAd,EAAAX,GACA,GAAArP,KAAA0Q,OAIA,GAAAG,EAAA,CAEA,IAAAE,EAAA/Q,KAAAgR,MACAhR,KAAAgR,MAAAF,EACAA,EAAAG,KAAAF,EACAA,EAAAlC,KAAAiC,MAEA,CAEA,IAAAI,EAAAlR,KAAA0Q,OACA1Q,KAAA0Q,OAAAI,EACAA,EAAAjC,KAAAqC,EACAA,EAAAD,KAAAH,OAfA9Q,KAAA0Q,OAAAI,EACA9Q,KAAAgR,MAAAF,EAgBA,kBACA,IAAAK,EAAAjD,EAAAwC,OACA,MAAAS,aAAAnB,EAAA,CACA,GAAAmB,IAAAL,EAAA,CAIA,GAAAK,EAAAF,MAAAE,EAAAtC,KAAA,CAEA,IAAAuC,EAAAD,EAAAF,KACAG,EAAAvC,KAAAsC,EAAAtC,KACAsC,EAAAtC,KAAAoC,KAAAG,OAEAD,EAAAF,MAAAE,EAAAtC,KAKAsC,EAAAtC,KAKAsC,EAAAF,OAEA/C,EAAAwC,OAAAxC,EAAAwC,OAAA7B,KACAX,EAAAwC,OAAAO,UAAA7X,IANA8U,EAAA8C,MAAA9C,EAAA8C,MAAAC,KACA/C,EAAA8C,MAAAnC,UAAAzV,IANA8U,EAAAwC,YAAAtX,EACA8U,EAAA8C,WAAA5X,GAaA,MAzBA+X,IAAAtC,QA6BA2B,EAAArY,UAAAiX,SAAA,WACA,IAAAC,EACAgC,EAAArR,KAAA0Q,OACA,OACA7B,KAAA,WACA,OAAAwC,GAGAhC,EAIAA,EAAA7X,MAAA6Z,EAAAhC,QAHAA,EAAA,CAA+BrK,MAAA,EAAAxN,MAAA6Z,EAAAhC,SAK/BgC,IAAAxC,KACAQ,GAT2BV,KAa3B6B,EArFc,IDFd,SAAAhB,GACA,IAAA8B,EAAA,CAAuB9D,QAAA,cACvBgC,EAAA1B,KAAA,WAA8B,OAAAwD,IAF9B,CAGC9B,MAAA,KAsBD,IAAI+B,EAAO,WACX,SAAAC,EAAAC,QACA,IAAAA,IAAkCA,EAAA,MAClCzR,KAAAyR,WACAzR,KAAA0R,OAAA,KACA1R,KAAA2R,WAAA,EACA3R,KAAA4R,eAAA,KACA5R,KAAA4B,WAAA,KA4FA,OA1FA3K,OAAAC,eAAAsa,EAAArZ,UAAA,SAKAf,IAAA,WACA,IAAA8W,EAAAlO,KAsCA,OArCAA,KAAA0R,SACA1R,KAAA0R,OAAA,SAAA7P,EAAAgQ,EAAAC,GACA5D,EAAAtM,aACAsM,EAAAtM,WAAA,IAA+C2O,GAE/C,IAAAwB,EAAA7D,EAAAtM,WAAA6O,UACAsB,GAAA7D,EAAAuD,UAAAvD,EAAAuD,SAAAO,oBACA9D,EAAAuD,SAAAO,mBAAA9D,GAEA,IAOAvS,EAPAsW,EAAA/D,EAAAtM,WAAA5C,KAAA6S,EAAA,CAAAhQ,EAAAgQ,GAAAhQ,GAyBA,OAxBAkQ,GAAA7D,EAAAuD,UAAAvD,EAAAuD,SAAAS,uBACAhE,EAAAuD,SAAAS,sBAAAhE,GAEAA,EAAAuD,UAAAvD,EAAAuD,SAAAU,kBACAjE,EAAAuD,SAAAU,iBAAAjE,EAAArM,EAAAgQ,GAGAlW,EAAA,CACA6R,QAAA,WAEA,GADA7R,EAAA6R,QAAAgE,EAAAY,OACAlE,EAAAyD,YACAM,IACA/D,EAAAuD,UAAAvD,EAAAuD,SAAAY,sBAAA,CACA,IAAAC,EAAApE,EAAAtM,aAAAsM,EAAAtM,WAAA6O,UACA6B,GACApE,EAAAuD,SAAAY,qBAAAnE,MAMAhR,MAAAD,QAAA6U,IACAA,EAAA9S,KAAArD,GAEAA,IAGAqE,KAAA0R,QAEAva,YAAA,EACAqG,cAAA,IAMAgU,EAAArZ,UAAAoa,KAAA,SAAAC,GACA,GAAAxS,KAAA4B,WAAA,CAIA5B,KAAA4R,iBACA5R,KAAA4R,eAAA,IAEA,QAAAa,EAAAzS,KAAA4B,WAAAwN,WAAA9U,EAAAmY,EAAA5D,QAAwEvU,EAAA0K,KAAS1K,EAAAmY,EAAA5D,OACjF7O,KAAA4R,eAAA5S,KAAA,CAAA1E,EAAA9C,MAAAgb,IAEA,MAAAxS,KAAA4R,eAAAzU,OAAA,GACA,IAAAuV,EAAA1S,KAAA4R,eAAAlL,QAAA7E,EAAA6Q,EAAA,GAAAC,EAAAD,EAAA,GACA,IACA,oBAAA7Q,EACAA,EAAAnL,UAAA0C,EAAAuZ,GAGA9Q,EAAA,GAAAnL,KAAAmL,EAAA,GAAA8Q,GAGA,MAAArY,GACoBgS,EAAiBhS,OAKrCkX,EAAArZ,UAAAqV,QAAA,WACAxN,KAAA4B,aACA5B,KAAA4B,WAAA,MAEA5B,KAAA4R,iBACA5R,KAAA4R,eAAAzU,OAAA,GAEA6C,KAAA2R,WAAA,GAEAH,EAAAY,MAAA,aACAZ,EAnGW,IAsGS,WACpB,SAAAoB,IACA,IAAA1E,EAAAlO,KACAA,KAAAsS,cAAA,EACAtS,KAAA6S,OAAA,GACA7S,KAAA8S,QAAA,IAA2BvB,EAAO,CAClCS,mBAAA,WAA6C,OAAA9D,EAAA8D,sBAC7CK,qBAAA,WAA+C,OAAAnE,EAAAmE,0BAG/Cpb,OAAAC,eAAA0b,EAAAza,UAAA,SACAf,IAAA,WACA,OAAA4I,KAAA8S,QAAAN,OAEArb,YAAA,EACAqG,cAAA,IAEAoV,EAAAza,UAAA4a,IAAA,SAAAP,GACA,IAAAtE,EAAAlO,KACA1F,EAAA,CAAiBkY,QAAA3Q,SAAA,MACjB7B,KAAA6S,OAAA7T,KAAA1E,GACA0F,KAAAsS,cACAtS,KAAAgT,KAAA1Y,GAEA,IAAAkT,EAAA,WACAU,EAAAoE,cACApE,EAAA+E,OAAA3Y,GAEA,IAAA4Y,EAAAhF,EAAA2E,OAAArY,QAAAF,GACA4T,EAAA2E,OAAA3U,OAAAgV,EAAA,IAEA,OAAezF,EAAaQ,EAAMT,KAElCoF,EAAAza,UAAA6Z,mBAAA,WACA,IAAA9D,EAAAlO,KACAA,KAAAsS,cAAA,EACAtS,KAAA6S,OAAAtV,QAAA,SAAAjD,GAA0C,OAAA4T,EAAA8E,KAAA1Y,MAE1CsY,EAAAza,UAAAka,qBAAA,WACA,IAAAnE,EAAAlO,KACAA,KAAAsS,cAAA,EACAtS,KAAA6S,OAAAtV,QAAA,SAAAjD,GAA0C,OAAA4T,EAAA+E,OAAA3Y,MAE1CsY,EAAAza,UAAA6a,KAAA,SAAA1Y,GACA,IAAA4T,EAAAlO,KACA1F,EAAAuH,SAAAvH,EAAAkY,MAAA,SAAAnb,GAA2C,OAAA6W,EAAA4E,QAAAP,KAAAlb,MAE3Cub,EAAAza,UAAA8a,OAAA,SAAA3Y,GACAA,EAAAuH,UACAvH,EAAAuH,SAAA2L,UAEAlT,EAAAuH,SAAA,MAEA+Q,EAAAza,UAAAqV,QAAA,WACAxN,KAAA8S,QAAAtF,YAtDoB,IAiJpB,WACA,SAAA2F,IACAnT,KAAAoT,QAAA,GAEAD,EAAAhb,UAAAkb,UAAA,SAAAb,GACA,IAAAtE,EAAAlO,KACA,gBAAA6B,EAAAgQ,EAAAC,GACA,OAAAU,EAAA,SAAAjc,GACA,IAAA+c,EAAApF,EAAAkF,QAAAlF,EAAAkF,QAAAjW,OAAA,GACAmW,EACAA,EAAAtU,KAAA,WAA6C,OAAA6C,EAAAnL,KAAAmb,EAAAtb,KAG7CsL,EAAAnL,KAAAmb,EAAAtb,SAEa,EAAAub,KAGbqB,EAAAhb,UAAAob,aAAA,SAAA7F,GACA,IAAA4F,EAAA,GACAtT,KAAAoT,QAAApU,KAAAsU,GACA,IAAAjc,EAAAqW,IAGA,OAFA1N,KAAAoT,QAAAI,MACAF,EAAA/V,QAAA,SAAAkW,GAAyC,OAAAA,MACzCpc,IAxBA,GA6BO,SAAAqc,EAAAlB,EAAA/W,GACP,gBAAAoG,EAAAgQ,EAAAC,GAEA,YADA,IAAAD,IAAkCA,EAAA,MAClCW,EAAA,SAAAjc,GAAmC,OAAAsL,EAAAnL,KAAAmb,EAAApW,EAAAlF,KAA0C,KAAAub,IAGtE,SAAA6B,EAAAnB,EAAAlD,GACP,gBAAAzN,EAAAgQ,EAAAC,GAEA,YADA,IAAAD,IAAkCA,EAAA,MAClCW,EAAA,SAAAlY,GAAmC,OAAAgV,EAAAhV,IAAAuH,EAAAnL,KAAAmb,EAAAvX,IAAkD,KAAAwX,KAGrF,WACA,SAAA8B,EAAAlC,GACA1R,KAAA0R,SAEAza,OAAAC,eAAA0c,EAAAzb,UAAA,SACAf,IAAA,WAA0B,OAAA4I,KAAA0R,QAC1Bva,YAAA,EACAqG,cAAA,IAEAoW,EAAAzb,UAAAsD,IAAA,SAAAiS,GACA,WAAAkG,EAAAF,EAAA1T,KAAA0R,OAAAhE,KAEAkG,EAAAzb,UAAAmX,OAAA,SAAA5B,GACA,WAAAkG,EAAAD,EAAA3T,KAAA0R,OAAAhE,KAEAkG,EAAAzb,UAAA0b,GAAA,SAAAhS,EAAAgQ,EAAAC,GACA,OAAA9R,KAAA0R,OAAA7P,EAAAgQ,EAAAC,KAhBA,IAuBS,WACT,SAAAgC,IACA,IAAA5F,EAAAlO,KACAA,KAAA+T,WAAA,EACA/T,KAAAgU,WAAAxE,EAAA1B,KACA9N,KAAAiU,mBAAkCtG,EAAUG,KAC5C9N,KAAA8S,QAAA,IAA2BvB,EAAO,CAClCW,sBAAA,WACAhE,EAAA6F,WAAA,EACA7F,EAAA+F,mBAAA/F,EAAA8F,WAAA9F,EAAA4E,QAAAP,KAAArE,EAAA4E,UAEAT,qBAAA,WACAnE,EAAA6F,WAAA,EACA7F,EAAA+F,mBAAAzG,aAGAxN,KAAAwS,MAAAxS,KAAA8S,QAAAN,MAEAvb,OAAAC,eAAA4c,EAAA3b,UAAA,SACAmF,IAAA,SAAAkV,GACAxS,KAAAgU,WAAAxB,EACAxS,KAAA+T,YACA/T,KAAAiU,mBAAAzG,UACAxN,KAAAiU,mBAAAzB,EAAAxS,KAAA8S,QAAAP,KAAAvS,KAAA8S,WAGA3b,YAAA,EACAqG,cAAA,IAEAsW,EAAA3b,UAAAqV,QAAA,WACAxN,KAAAiU,mBAAAzG,UACAxN,KAAA8S,QAAAtF,YA/BS,GAAT,IEhVW0G,EAJXC,EAAAld,OAAA8W,OAAA,SAAAlT,EAAAyM,GACA,IAAA8M,EAAArZ,WAAAF,EAAA9C,KAAAuP,GAAA,GACA,OAAYkG,QAAA,WAAuB7D,aAAAyK,QAGnC,SAAAC,GACA,SAAAC,EAAAC,GACA,OAAAA,IAAAF,EAAAvG,MAAAyG,IAAAF,EAAAG,YAGAD,aAA6BE,MAG7BF,GAAA,kBAAAA,KAGA,mBAAAA,EAAAG,yBACA,oBAAAH,EAAAI,0BAEAN,EAAAC,sBACAD,EAAAvG,KAAA7W,OAAA8W,OAAA,CACA2G,yBAAA,EACAC,wBAAiCnF,EAAK1B,OAEtCuG,EAAAG,UAAAvd,OAAA8W,OAAA,CACA2G,yBAAA,EACAC,wBAAAR,KArBA,CAuBGD,IAAsBA,EAAiB,KAC1C,IAAIO,EAAY,WAChB,SAAAG,IACA5U,KAAA6U,cAAA,EACA7U,KAAA8U,SAAA,KAqCA,OAnCAF,EAAAzc,UAAA4M,OAAA,WACA/E,KAAA6U,eACA7U,KAAA6U,cAAA,EACA7U,KAAA8U,WACA9U,KAAA8U,SAAAvC,UAAAnZ,GACA4G,KAAAwN,aAIAvW,OAAAC,eAAA0d,EAAAzc,UAAA,2BACAf,IAAA,WACA,OAAA4I,KAAA6U,cAEA1d,YAAA,EACAqG,cAAA,IAEAvG,OAAAC,eAAA0d,EAAAzc,UAAA,2BACAf,IAAA,WACA,OAAA4I,KAAA6U,aACAV,GAEAnU,KAAA8U,WACA9U,KAAA8U,SAAA,IAAoCvD,GAEpCvR,KAAA8U,SAAAtC,QAEArb,YAAA,EACAqG,cAAA,IAEAoX,EAAAzc,UAAAqV,QAAA,WACAxN,KAAA8U,WACA9U,KAAA8U,SAAAtH,UACAxN,KAAA8U,SAAA,OAGAF,EAxCgB,GA0ChBG,EAAA,WACA,SAAAA,KAoCA,OAlCA9d,OAAAC,eAAA6d,EAAA5c,UAAA,SACAf,IAAA,WAMA,OALA4I,KAAAgV,SAGAhV,KAAAgV,OAAA,IAAkCP,GAElCzU,KAAAgV,QAEA7d,YAAA,EACAqG,cAAA,IAEAuX,EAAA5c,UAAA4M,OAAA,WACA/E,KAAAgV,OAMAhV,KAAAgV,kBAAwCP,GAExCzU,KAAAgV,OAAAjQ,SAJA/E,KAAAgV,OAA0Bd,EAAiBM,WAO3CO,EAAA5c,UAAAqV,QAAA,WACAxN,KAAAgV,OAIAhV,KAAAgV,kBAAwCP,GAExCzU,KAAAgV,OAAAxH,UAJAxN,KAAAgV,OAA0Bd,EAAiBpG,MAO3CiH,EArCA,GCxEIE,EAAyB,WAC7B,IAAA3G,EAAA,SAAAzX,EAAA0X,GAIA,OAHAD,EAAArX,OAAAuX,gBACA,CAAcC,UAAA,cAAgBvR,OAAA,SAAArG,EAAA0X,GAAsC1X,EAAA4X,UAAAF,IACpE,SAAA1X,EAAA0X,GAA6B,QAAAlW,KAAAkW,IAAAnW,eAAAC,KAAAxB,EAAAwB,GAAAkW,EAAAlW,KAC7BiW,EAAAzX,EAAA0X,IAEA,gBAAA1X,EAAA0X,GAEA,SAAAG,IAAuB1O,KAAAb,YAAAtI,EADvByX,EAAAzX,EAAA0X,GAEA1X,EAAAsB,UAAA,OAAAoW,EAAAtX,OAAAY,OAAA0W,IAAAG,EAAAvW,UAAAoW,EAAApW,UAAA,IAAAuW,IAV6B,GAiBtB,SAAAwG,EAAAC,GACP,OAAAA,GAAA,oBAAAA,EAAAlQ,MAuDW,WACX,SAAAmQ,EAAAC,GACArV,KAAAqV,eACArV,KAAAyJ,QAAA,KACAzJ,KAAAsV,kBAAA,KACAtV,KAAAuV,UAAA,KACAvV,KAAAwV,KAAA,KAEAJ,EAAAjd,UAAAsd,QAAA,SAAAD,EAAAE,GACA,IAAAxH,EAAAlO,KAoBA,YAnBA,IAAA0V,IAA+BA,EAAA1V,KAAAqV,cAC/BrV,KAAAwV,OACAxV,KAAA8J,gBACA9J,KAAAsV,oBACAtV,KAAAsV,kBAAA,IAAyC7I,EAAA,KAAQ,SAAA7V,EAAA0D,GACjD4T,EAAAqH,UAAA3e,EACAsX,EAAAyH,SAAArb,IACa2K,KAAA,WACbiJ,EAAAoH,kBAAA,KACApH,EAAAqH,UAAA,KACA,IAAAC,EAAAtH,EAAAsH,KAEA,OADAtH,EAAAsH,KAAA,KACAA,OAGAxV,KAAAyJ,QAAA1O,WAAA,WACAmT,EAAAzE,QAAA,KACAyE,EAAAqH,UAAA,OACSG,GACT1V,KAAAsV,mBAEAF,EAAAjd,UAAA4M,OAAA,WACA/E,KAAA8J,gBACA9J,KAAAsV,oBACAtV,KAAA2V,SAA0BnL,KAC1BxK,KAAAsV,kBAAA,OAGAF,EAAAjd,UAAA2R,cAAA,WACA,OAAA9J,KAAAyJ,UACAE,aAAA3J,KAAAyJ,SACAzJ,KAAAyJ,QAAA,OAGA2L,EAAAjd,UAAAqV,QAAA,WACAxN,KAAA8J,kBA7CW,GAqGX,IA0HO8L,GA1HP,SAAA3F,GAEA,SAAA4F,EAAAC,EAAArM,GACA,IAAAyE,EAAA+B,EAAAvZ,KAAAsJ,YAKA,OAJAkO,EAAA8G,QAAA,EACA,oBAAAc,GAAA,kBAAArM,GACAyE,EAAA6H,YAAAD,EAAArM,GAEAyE,EAPI+G,EAASY,EAAA5F,GASb4F,EAAA1d,UAAAqV,QAAA,WACAxN,KAAA+E,SACAkL,EAAA9X,UAAAqV,QAAA9W,KAAAsJ,OAEA6V,EAAA1d,UAAA4M,OAAA,YACA,IAAA/E,KAAAgV,SACArL,aAAA3J,KAAAgV,QACAhV,KAAAgV,QAAA,IAGAa,EAAA1d,UAAA6d,aAAA,SAAAF,EAAArM,GACA,IAAAyE,EAAAlO,KACAA,KAAA+E,SACA/E,KAAAgV,OAAAja,WAAA,WACAmT,EAAA8G,QAAA,EACAc,KACSrM,IAEToM,EAAA1d,UAAA4d,YAAA,SAAAD,EAAArM,GACA,IAAAyE,EAAAlO,MACA,IAAAA,KAAAgV,SAIAhV,KAAAgV,OAAAja,WAAA,WACAmT,EAAA8G,QAAA,EACAc,KACSrM,MArCT,CAwCEkE,GAEF,SAAAsC,GAEA,SAAAgG,IACA,IAAA/H,EAAA+B,EAAAvZ,KAAAsJ,YAEA,OADAkO,EAAA8G,QAAA,EACA9G,EAJI+G,EAASgB,EAAAhG,GAMbgG,EAAA9d,UAAAqV,QAAA,WACAxN,KAAA+E,SACAkL,EAAA9X,UAAAqV,QAAA9W,KAAAsJ,OAEAiW,EAAA9d,UAAA4M,OAAA,YACA,IAAA/E,KAAAgV,SACAkB,cAAAlW,KAAAgV,QACAhV,KAAAgV,QAAA,IAGAiB,EAAA9d,UAAA6d,aAAA,SAAAF,EAAAK,GACAnW,KAAA+E,SACA/E,KAAAgV,OAAAoB,YAAA,WACAN,KACSK,IArBT,CAwBExI,GAEF,WACA,SAAA0I,EAAAP,EAAArM,GACAzJ,KAAAsW,cAAA,EACAtW,KAAA8V,SACA9V,KAAAyJ,UACAzJ,KAAAuW,eAAAvW,KAAAwW,UAAAze,KAAAiI,MAKAqW,EAAAle,UAAAqV,QAAA,WACAxN,KAAA+E,SACA/E,KAAA8V,OAAA,MAKAO,EAAAle,UAAA4M,OAAA,WACA/E,KAAAyW,gBACA9M,aAAA3J,KAAAsW,cACAtW,KAAAsW,cAAA,IAMAD,EAAAle,UAAAue,SAAA,SAAAhB,QACA,IAAAA,IAA+BA,EAAA1V,KAAAyJ,SAC/BzJ,KAAA+E,SACA/E,KAAAsW,aAAAvb,WAAAiF,KAAAuW,eAAAb,IAKAW,EAAAle,UAAAse,YAAA,WACA,WAAAzW,KAAAsW,cAEAD,EAAAle,UAAAqe,UAAA,WACAxW,KAAAsW,cAAA,EACAtW,KAAA8V,QACA9V,KAAA2W,SAGAN,EAAAle,UAAAwe,MAAA,WACA3W,KAAA8V,QACA9V,KAAA8V,UA7CA,IAuDA,WACA,uBAAAc,qBAAA,oBAAAC,mBAAA,CACA,IAAAC,EAAA7f,OAAA8W,OAAA,CACAgJ,YAAA,EACAC,cAAA,WAAwC,aAExCpB,EAAA,SAAAE,EAAArM,QACA,IAAAA,IAAqCA,EAAA,GACrC,IAAA2K,EAAArZ,WAAA,WAAiD,OAAA+a,EAAAgB,IAA8BrN,GAC/EwN,GAAA,EACA,OACAzJ,QAAA,WACAyJ,IAGAA,GAAA,EACAtN,aAAAyK,YAMAwB,EAAA,SAAAE,EAAArM,GACA,IAAA2K,EAAAwC,oBAAAd,EAAA,kBAAArM,EAAA,CAAoFA,gBAAmBrQ,GACvG6d,GAAA,EACA,OACAzJ,QAAA,WACAyJ,IAGAA,GAAA,EACAJ,mBAAAzC,QA/BA,IAyCA,WACA,SAAA8C,EAAAC,GACA,IAAAjJ,EAAAlO,KACAA,KAAAoX,UAAA,WACA,IACAlJ,EAAApI,OAAAqR,IAEA,MAAAE,GACAnJ,EAAA/I,OAAAkS,EAEA,QACAnJ,EAAAoJ,SAAA,IAGAtX,KAAAuX,QAAA3B,EAAA,WAAgD,OAAA1H,EAAAkJ,cAEhDF,EAAA/e,UAAAqV,QAAA,WACAxN,KAAAuX,QAAA/J,WAEA0J,EAAA/e,UAAAqf,SAAA,WAKA,GAJAxX,KAAAsX,UACAtX,KAAAuX,QAAA/J,UACAxN,KAAAoX,aAEApX,KAAAmF,OACA,MAAAnF,KAAAmF,OAEA,OAAAnF,KAAA8F,SA3BA,GC/UA,SAAA2R,EAAAtG,GACA,OAAW+D,EAAU/D,IAAA,oBAAAA,EAAAnM,KAOrB,IAAI0S,EAAe,WACnB,SAAAC,EAAAC,GACAH,EAAAG,GACA5X,KAAA6X,cAAAD,EAGA5X,KAAA6X,cAAA,IAAqCpL,EAAA,KAAY,SAAAqL,EAAAC,GACjD,IAAAC,GAAA,EACAJ,EAAA,SAAApgB,GACAwgB,EAIwBre,EAAA,KAAqB,WAAc,OAAAme,EAAAtgB,KAH3DsgB,EAAAtgB,IAKiB,SAAA6f,GACjBW,EAIwBre,EAAA,KAAqB,WAAc,OAAAoe,EAAAV,KAH3DU,EAAAV,KAMAW,GAAA,IA6EA,OAzEAL,EAAA3T,IAAA,SAAAiU,GACA,WAAAN,EAAmClL,EAAA,KAAY9B,KAAAsN,GAAAhT,KAAA,cAAAsF,GAG/C,QAAAzS,KAAAyS,EACA,GAAAA,EAAAnS,eAAAN,GACA,OAAAyS,EAAAzS,OAKA6f,EAAAO,KAAA,SAAAD,GAGA,WAAAN,EAAmClL,EAAA,KAAYnC,IAAA2N,GAAAhT,KAAA,SAAAkT,GAAuC,OAAAA,EAAA3gB,OAAsB,SAAA6f,GAAkB,OAAAA,EAAA7f,UAE9HmgB,EAAAG,QAAA,SAAAtgB,GACA,WAAAmgB,EAAmClL,EAAA,KAAYjB,KAAAhU,KAE/CmgB,EAAAI,OAAA,SAAAvgB,GACA,WAAAmgB,EAAmClL,EAAA,KAAYhB,UAAAjU,KAE/CmgB,EAAAxf,UAAA8M,KAAA,SAAAmT,EAAAC,GACA,IAAAC,GAAA,EAKA3U,EAAA,IAAAgU,EAAA3X,KAAA6X,cAAA5S,KAAAmT,GAAA,SAAA5gB,GACA,OAAA8gB,EAIA,IAA2B7L,EAAA,KAAY,SAAAqL,EAAAC,GACnBpe,EAAA,KAAqB,WACzC,IAAAgC,EACA,IACAA,EAAAyc,EAAA5gB,GAEA,MAAA+gB,GAEA,YADAR,EAAAQ,GAGAT,EAAAnc,OAbAyc,EAAA5gB,IAiBS6gB,GAAA,SAAAhB,GACT,OAAAiB,EAIA,IAA2B7L,EAAA,KAAY,SAAAqL,EAAAC,GACnBpe,EAAA,KAAqB,WACzC,IAAAgC,EACA,IACAA,EAAA0c,EAAAhB,GAEA,MAAAkB,GAEA,YADAR,EAAAQ,GAGAT,EAAAnc,OAbA0c,EAAAhB,MAmBA,OADAiB,GAAA,EACA3U,GAEAgU,EAAAxf,UAAAqgB,MAAA,SAAAH,GACA,OAAArY,KAAAiF,KAAA,KAAAoT,IAEAV,EApGmB,GCXfc,EAAyB,WAC7B,IAAAnK,EAAA,SAAAzX,EAAA0X,GAIA,OAHAD,EAAArX,OAAAuX,gBACA,CAAcC,UAAA,cAAgBvR,OAAA,SAAArG,EAAA0X,GAAsC1X,EAAA4X,UAAAF,IACpE,SAAA1X,EAAA0X,GAA6B,QAAAlW,KAAAkW,IAAAnW,eAAAC,KAAAxB,EAAAwB,GAAAkW,EAAAlW,KAC7BiW,EAAAzX,EAAA0X,IAEA,gBAAA1X,EAAA0X,GAEA,SAAAG,IAAuB1O,KAAAb,YAAAtI,EADvByX,EAAAzX,EAAA0X,GAEA1X,EAAAsB,UAAA,OAAAoW,EAAAtX,OAAAY,OAAA0W,IAAAG,EAAAvW,UAAAoW,EAAApW,UAAA,IAAAuW,IAV6B,GAiB7BlW,EAAAmC,KAGA,qBAAAnC,EAAAyC,UACAzC,EAAAyC,QAAqByc,GAErB,IAAAgB,EAAA,cAaA,IAAIC,EAAoB,WACxB,SAAAC,EAAAxY,GACAJ,KAAA6Y,WAAA,EACA7Y,KAAA8Y,SAAA1Y,EACAJ,KAAA+Y,aAAA,EACA/Y,KAAAgZ,gBAAA/hB,OAAAY,OAAA,MA0FA,OAxFA+gB,EAAAzgB,UAAA8gB,YAAA,SAAAC,GACAlZ,KAAA6Y,UAAAK,GAEAN,EAAAzgB,UAAAghB,YAAA,SAAAC,EAAAC,GACA,IAAAnL,EAAAlO,KACAsZ,EAAAC,SAAAvZ,KAAA+Y,cACA,WAAA9d,QAAA,SAAA6c,EAAAC,GACA7J,EAAA8K,gBAAAM,GAAA,CACAxB,UACAC,UAEA7J,EAAAsL,MAAA,CACAC,SAAAvL,EAAA2K,UACAS,MACAF,SACAC,YAIAT,EAAAzgB,UAAAuhB,cAAA,SAAAC,GACA,IAAA5Z,EACA,IACAA,EAAA/F,KAAAC,MAAA0f,GAEA,MAAArf,GAEA,OAEAyF,KAAA0Z,YAGA,IAAAzZ,KAAA6Y,WAAA9Y,EAAA0Z,WAAAzZ,KAAA6Y,WAGA7Y,KAAA4Z,eAAA7Z,KAEA6Y,EAAAzgB,UAAAyhB,eAAA,SAAAC,GACA,IAAA3L,EAAAlO,KACA,GAAA6Z,EAAAC,IAAA,CACA,IAAAC,EAAAF,EACA,IAAA7Z,KAAAgZ,gBAAAe,EAAAD,KAEA,YADAvN,QAAAyN,KAAA,4BAGA,IAAAC,EAAAja,KAAAgZ,gBAAAe,EAAAD,KAEA,UADA9Z,KAAAgZ,gBAAAe,EAAAD,KACAC,EAAA1C,IAAA,CACA,IAAAA,EAAA0C,EAAA1C,IAQA,OAPA0C,EAAA1C,IAAAlK,WACAkK,EAAA,IAAAvX,MACAuX,EAAAvgB,KAAAijB,EAAA1C,IAAAvgB,KACAugB,EAAAtX,QAAAga,EAAA1C,IAAAtX,QACAsX,EAAAlN,MAAA4P,EAAA1C,IAAAlN,YAEA8P,EAAAlC,OAAAV,GAGA4C,EAAAnC,QAAAiC,EAAAG,SAnBA,CAsBA,IAAAC,EAAAN,EACAP,EAAAa,EAAAb,IACA3d,EAAAqE,KAAA8Y,SAAAY,cAAAS,EAAAf,OAAAe,EAAAd,MACA1d,EAAAsJ,KAAA,SAAA5N,GACA6W,EAAAsL,MAAA,CACAC,SAAAvL,EAAA2K,UACAiB,IAAAR,EACAY,IAAA7iB,EACAggB,SAAAje,KAES,SAAAkB,GACTA,EAAAsG,kBAAAd,QAEAxF,EAAAsG,OAA2BoM,EAA8B1S,EAAAsG,SAEzDsN,EAAAsL,MAAA,CACAC,SAAAvL,EAAA2K,UACAiB,IAAAR,EACAY,SAAA9gB,EACAie,IAAqBrK,EAA8B1S,SAInDse,EAAAzgB,UAAAqhB,MAAA,SAAAK,GACA,IAAAO,EAAApgB,KAAAqgB,UAAAR,GAEA7Z,KAAA8Y,SAAAK,YAAAiB,IAEAxB,EA/FwB,GA0LxB0B,GAtFA,SAAArK,GAEA,SAAAsK,EAAAC,EAAApkB,GACA,IAAA8X,EAAA+B,EAAAvZ,KAAAsJ,YACAya,EAAA,KACAvM,EAAAwM,QAAAxM,EAAAL,UAAA2M,EAAA3iB,OAAA,8CAAAgiB,GACA3L,EAAAyM,UAAAjB,cAAAG,IACS,SAAAxC,GAGToD,GACAA,EAAApD,MAGAnJ,EAAAyM,UAAA,IAA8BhC,EAAoB,CAClDQ,YAAA,SAAAU,GACA3L,EAAAwM,QAAAE,YAAAf,IAEAH,cAAA,SAAAN,EAAAC,GAEA,OAAApe,QAAA6c,QAAA,SAGA5J,EAAAyM,UAAA1B,YAAA/K,EAAAwM,QAAAG,SAEA,IAAAC,EAAA,KACA,qBAAAngB,KAAAogB,SAAA,oBAAApgB,KAAAogB,QAAAC,UAEAF,EAAAngB,KAAAogB,QAAAC,YAEA,qBAAArgB,KAAAsgB,YAEAH,EAAAngB,KAAAsgB,UAAA3iB,EAAA4iB,SAAAtW,EAAAuW,QAGAjN,EAAAkN,gBAAAlN,EAAAyM,UAAAxB,YAAAT,EAAA,CACAxK,EAAAwM,QAAAG,QACAzkB,EACA0kB,IAEA5M,EAAAmN,WAAA,IAAApgB,QAAA,SAAA6c,EAAAC,GACA0C,EAAA1C,EACA7J,EAAAkN,gBAAAnW,KAAA,SAAAqW,GAEA,IADA,IAAAC,EAAA,GACAhlB,EAAA,EAA+BA,EAAA+kB,EAAAne,OAA6B5G,IAC5DglB,EAAAD,EAAA/kB,IAAAilB,EAAAF,EAAA/kB,GAAAklB,GAEA3D,EAAAyD,IACa,SAAAjhB,GACbyd,EAAAzd,GACA4T,EAAAwN,SAAA,yBAAAtlB,EAAAkE,OAIA,IAAAmhB,EAAA,SAAArC,EAAAC,GACA,OAAAnL,EAAAyN,SAAAvC,EAAAC,IAEAmC,EAAA,SAAApC,EAAAqC,GACA,kBACA,IAAApC,EAAAnc,MAAA/E,UAAAiK,MAAA1L,KAAAgJ,UAAA,GACA,OAAA+b,EAAArC,EAAAC,KAGA,OAAAnL,EA9DIuK,EAAS8B,EAAAtK,GAgEbsK,EAAApiB,UAAAyjB,eAAA,WACA,OAAA5b,KAAAqb,YAEAd,EAAApiB,UAAAwjB,SAAA,SAAAvC,EAAAC,GACA,IAAAnL,EAAAlO,KACA,WAAA/E,QAAA,SAAA6c,EAAAC,GACA7J,EAAAkN,gBAAAnW,KAAA,WACAiJ,EAAAyM,UAAAxB,YAAAC,EAAAC,GAAApU,KAAA6S,EAAAC,IACaA,MAGbwC,EAAApiB,UAAAujB,SAAA,SAAA3b,EAAA0F,GACA8G,QAAA9G,MAAA1F,GACAwM,QAAAsP,KAAApW,IA9EA,CAiFEkI,GAKF,WACA,SAAA2M,EAAAwB,EAAAC,GACA,IAAA7N,EAAAlO,KACAA,KAAAgc,gBAAAD,EACA/b,KAAA2a,UAAA,IAA6BhC,EAAoB,CACjDQ,YAAA,SAAAU,GACAiC,EAAAjC,IAEAH,cAAA,SAAAN,EAAAC,GAAoD,OAAAnL,EAAA0L,eAAAR,EAAAC,MAsEpD,OAnEAiB,EAAAniB,UAAA8jB,UAAA,SAAApC,GACA7Z,KAAA2a,UAAAjB,cAAAG,IAEAS,EAAAniB,UAAAyhB,eAAA,SAAAR,EAAAC,GACA,GAAAD,IAAAV,EACA,OAAA1Y,KAAAkc,WAAA7C,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,IAAArZ,KAAAgc,iBAAA,oBAAAhc,KAAAgc,gBAAA5C,GACA,OAAAne,QAAA8c,OAAA,IAAAjY,MAAA,qCAAAsZ,IAEA,IACA,OAAAne,QAAA6c,QAAA9X,KAAAgc,gBAAA5C,GAAAxd,MAAAoE,KAAAgc,gBAAA3C,IAEA,MAAA/e,GACA,OAAAW,QAAA8c,OAAAzd,KAGAggB,EAAAniB,UAAA+jB,WAAA,SAAAhD,EAAA9iB,EAAA+lB,GACA,IAAAjO,EAAAlO,KAEA,GADAA,KAAA2a,UAAA1B,YAAAC,GACAlZ,KAAAgc,gBAAA,CAEA,IAAAI,EAAA,GACA,QAAAC,KAAArc,KAAAgc,gBACA,oBAAAhc,KAAAgc,gBAAAK,IACAD,EAAApd,KAAAqd,GAGA,OAAAphB,QAAA6c,QAAAsE,GAgBA,OAdAD,IAEA,qBAAAA,EAAAG,gBACAH,EAAA,WAEA,qBAAAA,EAAAI,OACA,qBAAAJ,EAAAI,MAAAC,WACAL,EAAAI,MAAA,MAIAJ,EAAAM,YAAA,EACA9hB,KAAAogB,QAAAI,OAAAgB,IAEA,IAAAlhB,QAAA,SAAA6c,EAAAC,GAEApd,KAAAogB,QAAA,CAAA3kB,GAAA,WAEA,IADA,IAAAuF,EAAA,GACA4R,EAAA,EAAgCA,EAAA7N,UAAAvC,OAAuBoQ,IACvD5R,EAAA4R,GAAA7N,UAAA6N,GAEA,IAAAmP,EAAA/gB,EAAA,GAEA,GADAuS,EAAA8N,gBAAAU,EAAA7kB,SACAqW,EAAA8N,gBAAA,CAIA,IAAAI,EAAA,GACA,QAAAC,KAAAnO,EAAA8N,gBACA,oBAAA9N,EAAA8N,gBAAAK,IACAD,EAAApd,KAAAqd,GAGAvE,EAAAsE,QATArE,EAAA,IAAAjY,MAAA,wBAUaiY,MAGbuC,EA9EA,ICvJO,SAAAqC,EAAAC,EAAAC,GAEP,OADAC,EAAAF,EAAAC,EAAA,EAAAD,EAAAzf,OAAA,MACAyf,EAEA,SAAAG,EAAAC,EAAAH,EAAAI,EAAAC,EAAAC,EAAAC,GAEA,IADA,IAAAC,EAAAJ,EAAAK,EAAAJ,EAAA,EACA3mB,EAAA0mB,EAAoB1mB,GAAA4mB,EAAS5mB,IAC7B6mB,EAAA7mB,GAAAymB,EAAAzmB,GAEA,IAAAA,EAAA0mB,EAAoB1mB,GAAA4mB,EAAS5mB,IAC7B8mB,EAAAH,EAEAF,EAAAzmB,GAAA6mB,EAAAE,KAEAA,EAAAH,EAEAH,EAAAzmB,GAAA6mB,EAAAC,KAEAR,EAAAO,EAAAE,GAAAF,EAAAC,IAAA,EAEAL,EAAAzmB,GAAA6mB,EAAAE,KAIAN,EAAAzmB,GAAA6mB,EAAAC,KAIA,SAAAP,EAAAE,EAAAH,EAAAI,EAAAE,EAAAC,GACA,KAAAD,GAAAF,GAAA,CAGA,IAAAC,EAAAD,GAAAE,EAAAF,GAAA,IACAH,EAAAE,EAAAH,EAAAI,EAAAC,EAAAE,GACAN,EAAAE,EAAAH,EAAAK,EAAA,EAAAC,EAAAC,GACAP,EAAAG,EAAAE,GAAAF,EAAAE,EAAA,QAMAH,EAAAC,EAAAH,EAAAI,EAAAC,EAAAC,EAAAC,IC7GA,IAAAG,EAAA,WAKA,SAAAA,EAAAC,EAAAC,EAAAC,EAAAC,GAEA3d,KAAAwd,gBACAxd,KAAAyd,iBACAzd,KAAA0d,gBACA1d,KAAA2d,iBAcA,OATAJ,EAAAplB,UAAAylB,eAAA,WACA,OAAA5d,KAAAwd,cAAAxd,KAAAyd,gBAKAF,EAAAplB,UAAA0lB,eAAA,WACA,OAAA7d,KAAA0d,cAAA1d,KAAA2d,gBAEAJ,EAxBA,GCFA,SAAAO,EAAAd,GACA,OACAe,UAAA,WAAgC,OAAAf,EAAA7f,QAChC6gB,kBAAA,SAAAC,GAA2C,OAAAjB,EAAA5f,WAAA6gB,KAGpC,SAAAC,EAAAC,EAAAC,EAAAC,GACP,WAAeC,EAAOR,EAAAK,GAAAL,EAAAM,IAAAG,YAAAF,GAKtB,ICAIG,EDAJ/b,EAAA,WACA,SAAAA,KAOA,OALAA,EAAAgc,OAAA,SAAAC,EAAA3e,GACA,IAAA2e,EACA,UAAA5e,MAAAC,IAGA0C,EARA,GAWAkc,EAAA,WACA,SAAAA,KAsBA,OALAA,EAAAC,KAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAA7hB,GACA,QAAA5G,EAAA,EAAuBA,EAAA4G,EAAY5G,IACnCwoB,EAAAC,EAAAzoB,GAAAsoB,EAAAC,EAAAvoB,IAGAooB,EAvBA,GAqCAM,EAAA,KAUIC,EAAgB,WAIpB,SAAAC,IACAnf,KAAAof,UAAA,GACApf,KAAAqf,gBAAAC,OAAAC,UACAvf,KAAAwf,gBAAAF,OAAAC,UACAvf,KAAAyf,gBAAA,EACAzf,KAAA0f,gBAAA,EAgEA,OA3DAP,EAAAhnB,UAAAwnB,eAAA,YAEA3f,KAAAyf,gBAAA,GAAAzf,KAAA0f,gBAAA,IAEA1f,KAAAof,UAAApgB,KAAA,IAAoCue,EAAUvd,KAAAqf,gBAAArf,KAAAyf,gBAAAzf,KAAAwf,gBAAAxf,KAAA0f,kBAG9C1f,KAAAyf,gBAAA,EACAzf,KAAA0f,gBAAA,EACA1f,KAAAqf,gBAAAC,OAAAC,UACAvf,KAAAwf,gBAAAF,OAAAC,WASAJ,EAAAhnB,UAAAynB,mBAAA,SAAAC,EAAAC,GAEA9f,KAAAqf,gBAAAxP,KAAAC,IAAA9P,KAAAqf,gBAAAQ,GACA7f,KAAAwf,gBAAA3P,KAAAC,IAAA9P,KAAAwf,gBAAAM,GACA9f,KAAAyf,mBASAN,EAAAhnB,UAAA4nB,mBAAA,SAAAF,EAAAC,GAEA9f,KAAAqf,gBAAAxP,KAAAC,IAAA9P,KAAAqf,gBAAAQ,GACA7f,KAAAwf,gBAAA3P,KAAAC,IAAA9P,KAAAwf,gBAAAM,GACA9f,KAAA0f,mBAKAP,EAAAhnB,UAAA6nB,WAAA,WAKA,OAJAhgB,KAAAyf,gBAAA,GAAAzf,KAAA0f,gBAAA,IAEA1f,KAAA2f,iBAEA3f,KAAAof,WAKAD,EAAAhnB,UAAA8nB,kBAAA,WAMA,OALAjgB,KAAAyf,gBAAA,GAAAzf,KAAA0f,gBAAA,IAEA1f,KAAA2f,iBAEA3f,KAAAof,UAAAc,UACAlgB,KAAAof,WAEAD,EAzEoB,GA+EhBb,EAAO,WAIX,SAAA6B,EAAAC,EAAAC,EAAAC,QACA,IAAAA,IAAqDA,EAAA,MACrDtgB,KAAAugB,iBAAAH,EACApgB,KAAAwgB,iBAAAH,EACArgB,KAAAygB,4BAAAH,EACAtgB,KAAA0gB,iBAAA,GACA1gB,KAAA2gB,iBAAA,GA6mBA,OA3mBAR,EAAAhoB,UAAAyoB,iBAAA,SAAAf,EAAAgB,GACA,OAAA7gB,KAAAugB,iBAAAvC,kBAAA6B,KAAA7f,KAAAwgB,iBAAAxC,kBAAA6C,IAEAV,EAAAhoB,UAAA2oB,yBAAA,SAAAC,EAAAC,GACA,OAAAhhB,KAAAugB,iBAAAvC,kBAAA+C,KAAA/gB,KAAAugB,iBAAAvC,kBAAAgD,IAEAb,EAAAhoB,UAAA8oB,yBAAA,SAAAF,EAAAC,GACA,OAAAhhB,KAAAwgB,iBAAAxC,kBAAA+C,KAAA/gB,KAAAwgB,iBAAAxC,kBAAAgD,IAEAb,EAAAhoB,UAAAomB,YAAA,SAAAF,GACA,OAAAre,KAAAkhB,aAAA,EAAAlhB,KAAAugB,iBAAAxC,YAAA,IAAA/d,KAAAwgB,iBAAAzC,YAAA,EAAAM,IAOA8B,EAAAhoB,UAAA+oB,aAAA,SAAA1D,EAAA2D,EAAAzD,EAAA0D,EAAA/C,GACA,IAAAgD,EAAA,KACAC,EAAAthB,KAAAuhB,qBAAA/D,EAAA2D,EAAAzD,EAAA0D,EAAAC,GACA,OAAAhD,EAIAre,KAAAwhB,gBAAAF,GAEAA,GAOAnB,EAAAhoB,UAAAopB,qBAAA,SAAA/D,EAAA2D,EAAAzD,EAAA0D,EAAAC,GACAA,EAAA,MAEA,MAAA7D,GAAA2D,GAAAzD,GAAA0D,GAAAphB,KAAA4gB,iBAAApD,EAAAE,GACAF,IACAE,IAGA,MAAAyD,GAAA3D,GAAA4D,GAAA1D,GAAA1d,KAAA4gB,iBAAAO,EAAAC,GACAD,IACAC,IAGA,GAAA5D,EAAA2D,GAAAzD,EAAA0D,EAAA,CACA,IAAAE,OAAA,EAqBA,OApBA5D,GAAA0D,GACA3e,EAAAgc,OAAAjB,IAAA2D,EAAA,4DAEAG,EAAA,CACA,IAAwB/D,EAAUC,EAAA,EAAAE,EAAA0D,EAAA1D,EAAA,KAGlCF,GAAA2D,GACA1e,EAAAgc,OAAAf,IAAA0D,EAAA,4DAEAE,EAAA,CACA,IAAwB/D,EAAUC,EAAA2D,EAAA3D,EAAA,EAAAE,EAAA,MAIlCjb,EAAAgc,OAAAjB,IAAA2D,EAAA,4DACA1e,EAAAgc,OAAAf,IAAA0D,EAAA,4DAEAE,EAAA,IAEAA,EAGA,IAAAG,EAAA,IAAAC,EAAA,IACA/lB,EAAAqE,KAAA2hB,sBAAAnE,EAAA2D,EAAAzD,EAAA0D,EAAAK,EAAAC,EAAAL,GACAO,EAAAH,EAAA,GACAI,EAAAH,EAAA,GACA,UAAA/lB,EAGA,OAAAA,EAEA,IAAA0lB,EAAA,IAKA,IAAAS,EAAA9hB,KAAAuhB,qBAAA/D,EAAAoE,EAAAlE,EAAAmE,EAAAR,GACAU,EAAA,GAWA,OAJAA,EANAV,EAAA,GAMA,CACA,IAAwB9D,EAAUqE,EAAA,EAAAT,GAAAS,EAAA,KAAAC,EAAA,EAAAT,GAAAS,EAAA,OANlC7hB,KAAAuhB,qBAAAK,EAAA,EAAAT,EAAAU,EAAA,EAAAT,EAAAC,GASArhB,KAAAgiB,mBAAAF,EAAAC,GAGA,OACA,IAAgBxE,EAAUC,EAAA2D,EAAA3D,EAAA,EAAAE,EAAA0D,EAAA1D,EAAA,KAG1ByC,EAAAhoB,UAAA8pB,UAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9C,EAAAsB,EAAAM,EAAA3B,EAAAsB,EAAAM,EAAAkB,EAAAvB,GACA,IAQAwB,EARAC,EAAA,KAAAC,EAAA,KAEAC,EAAA,IAA+B9D,EAC/B+D,EAAAd,EACAe,EAAAd,EACAe,EAAA1B,EAAA,GAAAC,EAAA,GAAAW,EACAe,EAAA9D,OAAA+D,UACAC,EAAAtjB,KAAA0gB,iBAAAvjB,OAAA,EAEA,GAEA0lB,EAAAM,EAAAjB,EAEAW,IAAAI,GAAAJ,EAAAK,GAAAR,EAAAG,EAAA,GAAAH,EAAAG,EAAA,IAEAhD,EAAA6C,EAAAG,EAAA,GACA/C,EAAAD,EAAAsD,EAAAd,EACAxC,EAAAuD,GACAJ,EAAArD,iBAEAyD,EAAAvD,EACAmD,EAAAjD,mBAAAF,EAAA,EAAAC,GACAqD,EAAAN,EAAA,EAAAX,IAIArC,EAAA6C,EAAAG,EAAA,KACA/C,EAAAD,EAAAsD,EAAAd,EACAxC,EAAAuD,GACAJ,EAAArD,iBAEAyD,EAAAvD,EAAA,EACAmD,EAAApD,mBAAAC,EAAAC,EAAA,GACAqD,EAAAN,EAAA,EAAAX,GAEAoB,GAAA,IACAZ,EAAA1iB,KAAA0gB,iBAAA4C,GACApB,EAAAQ,EAAA,GACAO,EAAA,EACAC,EAAAR,EAAAvlB,OAAA,WAESmmB,IAAA,GAIT,GADAR,EAAAE,EAAA/C,oBACAoB,EAAA,IAGA,IAAAkC,EAAA9B,EAAA,KACA+B,EAAA9B,EAAA,KACA,UAAAoB,KAAA3lB,OAAA,GACA,IAAAsmB,EAAAX,IAAA3lB,OAAA,GACAomB,EAAA1T,KAAAO,IAAAmT,EAAAE,EAAA7F,kBACA4F,EAAA3T,KAAAO,IAAAoT,EAAAC,EAAA5F,kBAEAkF,EAAA,CACA,IAAoBxF,EAAUgG,EAAApC,EAAAoC,EAAA,EAAAC,EAAApC,EAAAoC,EAAA,QAG9B,CAEAR,EAAA,IAA+B9D,EAC/B+D,EAAAV,EACAW,EAAAV,EACAW,EAAA1B,EAAA,GAAAC,EAAA,GAAAe,EACAW,EAAA9D,OAAAC,UACA+D,EAAA,EAAAtjB,KAAA2gB,iBAAAxjB,OAAA,EAAA6C,KAAA2gB,iBAAAxjB,OAAA,EACA,GAEA0lB,EAAAM,EAAAb,EAEAO,IAAAI,GAAAJ,EAAAK,GAAAP,EAAAE,EAAA,IAAAF,EAAAE,EAAA,IAEAhD,EAAA8C,EAAAE,EAAA,KACA/C,EAAAD,EAAAsD,EAAAV,EACA5C,EAAAuD,GACAJ,EAAArD,iBAEAyD,EAAAvD,EAAA,EACAmD,EAAApD,mBAAAC,EAAA,EAAAC,EAAA,GACAqD,EAAAN,EAAA,EAAAP,IAIAzC,EAAA8C,EAAAE,EAAA,GACA/C,EAAAD,EAAAsD,EAAAV,EACA5C,EAAAuD,GACAJ,EAAArD,iBAEAyD,EAAAvD,EACAmD,EAAAjD,mBAAAF,EAAA,EAAAC,EAAA,GACAqD,EAAAN,EAAA,EAAAP,GAEAgB,GAAA,IACAX,EAAA3iB,KAAA2gB,iBAAA2C,GACAhB,EAAAK,EAAA,GACAM,EAAA,EACAC,EAAAP,EAAAxlB,OAAA,WAEammB,IAAA,GAGbP,EAAAC,EAAAhD,aAEA,OAAAhgB,KAAAgiB,mBAAAc,EAAAC,IAkBA5C,EAAAhoB,UAAAwpB,sBAAA,SAAAnE,EAAA2D,EAAAzD,EAAA0D,EAAAK,EAAAC,EAAAL,GACA,IAGAqC,EAHA7D,EAAA,EAAAC,EAAA,EACAqC,EAAA,EAAAC,EAAA,EACAG,EAAA,EAAAC,EAAA,EAIAhF,IACAE,IAGA+D,EAAA,KACAC,EAAA,KAEA1hB,KAAA0gB,iBAAA,GACA1gB,KAAA2gB,iBAAA,GAKA,IAgCAkC,EAAAc,EAhCAC,EAAAzC,EAAA3D,GAAA4D,EAAA1D,GACAmG,EAAAD,EAAA,EACAlB,EAAA,IAAAxlB,MAAA2mB,GACAlB,EAAA,IAAAzlB,MAAA2mB,GAGA3B,EAAAd,EAAA1D,EACA4E,EAAAnB,EAAA3D,EAKA6E,EAAA7E,EAAAE,EACA+E,EAAAtB,EAAAC,EAIA0C,EAAAxB,EAAAJ,EACAU,EAAAkB,EAAA,MAeA,IAZApB,EAAAR,GAAA1E,EACAmF,EAAAL,GAAAnB,EAEAE,EAAA,MASAqC,EAAA,EAAgCA,GAAAE,EAAA,IAA4CF,IAAA,CAC5E,IAAAK,EAAA,EACAC,EAAA,EAIA,IAFA7B,EAAAniB,KAAAikB,kBAAA/B,EAAAwB,IAAAxB,EAAA2B,GACAzB,EAAApiB,KAAAikB,kBAAA/B,EAAAwB,IAAAxB,EAAA2B,GACAhB,EAAAV,EAAiDU,GAAAT,EAAgCS,GAAA,GAKjFhD,EADAgD,IAAAV,GAAAU,EAAAT,GAAAM,EAAAG,EAAA,GAAAH,EAAAG,EAAA,GACAH,EAAAG,EAAA,GAGAH,EAAAG,EAAA,KAEA/C,EAAAD,GAAAgD,EAAAX,GAAAG,EAEAsB,EAAA9D,EAGA,MAAAA,EAAAsB,GAAArB,EAAAsB,GAAAphB,KAAA4gB,iBAAAf,EAAA,EAAAC,EAAA,GACAD,IACAC,IAWA,GATA4C,EAAAG,GAAAhD,EACAA,EAAAC,EAAAiE,EAAAC,IACAD,EAAAlE,EACAmE,EAAAlE,IAMA8C,GAAA/S,KAAAqU,IAAArB,EAAAP,IAAAoB,EAAA,GACA7D,GAAA8C,EAAAE,GAGA,OAFApB,EAAA,GAAA5B,EACA6B,EAAA,GAAA5B,EACA6D,GAAAhB,EAAAE,IAAA5D,EAAA,GAAAyE,GAAAzE,EAAA,EAEAjf,KAAAiiB,UAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9C,EAAAsB,EAAAM,EAAA3B,EAAAsB,EAAAM,EAAAkB,EAAAvB,GAKA,KAMA,IAAA8C,GAAAJ,EAAAvG,GAAAwG,EAAAtG,GAAAgG,GAAA,EACA,UAAA1jB,KAAAygB,8BAAAzgB,KAAAygB,4BAAAsD,EAAA/jB,KAAAugB,iBAAA4D,GAMA,OAJA9C,EAAA,MAEAI,EAAA,GAAAsC,EACArC,EAAA,GAAAsC,EACAG,EAAA,GAAAlF,EAAA,GAAAyE,GAAAzE,EAAA,EAEAjf,KAAAiiB,UAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9C,EAAAsB,EAAAM,EAAA3B,EAAAsB,EAAAM,EAAAkB,EAAAvB,IAMA7D,IACAE,IACA,CACA,IAA4BH,EAAUC,EAAA2D,EAAA3D,EAAA,EAAAE,EAAA0D,EAAA1D,EAAA,KAOtC,IAFA6E,EAAAviB,KAAAikB,kBAAA3B,EAAAoB,IAAApB,EAAAuB,GACArB,EAAAxiB,KAAAikB,kBAAA3B,EAAAoB,IAAApB,EAAAuB,GACAhB,EAAAN,EAAiDM,GAAAL,EAAgCK,GAAA,GAKjFhD,EADAgD,IAAAN,GAAAM,EAAAL,GAAAG,EAAAE,EAAA,IAAAF,EAAAE,EAAA,GACAF,EAAAE,EAAA,KAGAF,EAAAE,EAAA,GAEA/C,EAAAD,GAAAgD,EAAAP,GAAAG,EAEAkB,EAAA9D,EAGA,MAAAA,EAAArC,GAAAsC,EAAApC,GAAA1d,KAAA4gB,iBAAAf,EAAAC,GACAD,IACAC,IAMA,GAJA6C,EAAAE,GAAAhD,EAIA+C,GAAA/S,KAAAqU,IAAArB,EAAAX,IAAAwB,GACA7D,GAAA6C,EAAAG,GAGA,OAFApB,EAAA,GAAA5B,EACA6B,EAAA,GAAA5B,EACA6D,GAAAjB,EAAAG,IAAA5D,EAAA,GAAAyE,GAAAzE,EAAA,EAEAjf,KAAAiiB,UAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9C,EAAAsB,EAAAM,EAAA3B,EAAAsB,EAAAM,EAAAkB,EAAAvB,GAKA,KAMA,GAAAqC,GAAAzE,EAAA,CAGA,IAAAmF,EAAA,IAAAlnB,MAAAklB,EAAAD,EAAA,GACAiC,EAAA,GAAAlC,EAAAC,EAAA,EACAxD,EAAAC,KAAA8D,EAAAP,EAAAiC,EAAA,EAAAhC,EAAAD,EAAA,GACAniB,KAAA0gB,iBAAA1hB,KAAAolB,GACAA,EAAA,IAAAlnB,MAAAslB,EAAAD,EAAA,GACA6B,EAAA,GAAA9B,EAAAC,EAAA,EACA5D,EAAAC,KAAA+D,EAAAJ,EAAA6B,EAAA,EAAA5B,EAAAD,EAAA,GACAviB,KAAA2gB,iBAAA3hB,KAAAolB,IAKA,OAAApkB,KAAAiiB,UAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9C,EAAAsB,EAAAM,EAAA3B,EAAAsB,EAAAM,EAAAkB,EAAAvB,IAUAlB,EAAAhoB,UAAAqpB,gBAAA,SAAAF,GAEA,QAAA/qB,EAAA,EAAuBA,EAAA+qB,EAAAnkB,OAAoB5G,IAAA,CAC3C,IAAA8tB,EAAA/C,EAAA/qB,GACA+tB,EAAA/tB,EAAA+qB,EAAAnkB,OAAA,EAAAmkB,EAAA/qB,EAAA,GAAAinB,cAAAxd,KAAAugB,iBAAAxC,YACAwG,EAAAhuB,EAAA+qB,EAAAnkB,OAAA,EAAAmkB,EAAA/qB,EAAA,GAAAmnB,cAAA1d,KAAAwgB,iBAAAzC,YACAyG,EAAAH,EAAA5G,eAAA,EACAgH,EAAAJ,EAAA1G,eAAA,EACA,MAAA0G,EAAA7G,cAAA6G,EAAA5G,eAAA6G,GACAD,EAAA3G,cAAA2G,EAAA1G,eAAA4G,KACAC,GAAAxkB,KAAA8gB,yBAAAuD,EAAA7G,cAAA6G,EAAA7G,cAAA6G,EAAA5G,oBACAgH,GAAAzkB,KAAAihB,yBAAAoD,EAAA3G,cAAA2G,EAAA3G,cAAA2G,EAAA1G,iBACA0G,EAAA7G,gBACA6G,EAAA3G,gBAEA,IAAAgH,EAAA,OACAnuB,EAAA+qB,EAAAnkB,OAAA,GAAA6C,KAAA2kB,eAAArD,EAAA/qB,GAAA+qB,EAAA/qB,EAAA,GAAAmuB,KACApD,EAAA/qB,GAAAmuB,EAAA,GACApD,EAAApjB,OAAA3H,EAAA,KACAA,KAKA,IAAAA,EAAA+qB,EAAAnkB,OAAA,EAAwC5G,GAAA,EAAQA,IAAA,CAChD8tB,EAAA/C,EAAA/qB,GACA+tB,EAAA,EACAC,EAAA,EACA,GAAAhuB,EAAA,GACA,IAAAquB,EAAAtD,EAAA/qB,EAAA,GACAquB,EAAAnH,eAAA,IACA6G,EAAAM,EAAApH,cAAAoH,EAAAnH,gBAEAmH,EAAAjH,eAAA,IACA4G,EAAAK,EAAAlH,cAAAkH,EAAAjH,gBAGA6G,EAAAH,EAAA5G,eAAA,EACAgH,EAAAJ,EAAA1G,eAAA,EAGA,IAJA,IAEAkH,EAAA,EACAC,EAAA9kB,KAAA+kB,eAAAV,EAAA7G,cAAA6G,EAAA5G,eAAA4G,EAAA3G,cAAA2G,EAAA1G,gBACAmG,EAAA,GAAgCA,IAAA,CAChC,IAAAtG,EAAA6G,EAAA7G,cAAAsG,EACApG,EAAA2G,EAAA3G,cAAAoG,EACA,GAAAtG,EAAA8G,GAAA5G,EAAA6G,EACA,MAEA,GAAAC,IAAAxkB,KAAA8gB,yBAAAtD,IAAA6G,EAAA5G,gBACA,MAEA,GAAAgH,IAAAzkB,KAAAihB,yBAAAvD,IAAA2G,EAAA1G,gBACA,MAEA,IAAAqH,EAAAhlB,KAAA+kB,eAAAvH,EAAA6G,EAAA5G,eAAAC,EAAA2G,EAAA1G,gBACAqH,EAAAF,IACAA,EAAAE,EACAH,EAAAf,GAGAO,EAAA7G,eAAAqH,EACAR,EAAA3G,eAAAmH,EAEA,OAAAvD,GAEAnB,EAAAhoB,UAAA8sB,oBAAA,SAAAhW,GACA,GAAAA,GAAA,GAAAA,GAAAjP,KAAAugB,iBAAAxC,YAAA,EACA,SAEA,IAAA1O,EAAArP,KAAAugB,iBAAAvC,kBAAA/O,GACA,wBAAAI,GAAA,QAAA6V,KAAA7V,IAEA8Q,EAAAhoB,UAAAgtB,0BAAA,SAAA3H,EAAAC,GACA,GAAAzd,KAAAilB,oBAAAzH,IAAAxd,KAAAilB,oBAAAzH,EAAA,GACA,SAEA,GAAAC,EAAA,GACA,IAAA0D,EAAA3D,EAAAC,EACA,GAAAzd,KAAAilB,oBAAA9D,EAAA,IAAAnhB,KAAAilB,oBAAA9D,GACA,SAGA,UAEAhB,EAAAhoB,UAAAitB,oBAAA,SAAAnW,GACA,GAAAA,GAAA,GAAAA,GAAAjP,KAAAwgB,iBAAAzC,YAAA,EACA,SAEA,IAAA1O,EAAArP,KAAAwgB,iBAAAxC,kBAAA/O,GACA,wBAAAI,GAAA,QAAA6V,KAAA7V,IAEA8Q,EAAAhoB,UAAAktB,0BAAA,SAAA3H,EAAAC,GACA,GAAA3d,KAAAolB,oBAAA1H,IAAA1d,KAAAolB,oBAAA1H,EAAA,GACA,SAEA,GAAAC,EAAA,GACA,IAAAyD,EAAA1D,EAAAC,EACA,GAAA3d,KAAAolB,oBAAAhE,EAAA,IAAAphB,KAAAolB,oBAAAhE,GACA,SAGA,UAEAjB,EAAAhoB,UAAA4sB,eAAA,SAAAvH,EAAAC,EAAAC,EAAAC,GACA,IAAA2H,EAAAtlB,KAAAmlB,0BAAA3H,EAAAC,GAAA,IACA8H,EAAAvlB,KAAAqlB,0BAAA3H,EAAAC,GAAA,IACA,OAAA2H,EAAAC,GASApF,EAAAhoB,UAAA6pB,mBAAA,SAAAwD,EAAAC,GACA,IAAAf,EAAA,GACA,OAAAc,EAAAroB,QAAA,IAAAsoB,EAAAtoB,OACA,OAAAsoB,EAAAtoB,OAAA,EAAAsoB,EAAAD,EAEA,GAAAxlB,KAAA2kB,eAAAa,IAAAroB,OAAA,GAAAsoB,EAAA,GAAAf,GAAA,CAKA,IAAA/oB,EAAA,IAAAuB,MAAAsoB,EAAAroB,OAAAsoB,EAAAtoB,OAAA,GAIA,OAHAwhB,EAAAC,KAAA4G,EAAA,EAAA7pB,EAAA,EAAA6pB,EAAAroB,OAAA,GACAxB,EAAA6pB,EAAAroB,OAAA,GAAAunB,EAAA,GACA/F,EAAAC,KAAA6G,EAAA,EAAA9pB,EAAA6pB,EAAAroB,OAAAsoB,EAAAtoB,OAAA,GACAxB,EAGAA,EAAA,IAAAuB,MAAAsoB,EAAAroB,OAAAsoB,EAAAtoB,QAGA,OAFAwhB,EAAAC,KAAA4G,EAAA,EAAA7pB,EAAA,EAAA6pB,EAAAroB,QACAwhB,EAAAC,KAAA6G,EAAA,EAAA9pB,EAAA6pB,EAAAroB,OAAAsoB,EAAAtoB,QACAxB,GAWAwkB,EAAAhoB,UAAAwsB,eAAA,SAAAa,EAAAC,EAAAf,GAGA,GAFAjiB,EAAAgc,OAAA+G,EAAAhI,eAAAiI,EAAAjI,cAAA,yDACA/a,EAAAgc,OAAA+G,EAAA9H,eAAA+H,EAAA/H,cAAA,yDACA8H,EAAAhI,cAAAgI,EAAA/H,gBAAAgI,EAAAjI,eAAAgI,EAAA9H,cAAA8H,EAAA7H,gBAAA8H,EAAA/H,cAAA,CACA,IAAAF,EAAAgI,EAAAhI,cACAC,EAAA+H,EAAA/H,eACAC,EAAA8H,EAAA9H,cACAC,EAAA6H,EAAA7H,eAQA,OAPA6H,EAAAhI,cAAAgI,EAAA/H,gBAAAgI,EAAAjI,gBACAC,EAAAgI,EAAAjI,cAAAiI,EAAAhI,eAAA+H,EAAAhI,eAEAgI,EAAA9H,cAAA8H,EAAA7H,gBAAA8H,EAAA/H,gBACAC,EAAA8H,EAAA/H,cAAA+H,EAAA9H,eAAA6H,EAAA9H,eAEAgH,EAAA,OAAqCnH,EAAUC,EAAAC,EAAAC,EAAAC,IAC/C,EAIA,OADA+G,EAAA,SACA,GAeAvE,EAAAhoB,UAAA8rB,kBAAA,SAAApB,EAAAa,EAAAgC,EAAA7B,GACA,GAAAhB,GAAA,GAAAA,EAAAgB,EAEA,OAAAhB,EAIA,IAAA8C,EAAAD,EACAE,EAAA/B,EAAA6B,EAAA,EACAG,EAAAnC,EAAA,MACA,GAAAb,EAAA,GACA,IAAAiD,EAAAH,EAAA,MACA,OAAAE,IAAAC,EAAA,IAGA,IAAAC,EAAAH,EAAA,MACA,OAAAC,IAAAE,EAAAlC,EAAA,EAAAA,EAAA,GAGA1D,EAvnBW,GCtJP6F,GAAyB,WAC7B,IAAA1X,EAAA,SAAAzX,EAAA0X,GAIA,OAHAD,EAAArX,OAAAuX,gBACA,CAAcC,UAAA,cAAgBvR,OAAA,SAAArG,EAAA0X,GAAsC1X,EAAA4X,UAAAF,IACpE,SAAA1X,EAAA0X,GAA6B,QAAAlW,KAAAkW,IAAAnW,eAAAC,KAAAxB,EAAAwB,GAAAkW,EAAAlW,KAC7BiW,EAAAzX,EAAA0X,IAEA,gBAAA1X,EAAA0X,GAEA,SAAAG,IAAuB1O,KAAAb,YAAAtI,EADvByX,EAAAzX,EAAA0X,GAEA1X,EAAAsB,UAAA,OAAAoW,EAAAtX,OAAAY,OAAA0W,IAAAG,EAAAvW,UAAAoW,EAAApW,UAAA,IAAAuW,IAV6B,GAe7BuX,GAAA,iBACAC,GAAA,MACAC,GAAA,QACAC,IAAA,EACA,SAAAC,GAAAC,GAEA,IAAAA,EAAAC,OAAA,CACA,GAAAH,GACA,UAAAtmB,MAAA,2DAA6DwmB,EAAAE,UAAA,aAAAF,EAAAG,KAAA,cAAAH,EAAAI,MAAA,iBAAAJ,EAAAK,SAAA,MAG7Dpa,QAAAyN,KAAA,2DAA0DsM,EAAAE,UAAA,aAAAF,EAAAG,KAAA,cAAAH,EAAAI,MAAA,iBAAAJ,EAAAK,SAAA,MAK1D,GAAAL,EAAAC,SAAAN,GAAAf,KAAAoB,EAAAC,QACA,UAAAzmB,MAAA,mDAOA,GAAAwmB,EAAAG,KACA,GAAAH,EAAAE,WACA,IAAAN,GAAAhB,KAAAoB,EAAAG,MACA,UAAA3mB,MAAA,iJAIA,GAAAqmB,GAAAjB,KAAAoB,EAAAG,MACA,UAAA3mB,MAAA,6HAMA,SAAA8mB,GAAAL,EAAAE,GAKA,OAAAF,GACA,YACA,WACA,WACAE,EAGAA,EAAA,KAAAI,KACAJ,EAAAI,GAAAJ,GAHAA,EAAAI,GAKA,MAEA,OAAAJ,EAEA,IAAA7X,GAAA,GACAiY,GAAA,IACAC,GAAA,iEAeIC,GAAG,WAIP,SAAAC,EAAAC,EAAAT,EAAAC,EAAAC,EAAAC,GACA,kBAAAM,GACAjnB,KAAAumB,OAAAU,EAAAV,QAAA3X,GACA5O,KAAAwmB,UAAAS,EAAAT,WAAA5X,GACA5O,KAAAymB,KAAAQ,EAAAR,MAAA7X,GACA5O,KAAA0mB,MAAAO,EAAAP,OAAA9X,GACA5O,KAAA2mB,SAAAM,EAAAN,UAAA/X,KAMA5O,KAAAumB,OAAAU,GAAArY,GACA5O,KAAAwmB,aAAA5X,GACA5O,KAAAymB,KAAAG,GAAA5mB,KAAAumB,OAAAE,GAAA7X,IACA5O,KAAA0mB,SAAA9X,GACA5O,KAAA2mB,YAAA/X,GACAyX,GAAArmB,OA8LA,OA3LAgnB,EAAAE,MAAA,SAAA3S,GACA,OAAAA,aAAAyS,KAGAzS,IAGA,kBAAAA,EAAAiS,WACA,kBAAAjS,EAAAoS,UACA,kBAAApS,EAAAkS,MACA,kBAAAlS,EAAAmS,OACA,kBAAAnS,EAAAgS,SAEAtvB,OAAAC,eAAA8vB,EAAA7uB,UAAA,UA0BAf,IAAA,WAIA,OAAA+vB,GAAAnnB,OAEA7I,YAAA,EACAqG,cAAA,IAGAwpB,EAAA7uB,UAAAivB,KAAA,SAAA/C,GACA,IAAAA,EACA,OAAArkB,KAEA,IAAAumB,EAAAlC,EAAAkC,OAAAC,EAAAnC,EAAAmC,UAAAC,EAAApC,EAAAoC,KAAAC,EAAArC,EAAAqC,MAAAC,EAAAtC,EAAAsC,SA+BA,YA9BA,IAAAJ,EACAA,EAAAvmB,KAAAumB,OAEA,OAAAA,IACAA,EAAA3X,SAEA,IAAA4X,EACAA,EAAAxmB,KAAAwmB,UAEA,OAAAA,IACAA,EAAA5X,SAEA,IAAA6X,EACAA,EAAAzmB,KAAAymB,KAEA,OAAAA,IACAA,EAAA7X,SAEA,IAAA8X,EACAA,EAAA1mB,KAAA0mB,MAEA,OAAAA,IACAA,EAAA9X,SAEA,IAAA+X,EACAA,EAAA3mB,KAAA2mB,SAEA,OAAAA,IACAA,EAAA/X,IAEA2X,IAAAvmB,KAAAumB,QACAC,IAAAxmB,KAAAwmB,WACAC,IAAAzmB,KAAAymB,MACAC,IAAA1mB,KAAA0mB,OACAC,IAAA3mB,KAAA2mB,SACA3mB,KAEA,IAAAqnB,GAAAd,EAAAC,EAAAC,EAAAC,EAAAC,IASAK,EAAA/sB,MAAA,SAAAzC,GACA,IAAA8vB,EAAAR,GAAAS,KAAA/vB,GACA,OAAA8vB,EAGA,IAAAD,GAAAC,EAAA,IAAA1Y,GAAA4Y,mBAAAF,EAAA,IAAA1Y,IAAA4Y,mBAAAF,EAAA,IAAA1Y,IAAA4Y,mBAAAF,EAAA,IAAA1Y,IAAA4Y,mBAAAF,EAAA,IAAA1Y,KAFA,IAAAyY,GAAAzY,iBAyBAoY,EAAAS,KAAA,SAAAhB,GACA,IAAAD,EAAA5X,GASA,GALYjV,EAAA,OACZ8sB,IAAAiB,QAAA,MAAAb,KAIAJ,EAAA,KAAAI,IAAAJ,EAAA,KAAAI,GAAA,CACA,IAAA3T,EAAAuT,EAAAjsB,QAAAqsB,GAAA,IACA,IAAA3T,GACAsT,EAAAC,EAAAkB,UAAA,GACAlB,EAAAI,KAGAL,EAAAC,EAAAkB,UAAA,EAAAzU,GACAuT,IAAAkB,UAAAzU,IAAA2T,IAGA,WAAAQ,GAAA,OAAAb,EAAAC,EAAA7X,QAEAoY,EAAA9X,KAAA,SAAA0Y,GACA,WAAAP,GAAAO,EAAArB,OAAAqB,EAAApB,UAAAoB,EAAAnB,KAAAmB,EAAAlB,MAAAkB,EAAAjB,WAcAK,EAAA7uB,UAAA0vB,SAAA,SAAAC,GAEA,YADA,IAAAA,IAAsCA,GAAA,GACtCC,GAAA/nB,KAAA8nB,IAEAd,EAAA7uB,UAAA6vB,OAAA,WACA,OAAAhoB,MAEAgnB,EAAAiB,OAAA,SAAArL,GACA,GAAAA,EAGA,IAAAA,aAAAoK,EACA,OAAApK,EAGA,IAAAjhB,EAAA,IAAA0rB,GAAAzK,GAGA,OAFAjhB,EAAAusB,QAAAtL,EAAAuL,OACAxsB,EAAAysB,WAAAxL,EAAAyL,SACA1sB,EATA,OAAAihB,GAYAoK,EAnNO,GAuNPK,GAAA,SAAApX,GAEA,SAAAoX,IACA,IAAAnZ,EAAA,OAAA+B,KAAArU,MAAAoE,KAAAN,YAAAM,KAGA,OAFAkO,EAAAka,WAAA,KACAla,EAAAga,QAAA,KACAha,EAsDA,OA3DI8X,GAASqB,EAAApX,GAObhZ,OAAAC,eAAAmwB,EAAAlvB,UAAA,UACAf,IAAA,WAIA,OAHA4I,KAAAkoB,UACAloB,KAAAkoB,QAAAf,GAAAnnB,OAEAA,KAAAkoB,SAEA/wB,YAAA,EACAqG,cAAA,IAEA6pB,EAAAlvB,UAAA0vB,SAAA,SAAAC,GAEA,YADA,IAAAA,IAAsCA,GAAA,GACtCA,EAQAC,GAAA/nB,MAAA,IAPAA,KAAAooB,aACApoB,KAAAooB,WAAAL,GAAA/nB,MAAA,IAEAA,KAAAooB,aAOAf,EAAAlvB,UAAA6vB,OAAA,WACA,IAAA9N,EAAA,CACAoO,KAAA,GAyBA,OAtBAtoB,KAAAkoB,UACAhO,EAAAiO,OAAAnoB,KAAAkoB,SAEAloB,KAAAooB,aACAlO,EAAAmO,SAAAroB,KAAAooB,YAGApoB,KAAAymB,OACAvM,EAAAuM,KAAAzmB,KAAAymB,MAEAzmB,KAAAumB,SACArM,EAAAqM,OAAAvmB,KAAAumB,QAEAvmB,KAAAwmB,YACAtM,EAAAsM,UAAAxmB,KAAAwmB,WAEAxmB,KAAA0mB,QACAxM,EAAAwM,MAAA1mB,KAAA0mB,OAEA1mB,KAAA2mB,WACAzM,EAAAyM,SAAA3mB,KAAA2mB,UAEAzM,GAEAmN,EA5DA,CA6DEN,IAEFwB,IAAmB/J,EAAE,GACjBA,EAAE,UACFA,EAAE,UACFA,EAAE,UACFA,EAAE,UACFA,EAAE,UACFA,EAAE,UACFA,EAAE,UACFA,EAAE,UACFA,EAAE,UACFA,EAAE,UACFA,EAAE,UACFA,EAAE,UACFA,EAAE,UACFA,EAAE,UACFA,EAAE,UACFA,EAAE,UACFA,EAAE,UACFA,EAAE,UACFA,EAAE,UACFA,GACJ,SAAAgK,GAAAC,EAAAC,GAGA,IAFA,IAAAxO,OAAA9gB,EACAuvB,GAAA,EACA1K,EAAA,EAAqBA,EAAAwK,EAAAtrB,OAA2B8gB,IAAA,CAChD,IAAA2K,EAAAH,EAAArrB,WAAA6gB,GAEA,GAAA2K,GAAA,IAAAA,GAAA,KACAA,GAAA,IAAAA,GAAA,IACAA,GAAA,IAAAA,GAAA,IACA,KAAAA,GACA,KAAAA,GACA,KAAAA,GACA,MAAAA,GACAF,GAAA,KAAAE,GAEA,IAAAD,IACAzO,GAAA2O,mBAAAJ,EAAAd,UAAAgB,EAAA1K,IACA0K,GAAA,QAGAvvB,IAAA8gB,IACAA,GAAAuO,EAAAK,OAAA7K,QAGA,MAEA7kB,IAAA8gB,IACAA,EAAAuO,EAAAM,OAAA,EAAA9K,IAGA,IAAA+K,EAAAT,GAAAK,QACAxvB,IAAA4vB,IAEA,IAAAL,IACAzO,GAAA2O,mBAAAJ,EAAAd,UAAAgB,EAAA1K,IACA0K,GAAA,GAGAzO,GAAA8O,IAEA,IAAAL,IAEAA,EAAA1K,IAOA,OAHA,IAAA0K,IACAzO,GAAA2O,mBAAAJ,EAAAd,UAAAgB,UAEAvvB,IAAA8gB,IAAAuO,EAEA,SAAAQ,GAAAxC,GAEA,IADA,IAAAvM,OAAA9gB,EACA6kB,EAAA,EAAqBA,EAAAwI,EAAAtpB,OAAmB8gB,IAAA,CACxC,IAAA2K,EAAAnC,EAAArpB,WAAA6gB,GACA,KAAA2K,GAAA,KAAAA,QACAxvB,IAAA8gB,IACAA,EAAAuM,EAAAsC,OAAA,EAAA9K,IAEA/D,GAAAqO,GAAAK,SAGAxvB,IAAA8gB,IACAA,GAAAuM,EAAAxI,IAIA,YAAA7kB,IAAA8gB,IAAAuM,EAMA,SAAAU,GAAA+B,GACA,IAAA1xB,EAkBA,OAfAA,EAFA0xB,EAAA1C,WAAA0C,EAAAzC,KAAAtpB,OAAA,YAAA+rB,EAAA3C,OAEA,KAAA2C,EAAA1C,UAAA0C,EAAAzC,KAEA,KAAAyC,EAAAzC,KAAArpB,WAAA,KACA8rB,EAAAzC,KAAArpB,WAAA,QAAA8rB,EAAAzC,KAAArpB,WAAA,QAAA8rB,EAAAzC,KAAArpB,WAAA,QAAA8rB,EAAAzC,KAAArpB,WAAA,UACA,KAAA8rB,EAAAzC,KAAArpB,WAAA,GAEA8rB,EAAAzC,KAAA,GAAA0C,cAAAD,EAAAzC,KAAAsC,OAAA,GAIAG,EAAAzC,KAEQ9sB,EAAA,OACRnC,IAAAkwB,QAAA,aAEAlwB,EAKA,SAAAuwB,GAAAmB,EAAApB,GACA,IAAAsB,EAAAtB,EAEAmB,GADAT,GAEAtO,EAAA,GACAqM,EAAA2C,EAAA3C,OAAAC,EAAA0C,EAAA1C,UAAAC,EAAAyC,EAAAzC,KAAAC,EAAAwC,EAAAxC,MAAAC,EAAAuC,EAAAvC,SASA,GARAJ,IACArM,GAAAqM,EACArM,GAAA,MAEAsM,GAAA,SAAAD,KACArM,GAAA2M,GACA3M,GAAA2M,IAEAL,EAAA,CACA,IAAAtT,EAAAsT,EAAAhsB,QAAA,KACA,QAAA0Y,EAAA,CAEA,IAAAmW,EAAA7C,EAAAuC,OAAA,EAAA7V,GACAsT,IAAAuC,OAAA7V,EAAA,GACAA,EAAAmW,EAAA7uB,QAAA,MACA,IAAA0Y,EACAgH,GAAAkP,EAAAC,GAAA,IAIAnP,GAAAkP,EAAAC,EAAAN,OAAA,EAAA7V,IAAA,GACAgH,GAAA,IACAA,GAAAkP,EAAAC,EAAAN,OAAA7V,EAAA,QAEAgH,GAAA,IAEAsM,IAAA2C,cACAjW,EAAAsT,EAAAhsB,QAAA,MACA,IAAA0Y,EACAgH,GAAAkP,EAAA5C,GAAA,IAIAtM,GAAAkP,EAAA5C,EAAAuC,OAAA,EAAA7V,IAAA,GACAgH,GAAAsM,EAAAuC,OAAA7V,IAGA,GAAAuT,EAAA,CAEA,GAAAA,EAAAtpB,QAAA,QAAAspB,EAAArpB,WAAA,SAAAqpB,EAAArpB,WAAA,IACA,IAAAwrB,EAAAnC,EAAArpB,WAAA,GACAwrB,GAAA,IAAAA,GAAA,KACAnC,EAAA,IAAAlN,OAAA+P,aAAAV,EAAA,QAAAnC,EAAAsC,OAAA,SAGA,GAAAtC,EAAAtpB,QAAA,QAAAspB,EAAArpB,WAAA,IACAwrB,EAAAnC,EAAArpB,WAAA,GACAwrB,GAAA,IAAAA,GAAA,KACAnC,EAAAlN,OAAA+P,aAAAV,EAAA,QAAAnC,EAAAsC,OAAA,IAIA7O,GAAAkP,EAAA3C,GAAA,GAUA,OARAC,IACAxM,GAAA,IACAA,GAAAkP,EAAA1C,GAAA,IAEAC,IACAzM,GAAA,IACAA,GAAA4N,EAAAnB,EAAA6B,GAAA7B,GAAA,IAEAzM,ECtiBA,IAAAqP,GAAA,WACA,SAAAA,EAAAC,EAAAC,GACAzpB,KAAAwpB,aACAxpB,KAAAypB,SA+HA,OAvHAF,EAAApxB,UAAAivB,KAAA,SAAAsC,EAAAC,GAGA,YAFA,IAAAD,IAAuCA,EAAA1pB,KAAAwpB,iBACvC,IAAAG,IAAmCA,EAAA3pB,KAAAypB,QACnCC,IAAA1pB,KAAAwpB,YAAAG,IAAA3pB,KAAAypB,OACAzpB,KAGA,IAAAupB,EAAAG,EAAAC,IASAJ,EAAApxB,UAAA2rB,MAAA,SAAA8F,EAAAC,GAGA,YAFA,IAAAD,IAAyCA,EAAA,QACzC,IAAAC,IAAqCA,EAAA,GACrC7pB,KAAAonB,KAAApnB,KAAAwpB,WAAAI,EAAA5pB,KAAAypB,OAAAI,IAKAN,EAAApxB,UAAA2xB,OAAA,SAAAC,GACA,OAAAR,EAAAO,OAAA9pB,KAAA+pB,IAKAR,EAAAO,OAAA,SAAA9M,EAAAzO,GACA,OAAAyO,IAAAzO,KAGAyO,KACAzO,GACAyO,EAAAwM,aAAAjb,EAAAib,YACAxM,EAAAyM,SAAAlb,EAAAkb,QAMAF,EAAApxB,UAAA6xB,SAAA,SAAAD,GACA,OAAAR,EAAAS,SAAAhqB,KAAA+pB,IAMAR,EAAAS,SAAA,SAAAhN,EAAAzO,GACA,OAAAyO,EAAAwM,WAAAjb,EAAAib,cAGAjb,EAAAib,WAAAxM,EAAAwM,aAGAxM,EAAAyM,OAAAlb,EAAAkb,QAMAF,EAAApxB,UAAA8xB,gBAAA,SAAAF,GACA,OAAAR,EAAAU,gBAAAjqB,KAAA+pB,IAMAR,EAAAU,gBAAA,SAAAjN,EAAAzO,GACA,OAAAyO,EAAAwM,WAAAjb,EAAAib,cAGAjb,EAAAib,WAAAxM,EAAAwM,aAGAxM,EAAAyM,QAAAlb,EAAAkb,QAKAF,EAAA1M,QAAA,SAAAG,EAAAzO,GACA,IAAA2b,EAAA,EAAAlN,EAAAwM,WACAW,EAAA,EAAA5b,EAAAib,WACA,GAAAU,IAAAC,EAAA,CACA,IAAAC,EAAA,EAAApN,EAAAyM,OACAY,EAAA,EAAA9b,EAAAkb,OACA,OAAAW,EAAAC,EAEA,OAAAH,EAAAC,GAKAZ,EAAApxB,UAAAmyB,MAAA,WACA,WAAAf,EAAAvpB,KAAAwpB,WAAAxpB,KAAAypB,SAKAF,EAAApxB,UAAA0vB,SAAA,WACA,UAAA7nB,KAAAwpB,WAAA,IAAAxpB,KAAAypB,OAAA,KAMAF,EAAAgB,KAAA,SAAAtM,GACA,WAAAsL,EAAAtL,EAAAuL,WAAAvL,EAAAwL,SAKAF,EAAAiB,YAAA,SAAArV,GACA,OAAAA,GACA,kBAAAA,EAAAqU,YACA,kBAAArU,EAAAsU,QAEAF,EAlIA,GCCIkB,GAAK,WACT,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAH,EAAAE,GAAAF,IAAAE,GAAAD,EAAAE,GACA9qB,KAAA2qB,gBAAAE,EACA7qB,KAAA4qB,YAAAE,EACA9qB,KAAA6qB,cAAAF,EACA3qB,KAAA8qB,UAAAF,IAGA5qB,KAAA2qB,kBACA3qB,KAAA4qB,cACA5qB,KAAA6qB,gBACA7qB,KAAA8qB,aAgTA,OA1SAJ,EAAAvyB,UAAAsY,QAAA,WACA,OAAAia,EAAAja,QAAAzQ,OAKA0qB,EAAAja,QAAA,SAAAsa,GACA,OAAAA,EAAAJ,kBAAAI,EAAAF,eAAAE,EAAAH,cAAAG,EAAAD,WAKAJ,EAAAvyB,UAAA6yB,iBAAA,SAAAC,GACA,OAAAP,EAAAM,iBAAAhrB,KAAAirB,IAKAP,EAAAM,iBAAA,SAAAD,EAAAE,GACA,QAAAA,EAAAzB,WAAAuB,EAAAJ,iBAAAM,EAAAzB,WAAAuB,EAAAF,mBAGAI,EAAAzB,aAAAuB,EAAAJ,iBAAAM,EAAAxB,OAAAsB,EAAAH,gBAGAK,EAAAzB,aAAAuB,EAAAF,eAAAI,EAAAxB,OAAAsB,EAAAD,aAQAJ,EAAAvyB,UAAA+yB,cAAA,SAAAH,GACA,OAAAL,EAAAQ,cAAAlrB,KAAA+qB,IAKAL,EAAAQ,cAAA,SAAAH,EAAAI,GACA,QAAAA,EAAAR,gBAAAI,EAAAJ,iBAAAQ,EAAAN,cAAAE,EAAAJ,qBAGAQ,EAAAR,gBAAAI,EAAAF,eAAAM,EAAAN,cAAAE,EAAAF,mBAGAM,EAAAR,kBAAAI,EAAAJ,iBAAAQ,EAAAP,YAAAG,EAAAH,gBAGAO,EAAAN,gBAAAE,EAAAF,eAAAM,EAAAL,UAAAC,EAAAD,cASAJ,EAAAvyB,UAAAizB,UAAA,SAAAL,GACA,OAAAL,EAAAU,UAAAprB,KAAA+qB,IAMAL,EAAAU,UAAA,SAAApO,EAAAzO,GACA,IAAAoc,EACAC,EACAC,EACAC,EAyBA,OAxBAvc,EAAAoc,gBAAA3N,EAAA2N,iBACAA,EAAApc,EAAAoc,gBACAC,EAAArc,EAAAqc,aAEArc,EAAAoc,kBAAA3N,EAAA2N,iBACAA,EAAApc,EAAAoc,gBACAC,EAAA/a,KAAAC,IAAAvB,EAAAqc,YAAA5N,EAAA4N,eAGAD,EAAA3N,EAAA2N,gBACAC,EAAA5N,EAAA4N,aAEArc,EAAAsc,cAAA7N,EAAA6N,eACAA,EAAAtc,EAAAsc,cACAC,EAAAvc,EAAAuc,WAEAvc,EAAAsc,gBAAA7N,EAAA6N,eACAA,EAAAtc,EAAAsc,cACAC,EAAAjb,KAAAO,IAAA7B,EAAAuc,UAAA9N,EAAA8N,aAGAD,EAAA7N,EAAA6N,cACAC,EAAA9N,EAAA8N,WAEA,IAAAJ,EAAAC,EAAAC,EAAAC,EAAAC,IAKAJ,EAAAvyB,UAAAkzB,gBAAA,SAAAN,GACA,OAAAL,EAAAW,gBAAArrB,KAAA+qB,IAKAL,EAAAW,gBAAA,SAAArO,EAAAzO,GACA,IAAA+c,EAAAtO,EAAA2N,gBACAY,EAAAvO,EAAA4N,YACAY,EAAAxO,EAAA6N,cACAY,EAAAzO,EAAA8N,UACAY,EAAAnd,EAAAoc,gBACAgB,EAAApd,EAAAqc,YACAgB,EAAArd,EAAAsc,cACAgB,EAAAtd,EAAAuc,UAgBA,OAfAQ,EAAAI,GACAJ,EAAAI,EACAH,EAAAI,GAEAL,IAAAI,IACAH,EAAA1b,KAAAO,IAAAmb,EAAAI,IAEAH,EAAAI,GACAJ,EAAAI,EACAH,EAAAI,GAEAL,IAAAI,IACAH,EAAA5b,KAAAC,IAAA2b,EAAAI,IAGAP,EAAAE,EACA,KAEAF,IAAAE,GAAAD,EAAAE,EACA,KAEA,IAAAf,EAAAY,EAAAC,EAAAC,EAAAC,IAKAf,EAAAvyB,UAAA2zB,YAAA,SAAA/B,GACA,OAAAW,EAAAoB,YAAA9rB,KAAA+pB,IAKAW,EAAAoB,YAAA,SAAA9O,EAAAzO,GACA,QAAAyO,KACAzO,GACAyO,EAAA2N,kBAAApc,EAAAoc,iBACA3N,EAAA4N,cAAArc,EAAAqc,aACA5N,EAAA6N,gBAAAtc,EAAAsc,eACA7N,EAAA8N,YAAAvc,EAAAuc,WAKAJ,EAAAvyB,UAAA4zB,eAAA,WACA,WAAmBxC,GAAQvpB,KAAA6qB,cAAA7qB,KAAA8qB,YAK3BJ,EAAAvyB,UAAA6zB,iBAAA,WACA,WAAmBzC,GAAQvpB,KAAA2qB,gBAAA3qB,KAAA4qB,cAK3BF,EAAAvyB,UAAA0vB,SAAA,WACA,UAAA7nB,KAAA2qB,gBAAA,IAAA3qB,KAAA4qB,YAAA,OAAA5qB,KAAA6qB,cAAA,IAAA7qB,KAAA8qB,UAAA,KAKAJ,EAAAvyB,UAAA8zB,eAAA,SAAApB,EAAAC,GACA,WAAAJ,EAAA1qB,KAAA2qB,gBAAA3qB,KAAA4qB,YAAAC,EAAAC,IAKAJ,EAAAvyB,UAAA+zB,iBAAA,SAAAvB,EAAAC,GACA,WAAAF,EAAAC,EAAAC,EAAA5qB,KAAA6qB,cAAA7qB,KAAA8qB,YAKAJ,EAAAvyB,UAAAg0B,gBAAA,WACA,OAAAzB,EAAAyB,gBAAAnsB,OAKA0qB,EAAAyB,gBAAA,SAAApB,GACA,WAAAL,EAAAK,EAAAJ,gBAAAI,EAAAH,YAAAG,EAAAJ,gBAAAI,EAAAH,cAGAF,EAAA0B,cAAA,SAAAzc,EAAAC,GAEA,YADA,IAAAA,IAA6BA,EAAAD,GAC7B,IAAA+a,EAAA/a,EAAA6Z,WAAA7Z,EAAA8Z,OAAA7Z,EAAA4Z,WAAA5Z,EAAA6Z,SAEAiB,EAAAH,KAAA,SAAAQ,GACA,OAAAA,EAGA,IAAAL,EAAAK,EAAAJ,gBAAAI,EAAAH,YAAAG,EAAAF,cAAAE,EAAAD,WAFA,MAOAJ,EAAA2B,SAAA,SAAAlX,GACA,OAAAA,GACA,kBAAAA,EAAAwV,iBACA,kBAAAxV,EAAAyV,aACA,kBAAAzV,EAAA0V,eACA,kBAAA1V,EAAA2V,WAKAJ,EAAA4B,0BAAA,SAAAtP,EAAAzO,GAEA,QAAAyO,EAAA6N,cAAAtc,EAAAoc,iBAAA3N,EAAA6N,gBAAAtc,EAAAoc,iBAAA3N,EAAA8N,UAAAvc,EAAAqc,gBAIArc,EAAAsc,cAAA7N,EAAA2N,iBAAApc,EAAAsc,gBAAA7N,EAAA2N,iBAAApc,EAAAuc,UAAA9N,EAAA4N,cASAF,EAAA6B,gBAAA,SAAAvP,EAAAzO,GAEA,QAAAyO,EAAA6N,cAAAtc,EAAAoc,iBAAA3N,EAAA6N,gBAAAtc,EAAAoc,iBAAA3N,EAAA8N,WAAAvc,EAAAqc,gBAIArc,EAAAsc,cAAA7N,EAAA2N,iBAAApc,EAAAsc,gBAAA7N,EAAA2N,iBAAApc,EAAAuc,WAAA9N,EAAA4N,cAUAF,EAAA8B,yBAAA,SAAAxP,EAAAzO,GACA,GAAAyO,GAAAzO,EAAA,CACA,IAAAke,EAAA,EAAAzP,EAAA2N,gBACA+B,EAAA,EAAAne,EAAAoc,gBACA,GAAA8B,IAAAC,EAAA,CACA,IAAAC,EAAA,EAAA3P,EAAA4N,YACAgC,EAAA,EAAAre,EAAAqc,YACA,GAAA+B,IAAAC,EAAA,CACA,IAAAC,EAAA,EAAA7P,EAAA6N,cACAiC,EAAA,EAAAve,EAAAsc,cACA,GAAAgC,IAAAC,EAAA,CACA,IAAAC,EAAA,EAAA/P,EAAA8N,UACAkC,EAAA,EAAAze,EAAAuc,UACA,OAAAiC,EAAAC,EAEA,OAAAH,EAAAC,EAEA,OAAAH,EAAAC,EAEA,OAAAH,EAAAC,EAEA,IAAAO,EAAAjQ,EAAA,IACAkQ,EAAA3e,EAAA,IACA,OAAA0e,EAAAC,GAMAxC,EAAAyC,uBAAA,SAAAnQ,EAAAzO,GACA,OAAAyO,EAAA6N,gBAAAtc,EAAAsc,cACA7N,EAAA8N,YAAAvc,EAAAuc,UACA9N,EAAA2N,kBAAApc,EAAAoc,gBACA3N,EAAA4N,YAAArc,EAAAqc,YAEA5N,EAAA2N,gBAAApc,EAAAoc,gBAEA3N,EAAA8N,UAAAvc,EAAAuc,UAEA9N,EAAA6N,cAAAtc,EAAAsc,eAKAH,EAAA0C,mBAAA,SAAArC,GACA,OAAAA,EAAAF,cAAAE,EAAAJ,iBAEAD,EA5TS,GCiMF,SAAA2C,GAAAC,GACP,QAAA/2B,EAAA,EAAAwG,EAAAuwB,EAAAnwB,OAAqC5G,EAAAwG,EAASxG,IAAA,CAC9C,IAAAg3B,EAAAD,EAAAlwB,WAAA7G,GACA,QAAAg3B,GAAA,IAAAA,EACA,OAAAh3B,EAGA,SAqBO,SAAAi3B,GAAAF,EAAAG,QACP,IAAAA,IAAgCA,EAAAH,EAAAnwB,OAAA,GAChC,QAAA5G,EAAAk3B,EAA4Bl3B,GAAA,EAAQA,IAAA,CACpC,IAAAg3B,EAAAD,EAAAlwB,WAAA7G,GACA,QAAAg3B,GAAA,IAAAA,EACA,OAAAh3B,EAGA,SA4LOgjB,OAAA+P,aAAA,OCnaP,IAAAoE,GAAA,IACAC,GAAA,EACA,SAAAC,GAAAxN,EAAAyN,EAAAvN,EAAAjC,GACA,IAAAyP,EAAA,IAAuBxP,EAAO8B,EAAAyN,EAAAvN,GAC9B,OAAAwN,EAAAvP,YAAAF,GAEA,IAAI0P,GAAkB,WACtB,SAAAC,EAAAC,GAGA,IAFA,IAAAC,EAAA,GACAC,EAAA,GACA53B,EAAA,EAAA63B,EAAAH,EAAA9wB,OAAgD5G,EAAA63B,EAAc73B,IAC9D23B,EAAA33B,GAAAy3B,EAAAK,wBAAAJ,EAAA13B,GAAA,GACA43B,EAAA53B,GAAAy3B,EAAAM,uBAAAL,EAAA13B,GAAA,GAEAyJ,KAAAuuB,OAAAN,EACAjuB,KAAAwuB,cAAAN,EACAluB,KAAAyuB,YAAAN,EA8CA,OA5CAH,EAAA71B,UAAA4lB,UAAA,WACA,OAAA/d,KAAAuuB,OAAApxB,QAEA6wB,EAAA71B,UAAA6lB,kBAAA,SAAAznB,GACA,OAAAyJ,KAAAuuB,OAAAh4B,GAAAoxB,UAAA3nB,KAAAwuB,cAAAj4B,GAAA,EAAAyJ,KAAAyuB,YAAAl4B,GAAA,IAEAy3B,EAAA71B,UAAAu2B,mBAAA,SAAAn4B,GACA,OAAAA,EAAA,GAEAy3B,EAAA71B,UAAAw2B,iBAAA,SAAAp4B,GACA,OAAAA,EAAA,GAEAy3B,EAAAK,wBAAA,SAAAO,EAAAC,GACA,IAAAx3B,EAAgBg2B,GAA+BuB,GAC/C,WAAAv3B,EACAw3B,EAEAx3B,EAAA,GAEA22B,EAAAM,uBAAA,SAAAM,EAAAC,GACA,IAAAx3B,EAAgBm2B,GAA8BoB,GAC9C,WAAAv3B,EACAw3B,EAEAx3B,EAAA,GAEA22B,EAAA71B,UAAA22B,gBAAA,SAAAC,EAAAtB,EAAAuB,GAKA,IAJA,IAAAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACApyB,EAAA,EACAkS,EAAAwe,EAAoCxe,GAAA+f,EAAmB/f,IAIvD,IAHA,IAAAmgB,EAAApvB,KAAAuuB,OAAAtf,GACA2b,EAAAmE,EAAA/uB,KAAAwuB,cAAAvf,GAAA,EACA6b,EAAAiE,EAAA/uB,KAAAyuB,YAAAxf,GAAAmgB,EAAAjyB,OAAA,EACAkyB,EAAAzE,EAAuCyE,EAAAvE,EAAiBuE,IACxDJ,EAAAlyB,GAAAqyB,EAAAhyB,WAAAiyB,EAAA,GACAH,EAAAnyB,GAAAkS,EAAA,EACAkgB,EAAApyB,GAAAsyB,EACAtyB,IAGA,WAAAuyB,GAAAL,EAAAC,EAAAC,IAEAnB,EAxDsB,GA0DtBsB,GAAA,WACA,SAAAA,EAAAL,EAAAC,EAAAC,GACAnvB,KAAAuvB,WAAAN,EACAjvB,KAAAwvB,aAAAN,EACAlvB,KAAAyvB,SAAAN,EAoBA,OAlBAG,EAAAn3B,UAAA4lB,UAAA,WACA,OAAA/d,KAAAuvB,WAAApyB,QAEAmyB,EAAAn3B,UAAA6lB,kBAAA,SAAAznB,GACA,OAAAyJ,KAAAuvB,WAAAh5B,IAEA+4B,EAAAn3B,UAAAu2B,mBAAA,SAAAn4B,GACA,OAAAyJ,KAAAwvB,aAAAj5B,IAEA+4B,EAAAn3B,UAAAu3B,eAAA,SAAAn5B,GACA,OAAAyJ,KAAAyvB,SAAAl5B,IAEA+4B,EAAAn3B,UAAAw2B,iBAAA,SAAAp4B,GACA,OAAAyJ,KAAAwvB,aAAAj5B,IAEA+4B,EAAAn3B,UAAAw3B,aAAA,SAAAp5B,GACA,OAAAyJ,KAAAyvB,SAAAl5B,GAAA,GAEA+4B,EAxBA,GA0BAM,GAAA,WACA,SAAAA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACApwB,KAAA6vB,0BACA7vB,KAAA8vB,sBACA9vB,KAAA+vB,wBACA/vB,KAAAgwB,oBACAhwB,KAAAiwB,0BACAjwB,KAAAkwB,sBACAlwB,KAAAmwB,wBACAnwB,KAAAowB,oBAqCA,OAnCAR,EAAAS,qBAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAX,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAyBA,OAxBA,IAAAE,EAAA7S,gBACAoS,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,IAGAH,EAAAU,EAAA7B,mBAAA4B,EAAA9S,eACAsS,EAAAS,EAAAb,eAAAY,EAAA9S,eACAuS,EAAAQ,EAAA5B,iBAAA2B,EAAA9S,cAAA8S,EAAA7S,eAAA,GACAuS,EAAAO,EAAAZ,aAAAW,EAAA9S,cAAA8S,EAAA7S,eAAA,IAEA,IAAA6S,EAAA3S,gBACAsS,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,IAGAH,EAAAO,EAAA9B,mBAAA4B,EAAA5S,eACAwS,EAAAM,EAAAd,eAAAY,EAAA5S,eACAyS,EAAAK,EAAA7B,iBAAA2B,EAAA5S,cAAA4S,EAAA3S,eAAA,GACAyS,EAAAI,EAAAb,aAAAW,EAAA5S,cAAA4S,EAAA3S,eAAA,IAEA,IAAAiS,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,IAEAR,EA9CA,GAgDA,SAAAa,GAAAC,GACA,GAAAA,EAAAvzB,QAAA,EACA,OAAAuzB,EAIA,IAFA,IAAA/0B,EAAA,CAAA+0B,EAAA,IACA9L,EAAAjpB,EAAA,GACApF,EAAA,EAAAwG,EAAA2zB,EAAAvzB,OAA4C5G,EAAAwG,EAASxG,IAAA,CACrD,IAAAo6B,EAAAD,EAAAn6B,GACAq6B,EAAAD,EAAAnT,eAAAoH,EAAApH,cAAAoH,EAAAnH,gBACAoT,EAAAF,EAAAjT,eAAAkH,EAAAlH,cAAAkH,EAAAjH,gBAEAmT,EAAAjhB,KAAAC,IAAA8gB,EAAAC,GACAC,EAAAnD,IAEA/I,EAAAnH,eAAAkT,EAAAnT,cAAAmT,EAAAlT,eAAAmH,EAAApH,cACAoH,EAAAjH,eAAAgT,EAAAjT,cAAAiT,EAAAhT,eAAAiH,EAAAlH,gBAIA/hB,EAAAqD,KAAA2xB,GACA/L,EAAA+L,GAGA,OAAAh1B,EAEA,IAAAo1B,GAAA,WACA,SAAAA,EAAAlB,EAAAE,EAAAE,EAAAE,EAAAa,GACAhxB,KAAA6vB,0BACA7vB,KAAA+vB,wBACA/vB,KAAAiwB,0BACAjwB,KAAAmwB,wBACAnwB,KAAAgxB,cAsCA,OApCAD,EAAAE,qBAAA,SAAAlC,EAAAuB,EAAAY,EAAAC,EAAA7Q,EAAA8Q,EAAAC,GACA,IAAAxB,EACAE,EACAE,EACAE,EACAa,OAAA53B,EAiBA,GAhBA,IAAAk3B,EAAA7S,gBACAoS,EAAAqB,EAAAxC,mBAAA4B,EAAA9S,eAAA,EACAuS,EAAA,IAGAF,EAAAqB,EAAAxC,mBAAA4B,EAAA9S,eACAuS,EAAAmB,EAAAvC,iBAAA2B,EAAA9S,cAAA8S,EAAA7S,eAAA,IAEA,IAAA6S,EAAA3S,gBACAsS,EAAAkB,EAAAzC,mBAAA4B,EAAA5S,eAAA,EACAyS,EAAA,IAGAF,EAAAkB,EAAAzC,mBAAA4B,EAAA5S,eACAyS,EAAAgB,EAAAxC,iBAAA2B,EAAA5S,cAAA4S,EAAA3S,eAAA,IAEAyT,GAAA,IAAAd,EAAA7S,gBAAA,IAAA6S,EAAA3S,gBAAA2C,IAAA,CACA,IAAAiQ,EAAAW,EAAApC,gBAAAC,EAAAuB,EAAA9S,cAAA8S,EAAA9S,cAAA8S,EAAA7S,eAAA,GACA+S,EAAAW,EAAArC,gBAAAC,EAAAuB,EAAA5S,cAAA4S,EAAA5S,cAAA4S,EAAA3S,eAAA,GACA+S,EAAA9C,GAAA2C,EAAAC,EAAAlQ,GAAA,GACA+Q,IACAX,EAAAD,GAAAC,IAEAM,EAAA,GACA,QAAAz6B,EAAA,EAAA+6B,EAAAZ,EAAAvzB,OAAyD5G,EAAA+6B,EAAc/6B,IACvEy6B,EAAAhyB,KAAA4wB,GAAAS,qBAAAK,EAAAn6B,GAAAg6B,EAAAC,IAGA,WAAAO,EAAAlB,EAAAE,EAAAE,EAAAE,EAAAa,IAEAD,EA5CA,GA8CAQ,GAAA,WACA,SAAAA,EAAAC,EAAAC,EAAAC,GACA1xB,KAAAoxB,yBAAAM,EAAAN,yBACApxB,KAAAqxB,6BAAAK,EAAAL,6BACArxB,KAAA+uB,2BAAA2C,EAAA3C,2BACA/uB,KAAA2xB,qBAAAD,EAAAC,qBACA3xB,KAAA4xB,iBAAAlE,GACA1tB,KAAAwxB,gBACAxxB,KAAAyxB,gBACAzxB,KAAAme,SAAA,IAA4B4P,GAAkByD,GAC9CxxB,KAAAoe,SAAA,IAA4B2P,GAAkB0D,GAyJ9C,OAvJAF,EAAAp5B,UAAAy1B,YAAA,WACA,OAAA5tB,KAAAme,SAAAJ,aAAA,IAAA/d,KAAAme,SAAAH,kBAAA,GAAA7gB,OAEA,QACA0yB,wBAAA,EACAE,sBAAA,EACAE,wBAAA,EACAE,sBAAAnwB,KAAAoe,SAAAL,YACAiT,YAAA,EACAZ,kBAAA,EACAD,sBAAA,EACAD,oBAAA,EACAD,wBAAA,EACAD,kBAAA,EACAD,sBAAA,EACAD,oBAAA,EACAD,wBAAA,MAIA,OAAA7vB,KAAAoe,SAAAL,aAAA,IAAA/d,KAAAoe,SAAAJ,kBAAA,GAAA7gB,OAEA,QACA0yB,wBAAA,EACAE,sBAAA/vB,KAAAme,SAAAJ,YACAkS,wBAAA,EACAE,sBAAA,EACAa,YAAA,EACAZ,kBAAA,EACAD,sBAAA,EACAD,oBAAA,EACAD,wBAAA,EACAD,kBAAA,EACAD,sBAAA,EACAD,oBAAA,EACAD,wBAAA,MAIA7vB,KAAA6xB,sBAAA,IAAA/wB,MAAAgxB,UACA,IAAApB,EAAA9C,GAAA5tB,KAAAme,SAAAne,KAAAoe,SAAApe,KAAA+xB,6BAAAh6B,KAAAiI,WAAA2xB,sBAGA,GAAA3xB,KAAA+uB,2BAAA,CAEA,IADA,IAAAiD,EAAA,GACAz7B,EAAA,EAAA07B,EAAAvB,EAAAvzB,OAAyD5G,EAAA07B,EAAc17B,IACvEy7B,EAAAhzB,KAAA+xB,GAAAE,qBAAAjxB,KAAA+uB,2BAAA2B,EAAAn6B,GAAAyJ,KAAAme,SAAAne,KAAAoe,SAAApe,KAAA+xB,6BAAAh6B,KAAAiI,WAAAoxB,yBAAApxB,KAAAqxB,+BAEA,OAAAW,EAOA,IAHA,IAAAr2B,EAAA,GACAu2B,EAAA,EACAC,EAAA,EACAp1B,GAAAxG,GAAA,EAAAm6B,EAAAvzB,QAA4D5G,EAAAwG,EAASxG,IAAA,CACrE,IAAA67B,EAAA77B,EAAA,EAAAwG,EAAA2zB,EAAAn6B,EAAA,QACA+tB,EAAA8N,IAAA5U,cAAAxd,KAAAwxB,cAAAr0B,OACAonB,EAAA6N,IAAA1U,cAAA1d,KAAAyxB,cAAAt0B,OACA,MAAA+0B,EAAA5N,GAAA6N,EAAA5N,EAAA,CACA,IAAA8N,EAAAryB,KAAAwxB,cAAAU,GACAI,EAAAtyB,KAAAyxB,cAAAU,GACA,GAAAE,IAAAC,EAAA,CAIA,IAAAxC,EAAkD/B,GAAkBM,wBAAAgE,EAAA,GACpEnC,EAAkDnC,GAAkBM,wBAAAiE,EAAA,GACpE,MAAAxC,EAAA,GAAAI,EAAA,GACA,IAAAqC,EAAAF,EAAAj1B,WAAA0yB,EAAA,GACA0C,EAAAF,EAAAl1B,WAAA8yB,EAAA,GACA,GAAAqC,IAAAC,EACA,MAEA1C,IACAI,KAEAJ,EAAA,GAAAI,EAAA,IACAlwB,KAAAyyB,8BAAA92B,EAAAu2B,EAAA,IAAApC,EAAAqC,EAAA,IAAAjC,GAKA,IAAAF,EAAgDjC,GAAkBO,uBAAA+D,EAAA,GAClEjC,EAAgDrC,GAAkBO,uBAAAgE,EAAA,GAClEI,EAAAL,EAAAl1B,OAAA,EACAw1B,EAAAL,EAAAn1B,OAAA,EACA,MAAA6yB,EAAA0C,GAAAtC,EAAAuC,EAAA,CACAJ,EAAAF,EAAAj1B,WAAA4yB,EAAA,GACAwC,EAAAH,EAAAj1B,WAAAgzB,EAAA,GACA,GAAAmC,IAAAC,EACA,MAEAxC,IACAI,KAEAJ,EAAA0C,GAAAtC,EAAAuC,IACA3yB,KAAAyyB,8BAAA92B,EAAAu2B,EAAA,EAAAlC,EAAA0C,EAAAP,EAAA,EAAA/B,EAAAuC,GAIAT,IACAC,IAEAC,IAEAz2B,EAAAqD,KAAA+xB,GAAAE,qBAAAjxB,KAAA+uB,2BAAAqD,EAAApyB,KAAAme,SAAAne,KAAAoe,SAAApe,KAAA+xB,6BAAAh6B,KAAAiI,WAAAoxB,yBAAApxB,KAAAqxB,+BACAa,GAAAE,EAAA3U,eACA0U,GAAAC,EAAAzU,gBAGA,OAAAhiB,GAEA41B,EAAAp5B,UAAAs6B,8BAAA,SAAA92B,EAAAi3B,EAAA9C,EAAAE,EAAA6C,EAAA3C,EAAAE,GACA,IAAApwB,KAAA8yB,+BAAAn3B,EAAAi3B,EAAA9C,EAAAE,EAAA6C,EAAA3C,EAAAE,GAAA,CAIA,IAAAY,OAAA53B,EACA4G,KAAAoxB,2BACAJ,EAAA,KAAApB,GAAAgD,EAAA9C,EAAA8C,EAAA5C,EAAA6C,EAAA3C,EAAA2C,EAAAzC,KAEAz0B,EAAAqD,KAAA,IAAA+xB,GAAA6B,IAAAC,IAAA7B,MAEAO,EAAAp5B,UAAA26B,+BAAA,SAAAn3B,EAAAi3B,EAAA9C,EAAAE,EAAA6C,EAAA3C,EAAAE,GACA,IAAArzB,EAAApB,EAAAwB,OACA,OAAAJ,EACA,SAEA,IAAA6nB,EAAAjpB,EAAAoB,EAAA,GACA,WAAA6nB,EAAAmL,uBAAA,IAAAnL,EAAAuL,wBAIAvL,EAAAmL,sBAAA,IAAA6C,GAAAhO,EAAAuL,sBAAA,IAAA0C,IACAjO,EAAAmL,sBAAA6C,EACAhO,EAAAuL,sBAAA0C,EACA7yB,KAAAoxB,0BACAxM,EAAAoM,YAAAhyB,KAAA,IAAA4wB,GAAAgD,EAAA9C,EAAA8C,EAAA5C,EAAA6C,EAAA3C,EAAA2C,EAAAzC,KAEA,KAIAmB,EAAAp5B,UAAA45B,6BAAA,WACA,OAAA/xB,KAAA4xB,iBACA,SAEA,IAAA7wB,GAAA,IAAAD,MAAAgxB,UACA,OAAA/wB,EAAAf,KAAA6xB,qBAAA7xB,KAAA4xB,kBAEAL,EAnKA,GCnNAwB,GAAA,WACA,SAAAA,EAAAC,EAAAC,EAAApE,GAEA,IADA,IAAAjS,EAAA,IAAAsW,WAAAF,EAAAC,GACA18B,EAAA,EAAAwG,EAAAi2B,EAAAC,EAA0C18B,EAAAwG,EAASxG,IACnDqmB,EAAArmB,GAAAs4B,EAEA7uB,KAAAmzB,MAAAvW,EACA5c,KAAAgzB,OACAhzB,KAAAizB,OAQA,OANAF,EAAA56B,UAAAf,IAAA,SAAAg8B,EAAA/D,GACA,OAAArvB,KAAAmzB,MAAAC,EAAApzB,KAAAizB,KAAA5D,IAEA0D,EAAA56B,UAAAmF,IAAA,SAAA81B,EAAA/D,EAAA73B,GACAwI,KAAAmzB,MAAAC,EAAApzB,KAAAizB,KAAA5D,GAAA73B,GAEAu7B,EAhBA,GAmBO,SAAAM,GAAA9wB,GACP,OAAAA,EAAA,EACA,EAEAA,EAAA,IACA,IAEA,EAAAA,EAEO,SAAA+wB,GAAA/wB,GACP,OAAAA,EAAA,EACA,EAEAA,EAAA,WACA,WAEA,EAAAA,EClCA,IAAAgxB,GAAA,WACA,SAAAA,EAAAtkB,EAAAukB,GACAxzB,KAAAiP,QACAjP,KAAAwzB,YAEA,OAAAD,EALA,GAQIE,GAAiB,WACrB,SAAAC,EAAAnpB,GACAvK,KAAAuK,SACAvK,KAAA2zB,UAAA,IAAAC,YAAArpB,EAAApN,QACA6C,KAAA6zB,oBAAA,IAAAC,WAAA,GACA9zB,KAAA6zB,oBAAA,MAyHA,OAvHAH,EAAAv7B,UAAA47B,SAAA,WACA,OAAA/zB,KAAAuK,OAAApN,QAEAu2B,EAAAv7B,UAAA67B,aAAA,SAAAC,EAAAD,GACAC,EAAsBX,GAAQW,GAC9B,IAAAC,EAAAl0B,KAAAuK,OACA4pB,EAAAn0B,KAAA2zB,UACAS,EAAAJ,EAAA72B,OACA,WAAAi3B,IAGAp0B,KAAAuK,OAAA,IAAAqpB,YAAAM,EAAA/2B,OAAAi3B,GACAp0B,KAAAuK,OAAAjN,IAAA42B,EAAAG,SAAA,EAAAJ,GAAA,GACAj0B,KAAAuK,OAAAjN,IAAA42B,EAAAG,SAAAJ,KAAAG,GACAp0B,KAAAuK,OAAAjN,IAAA02B,EAAAC,GACAA,EAAA,EAAAj0B,KAAA6zB,oBAAA,KACA7zB,KAAA6zB,oBAAA,GAAAI,EAAA,GAEAj0B,KAAA2zB,UAAA,IAAAC,YAAA5zB,KAAAuK,OAAApN,QACA6C,KAAA6zB,oBAAA,OACA7zB,KAAA2zB,UAAAr2B,IAAA62B,EAAAE,SAAA,EAAAr0B,KAAA6zB,oBAAA,QAEA,IAEAH,EAAAv7B,UAAAm8B,YAAA,SAAArlB,EAAAzX,GAGA,OAFAyX,EAAgBqkB,GAAQrkB,GACxBzX,EAAgB87B,GAAQ97B,GACxBwI,KAAAuK,OAAA0E,KAAAzX,IAGAwI,KAAAuK,OAAA0E,GAAAzX,EACAyX,EAAA,EAAAjP,KAAA6zB,oBAAA,KACA7zB,KAAA6zB,oBAAA,GAAA5kB,EAAA,IAEA,IAEAykB,EAAAv7B,UAAAo8B,aAAA,SAAA9G,EAAA+G,GACA/G,EAAqB6F,GAAQ7F,GAC7B+G,EAAclB,GAAQkB,GACtB,IAAAN,EAAAl0B,KAAAuK,OACA4pB,EAAAn0B,KAAA2zB,UACA,GAAAlG,GAAAyG,EAAA/2B,OACA,SAEA,IAAAs3B,EAAAP,EAAA/2B,OAAAswB,EAIA,OAHA+G,GAAAC,IACAD,EAAAC,GAEA,IAAAD,IAGAx0B,KAAAuK,OAAA,IAAAqpB,YAAAM,EAAA/2B,OAAAq3B,GACAx0B,KAAAuK,OAAAjN,IAAA42B,EAAAG,SAAA,EAAA5G,GAAA,GACAztB,KAAAuK,OAAAjN,IAAA42B,EAAAG,SAAA5G,EAAA+G,GAAA/G,GACAztB,KAAA2zB,UAAA,IAAAC,YAAA5zB,KAAAuK,OAAApN,QACAswB,EAAA,EAAAztB,KAAA6zB,oBAAA,KACA7zB,KAAA6zB,oBAAA,GAAApG,EAAA,GAEAztB,KAAA6zB,oBAAA,OACA7zB,KAAA2zB,UAAAr2B,IAAA62B,EAAAE,SAAA,EAAAr0B,KAAA6zB,oBAAA,QAEA,IAEAH,EAAAv7B,UAAAu8B,cAAA,WACA,WAAA10B,KAAAuK,OAAApN,OACA,EAEA6C,KAAA20B,qBAAA30B,KAAAuK,OAAApN,OAAA,IAEAu2B,EAAAv7B,UAAAy8B,oBAAA,SAAA3lB,GACA,OAAAA,EAAA,EACA,GAEAA,EAAgBqkB,GAAQrkB,GACxBjP,KAAA20B,qBAAA1lB,KAEAykB,EAAAv7B,UAAAw8B,qBAAA,SAAA1lB,GACA,GAAAA,GAAAjP,KAAA6zB,oBAAA,GACA,OAAA7zB,KAAA2zB,UAAA1kB,GAEA,IAAAwe,EAAAztB,KAAA6zB,oBAAA,KACA,IAAApG,IACAztB,KAAA2zB,UAAA,GAAA3zB,KAAAuK,OAAA,GACAkjB,KAEAxe,GAAAjP,KAAAuK,OAAApN,SACA8R,EAAAjP,KAAAuK,OAAApN,OAAA,GAEA,QAAA5G,EAAAk3B,EAAgCl3B,GAAA0Y,EAAY1Y,IAC5CyJ,KAAA2zB,UAAAp9B,GAAAyJ,KAAA2zB,UAAAp9B,EAAA,GAAAyJ,KAAAuK,OAAAhU,GAGA,OADAyJ,KAAA6zB,oBAAA,GAAAhkB,KAAAO,IAAApQ,KAAA6zB,oBAAA,GAAA5kB,GACAjP,KAAA2zB,UAAA1kB,IAEAykB,EAAAv7B,UAAA08B,WAAA,SAAAC,GACAA,EAAAjlB,KAAAklB,MAAAD,GAEA90B,KAAA00B,gBACA,IAAAM,EAAA,EACAC,EAAAj1B,KAAAuK,OAAApN,OAAA,EACA+f,EAAA,EACAgY,EAAA,EACAC,EAAA,EACA,MAAAH,GAAAC,EAIA,GAHA/X,EAAA8X,GAAAC,EAAAD,GAAA,IACAE,EAAAl1B,KAAA2zB,UAAAzW,GACAiY,EAAAD,EAAAl1B,KAAAuK,OAAA2S,GACA4X,EAAAK,EACAF,EAAA/X,EAAA,MAEA,MAAA4X,GAAAI,GAIA,MAHAF,EAAA9X,EAAA,EAMA,WAAAqW,GAAArW,EAAA4X,EAAAK,IAEAzB,EA9HqB,GCPjB0B,IDwIJ,WACA,SAAAC,EAAA9qB,GACAvK,KAAAs1B,4BAAA,EACAt1B,KAAAu1B,OAAA,KACAv1B,KAAAw1B,QAAA,IAA2B/B,GAAiBlpB,GAC5CvK,KAAAy1B,aAEAJ,EAAAl9B,UAAAs9B,WAAA,WACAz1B,KAAAs1B,4BAAA,EACAt1B,KAAAu1B,OAAA,MAEAF,EAAAl9B,UAAA67B,aAAA,SAAAC,EAAAD,GACAh0B,KAAAw1B,QAAAxB,aAAAC,EAAAD,IACAh0B,KAAAy1B,cAGAJ,EAAAl9B,UAAAm8B,YAAA,SAAArlB,EAAAzX,GACAwI,KAAAw1B,QAAAlB,YAAArlB,EAAAzX,IACAwI,KAAAy1B,cAGAJ,EAAAl9B,UAAAo8B,aAAA,SAAA9G,EAAA+G,GACAx0B,KAAAw1B,QAAAjB,aAAA9G,EAAA+G,IACAx0B,KAAAy1B,cAGAJ,EAAAl9B,UAAAu8B,cAAA,WACA,OAAA10B,KAAAw1B,QAAAd,iBAEAW,EAAAl9B,UAAAy8B,oBAAA,SAAA3lB,GACA,OAAAjP,KAAAw1B,QAAAZ,oBAAA3lB,IAEAomB,EAAAl9B,UAAA08B,WAAA,SAAAC,GAEA,GADAA,EAAAjlB,KAAAklB,MAAAD,GACA,OAAA90B,KAAAu1B,OAAA,CACA,IAAAG,EAAAZ,EAAA90B,KAAAs1B,4BACA,GAAAI,GAAA,GAAAA,EAAA11B,KAAAu1B,OAAAp4B,OAEA,OAAA6C,KAAAu1B,OAAAG,GAIA,OAAA11B,KAAAw1B,QAAAX,WAAAC,IAKAO,EAAAl9B,UAAAw9B,YAAA,SAAAC,EAAAC,GAEA,IADA,IAAAC,EAAA,GACAhB,EAAAc,EAA0Dd,GAAAe,EAAyCf,IACnGgB,EAAAhB,EAAAc,GAAA51B,KAAA60B,WAAAC,GAEA90B,KAAAu1B,OAAAO,EACA91B,KAAAs1B,4BAAAM,GArDA,GCxImB,WACnB,SAAAG,EAAA7M,EAAA+E,EAAA+H,EAAAC,GACAj2B,KAAAk2B,KAAAhN,EACAlpB,KAAAuuB,OAAAN,EACAjuB,KAAAm2B,KAAAH,EACAh2B,KAAAo2B,WAAAH,EACAj2B,KAAAq2B,YAAA,KA6FA,OA3FAN,EAAA59B,UAAAqV,QAAA,WACAxN,KAAAuuB,OAAApxB,OAAA,GAEA44B,EAAA59B,UAAAm+B,QAAA,WACA,OAAAt2B,KAAAuuB,OAAA5jB,KAAA3K,KAAAm2B,OAEAJ,EAAA59B,UAAAo+B,SAAA,SAAAj8B,GACAA,EAAA07B,KAAA17B,EAAA07B,MAAAh2B,KAAAm2B,OACAn2B,KAAAm2B,KAAA77B,EAAA07B,IACAh2B,KAAAq2B,YAAA,MAIA,IADA,IAAA/U,EAAAhnB,EAAAgnB,QACA/qB,EAAA,EAAAwG,EAAAukB,EAAAnkB,OAA6C5G,EAAAwG,EAASxG,IAAA,CACtD,IAAA8tB,EAAA/C,EAAA/qB,GACAyJ,KAAAw2B,mBAAAnS,EAAA0G,OACA/qB,KAAAy2B,kBAAA,IAAuClN,GAAQlF,EAAA0G,MAAAJ,gBAAAtG,EAAA0G,MAAAH,aAAAvG,EAAAqS,MAE/C12B,KAAAo2B,WAAA97B,EAAA27B,WAEAF,EAAA59B,UAAAw+B,kBAAA,WACA,IAAA32B,KAAAq2B,YAAA,CAIA,IAHA,IAAAO,EAAA52B,KAAAm2B,KAAAh5B,OACA05B,EAAA72B,KAAAuuB,OAAApxB,OACA25B,EAAA,IAAAlD,YAAAiD,GACAtgC,EAAA,EAA2BA,EAAAsgC,EAAiBtgC,IAC5CugC,EAAAvgC,GAAAyJ,KAAAuuB,OAAAh4B,GAAA4G,OAAAy5B,EAEA52B,KAAAq2B,YAAA,IAAmC5C,GAAiBqD,KAMpDf,EAAA59B,UAAA4+B,aAAA,SAAAC,EAAAxtB,GACAxJ,KAAAuuB,OAAAyI,GAAAxtB,EACAxJ,KAAAq2B,aAEAr2B,KAAAq2B,YAAA/B,YAAA0C,EAAAh3B,KAAAuuB,OAAAyI,GAAA75B,OAAA6C,KAAAm2B,KAAAh5B,SAGA44B,EAAA59B,UAAAq+B,mBAAA,SAAAzL,GACA,GAAAA,EAAAJ,kBAAAI,EAAAF,cAWA7qB,KAAA+2B,aAAAhM,EAAAJ,gBAAA,EAAA3qB,KAAAuuB,OAAAxD,EAAAJ,gBAAA,GAAAhD,UAAA,EAAAoD,EAAAH,YAAA,GACA5qB,KAAAuuB,OAAAxD,EAAAF,cAAA,GAAAlD,UAAAoD,EAAAD,UAAA,IAEA9qB,KAAAuuB,OAAArwB,OAAA6sB,EAAAJ,gBAAAI,EAAAF,cAAAE,EAAAJ,iBACA3qB,KAAAq2B,aAEAr2B,KAAAq2B,YAAA9B,aAAAxJ,EAAAJ,gBAAAI,EAAAF,cAAAE,EAAAJ,qBAjBA,CACA,GAAAI,EAAAH,cAAAG,EAAAD,UAEA,OAGA9qB,KAAA+2B,aAAAhM,EAAAJ,gBAAA,EAAA3qB,KAAAuuB,OAAAxD,EAAAJ,gBAAA,GAAAhD,UAAA,EAAAoD,EAAAH,YAAA,GACA5qB,KAAAuuB,OAAAxD,EAAAJ,gBAAA,GAAAhD,UAAAoD,EAAAD,UAAA,MAaAiL,EAAA59B,UAAAs+B,kBAAA,SAAAxL,EAAAgM,GACA,OAAAA,EAAA95B,OAAA,CAIA,IAAA+5B,EAAAD,EAAAh5B,MAAA,cACA,OAAAi5B,EAAA/5B,OAAA,CAQA+5B,IAAA/5B,OAAA,IAAA6C,KAAAuuB,OAAAtD,EAAAzB,WAAA,GAAA7B,UAAAsD,EAAAxB,OAAA,GAEAzpB,KAAA+2B,aAAA9L,EAAAzB,WAAA,EAAAxpB,KAAAuuB,OAAAtD,EAAAzB,WAAA,GAAA7B,UAAA,EAAAsD,EAAAxB,OAAA,GACAyN,EAAA,IAGA,IADA,IAAAC,EAAA,IAAAvD,YAAAsD,EAAA/5B,OAAA,GACA5G,EAAA,EAAuBA,EAAA2gC,EAAA/5B,OAAwB5G,IAC/CyJ,KAAAuuB,OAAArwB,OAAA+sB,EAAAzB,WAAAjzB,EAAA,IAAA2gC,EAAA3gC,IACA4gC,EAAA5gC,EAAA,GAAA2gC,EAAA3gC,GAAA4G,OAAA6C,KAAAm2B,KAAAh5B,OAEA6C,KAAAq2B,aAEAr2B,KAAAq2B,YAAArC,aAAA/I,EAAAzB,WAAA2N,QAlBAn3B,KAAA+2B,aAAA9L,EAAAzB,WAAA,EAAAxpB,KAAAuuB,OAAAtD,EAAAzB,WAAA,GAAA7B,UAAA,EAAAsD,EAAAxB,OAAA,GACAyN,EAAA,GACAl3B,KAAAuuB,OAAAtD,EAAAzB,WAAA,GAAA7B,UAAAsD,EAAAxB,OAAA,MAmBAsM,EAnGmB,ICFZqB,GAAA,oCAQP,SAAAC,GAAAC,QACA,IAAAA,IAAkCA,EAAA,IAElC,IADA,IAAAC,EAAA,yBACAhhC,EAAA,EAAmBA,EAAA6gC,GAAAj6B,OAAkC5G,IACrD+gC,EAAA98B,QAAA48B,GAAA7gC,KAAA,IAGAghC,GAAA,KAAAH,GAAA7gC,IAGA,OADAghC,GAAA,SACA,IAAAC,OAAAD,EAAA,KAGO,IAAAE,GAAAJ,KACA,SAAAK,GAAAC,GACP,IAAAh8B,EAAA87B,GACA,GAAAE,gBAAAH,OACA,GAAAG,EAAAn/B,OAWAmD,EAAAg8B,MAXA,CACA,IAAAC,EAAA,IACAD,EAAAE,aACAD,GAAA,KAEAD,EAAAG,YACAF,GAAA,KAEAj8B,EAAA,IAAA67B,OAAAG,EAAAJ,OAAAK,GAOA,OADAj8B,EAAAo8B,UAAA,EACAp8B,EAEA,SAAAq8B,GAAAvO,EAAAkO,EAAAjB,EAAAuB,GAEA,IAOA3Q,EAPArJ,EAAAwL,EAAA,EAAAwO,EACAtoB,EAAA+mB,EAAAwB,YAAA,IAAAja,EAAA,KACArO,EAAA8mB,EAAAl8B,QAAA,IAAAyjB,IACA,IAAArO,IACAA,EAAA8mB,EAAAv5B,QAEAw6B,EAAAI,UAAApoB,EAEA,MAAA2X,EAAAqQ,EAAApQ,KAAAmP,GAAA,CACA,IAAAyB,EAAA7Q,EAAArY,OAAA,EACA,GAAAkpB,GAAAla,GAAA0Z,EAAAI,WAAA9Z,EACA,OACAma,KAAA9Q,EAAA,GACAsD,YAAAqN,EAAA,EAAAE,EACArN,UAAAmN,EAAA,EAAAN,EAAAI,WAIA,YAEA,SAAAM,GAAA5O,EAAAkO,EAAAjB,EAAAuB,GAIA,IAEA3Q,EAFArJ,EAAAwL,EAAA,EAAAwO,EACAN,EAAAI,UAAA,EAEA,MAAAzQ,EAAAqQ,EAAApQ,KAAAmP,GAAA,CACA,IAAAyB,EAAA7Q,EAAArY,OAAA,EACA,GAAAkpB,EAAAla,EAEA,YAEA,GAAA0Z,EAAAI,WAAA9Z,EAEA,OACAma,KAAA9Q,EAAA,GACAsD,YAAAqN,EAAA,EAAAE,EACArN,UAAAmN,EAAA,EAAAN,EAAAI,WAIA,YAEO,SAAAO,GAAA7O,EAAAkO,EAAAjB,EAAAuB,GAGPN,EAAAI,UAAA,EACA,IAAAzQ,EAAAqQ,EAAApQ,KAAAmP,GACA,IAAApP,EACA,YAGA,IAAAhB,EAAAgB,EAAA,GAAA9sB,QAAA,QAEA69B,GAAA5O,EAAAkO,EAAAjB,EAAAuB,GAEAD,GAAAvO,EAAAkO,EAAAjB,EAAAuB,GAKA,OADAN,EAAAI,UAAA,EACAzR,ECtGA,IAAIiS,GAAmB,WACvB,SAAAC,EAAAC,GACA,IAAA5J,EAA2BwE,GAAOoF,GAClCz4B,KAAAy4B,cAAA5J,EACA7uB,KAAA04B,UAAAF,EAAAG,gBAAA9J,GACA7uB,KAAA44B,KAAA,IAAAC,IA0BA,OAxBAL,EAAAG,gBAAA,SAAA9J,GAEA,IADA,IAAAiK,EAAA,IAAA5F,WAAA,KACA38B,EAAA,EAAuBA,EAAA,IAASA,IAChCuiC,EAAAviC,GAAAs4B,EAEA,OAAAiK,GAEAN,EAAArgC,UAAAmF,IAAA,SAAAy7B,EAAAjzB,GACA,IAAAtO,EAAoB67B,GAAOvtB,GAC3BizB,GAAA,GAAAA,EAAA,IACA/4B,KAAA04B,UAAAK,GAAAvhC,EAGAwI,KAAA44B,KAAAt7B,IAAAy7B,EAAAvhC,IAGAghC,EAAArgC,UAAAf,IAAA,SAAA2hC,GACA,OAAAA,GAAA,GAAAA,EAAA,IACA/4B,KAAA04B,UAAAK,GAGA/4B,KAAA44B,KAAAxhC,IAAA2hC,IAAA/4B,KAAAy4B,eAGAD,EA/BuB,GCFnBQ,IDoCJ,WACA,SAAAC,IACAj5B,KAAAw1B,QAAA,IAA2B+C,GAAmB,GAE9CU,EAAA9gC,UAAA4a,IAAA,SAAAgmB,GACA/4B,KAAAw1B,QAAAl4B,IAAAy7B,EAAA,IAEAE,EAAA9gC,UAAA+gC,IAAA,SAAAH,GACA,WAAA/4B,KAAAw1B,QAAAp+B,IAAA2hC,IARA,GCpCgB,WAChB,SAAAI,EAAAC,GAGA,IAFA,IAAAC,EAAA,EACAC,EAAA,EACA/iC,EAAA,EAAAwG,EAAAq8B,EAAAj8B,OAA2C5G,EAAAwG,EAASxG,IAAA,CACpD,IAAAmc,EAAA0mB,EAAA7iC,GAAA2Y,EAAAwD,EAAA,GAAA6a,EAAA7a,EAAA,GAAAnH,EAAAmH,EAAA,GACA6a,EAAA8L,IACAA,EAAA9L,GAEAre,EAAAoqB,IACAA,EAAApqB,GAEA3D,EAAA+tB,IACAA,EAAA/tB,GAGA8tB,IACAC,IACA,IAAAC,EAAA,IAAyBxG,GAAWuG,EAAAD,EAAA,GACpC,IAAA9iC,EAAA,EAAAwG,EAAAq8B,EAAAj8B,OAA2C5G,EAAAwG,EAASxG,IAAA,CACpD,IAAAijC,EAAAJ,EAAA7iC,GAAA2Y,EAAAsqB,EAAA,GAAAjM,EAAAiM,EAAA,GAAAjuB,EAAAiuB,EAAA,GACAD,EAAAj8B,IAAA4R,EAAAqe,EAAAhiB,GAEAvL,KAAAy5B,QAAAF,EACAv5B,KAAA05B,aAAAL,EAQA,OANAF,EAAAhhC,UAAAwhC,UAAA,SAAAC,EAAArM,GACA,OAAAA,EAAA,GAAAA,GAAAvtB,KAAA05B,aACA,EAEA15B,KAAAy5B,QAAAriC,IAAAwiC,EAAArM,IAEA4L,EAhCgB,IAmChBU,GAAA,KACA,SAAAC,KA2BA,OA1BA,OAAAD,KACAA,GAAA,IAA4Bb,GAAY,CACxC,UACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,WACA,cAGAa,GAEA,IAAAE,GAAA,KACA,SAAAC,KACA,UAAAD,GAAA,CACAA,GAAA,IAA0BxB,GAAmB,GAE7C,IADA,IAAA0B,EAAA,sDACA1jC,EAAA,EAAuBA,EAAA0jC,EAAA98B,OAAyC5G,IAChEwjC,GAAAz8B,IAAA28B,EAAA78B,WAAA7G,GAAA,GAEA,IAAA2jC,EAAA,MACA,IAAA3jC,EAAA,EAAuBA,EAAA2jC,EAAA/8B,OAAuC5G,IAC9DwjC,GAAAz8B,IAAA48B,EAAA98B,WAAA7G,GAAA,GAGA,OAAAwjC,GAEA,IAAAI,GAAA,WACA,SAAAA,KAiIA,OA/HAA,EAAAC,YAAA,SAAAC,EAAAC,EAAA9Q,EAAA+Q,EAAAC,GAEA,IAAAC,EAAAD,EAAA,EACA,GACA,IAAAjN,EAAA+M,EAAAl9B,WAAAq9B,GACAC,EAAAL,EAAAjjC,IAAAm2B,GACA,OAAAmN,EACA,MAEAD,UACSA,EAAAF,GAET,GAAAA,EAAA,GACA,IAAAI,EAAAL,EAAAl9B,WAAAm9B,EAAA,GACAK,EAAAN,EAAAl9B,WAAAq9B,IACA,KAAAE,GAAA,KAAAC,GACA,KAAAD,GAAA,KAAAC,GACA,MAAAD,GAAA,MAAAC,IAIAH,IAGA,OACA1P,MAAA,CACAJ,gBAAAnB,EACAoB,YAAA2P,EAAA,EACA1P,cAAArB,EACAsB,UAAA2P,EAAA,GAEAI,IAAAP,EAAA3S,UAAA4S,EAAAE,EAAA,KAGAN,EAAAW,aAAA,SAAAC,GAIA,IAHA,IAAAC,EAAAlB,KACAO,EAAAL,KACAr+B,EAAA,GACApF,EAAA,EAAA0kC,EAAAF,EAAAG,eAAyD3kC,GAAA0kC,EAAgB1kC,IAAA,CACzE,IAAA+jC,EAAAS,EAAAI,eAAA5kC,GACAwG,EAAAu9B,EAAAn9B,OACAi+B,EAAA,EACAb,EAAA,EACAc,EAAA,EACAx8B,EAAA,EACAy8B,GAAA,EACAC,GAAA,EACAC,GAAA,EACA,MAAAJ,EAAAr+B,EAAA,CACA,IAAA0+B,GAAA,EACAlO,EAAA+M,EAAAl9B,WAAAg+B,GACA,QAAAv8B,EAAA,CACA,IAAA67B,OAAA,EACA,OAAAnN,GACA,QACA+N,GAAA,EACAZ,EAAA,EACA,MACA,QACAA,EAAAY,EAAA,IACA,MACA,QACAC,GAAA,EACAb,EAAA,EACA,MACA,QACAA,EAAAa,EAAA,IACA,MACA,SACAC,GAAA,EACAd,EAAA,EACA,MACA,SACAA,EAAAc,EAAA,IACA,MAEA,QACAd,EAAA,KAAAW,GAAA,KAAAA,EAAA,IACA,MACA,QACAX,EAAA,KAAAW,GAAA,KAAAA,EAAA,IACA,MACA,QACAX,EAAA,KAAAW,GAAA,KAAAA,EAAA,IACA,MACA,QACAX,EAAAL,EAAAjjC,IAAAm2B,GAGA,IAAAmN,IACA/+B,EAAAqD,KAAAm7B,EAAAC,YAAAC,EAAAC,EAAA/jC,EAAAgkC,EAAAa,IACAK,GAAA,QAGA,QAAA58B,EAAA,CACA67B,EAAAL,EAAAjjC,IAAAm2B,GAEA,IAAAmN,EACAe,GAAA,EAGA58B,EAAA,QAIAA,EAAAm8B,EAAArB,UAAA96B,EAAA0uB,GACA,IAAA1uB,IACA48B,GAAA,GAGAA,IACA58B,EAAA,EACAy8B,GAAA,EACAC,GAAA,EACAC,GAAA,EAEAjB,EAAAa,EAAA,EACAC,EAAA9N,GAEA6N,IAEA,KAAAv8B,GACAlD,EAAAqD,KAAAm7B,EAAAC,YAAAC,EAAAC,EAAA/jC,EAAAgkC,EAAAx9B,IAGA,OAAApB,GAEAw+B,EAlIA,GAyIO,SAAAW,GAAAC,GACP,OAAAA,GAAA,oBAAAA,EAAAG,cAAA,oBAAAH,EAAAI,eAIAhB,GAAAW,aAAAC,GAFA,GC9NA,IC4IOW,GD5IPC,GAAA,WACA,SAAAA,IACA37B,KAAA47B,iBAAA,CACA,iBACA,iBACA,2EACA,kCA0EA,OAvEAD,EAAAxjC,UAAA0jC,iBAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAJ,GAAAC,EAAA,CACA,IAAApgC,EAAAqE,KAAAm8B,mBAAAJ,EAAAG,GACA,GAAAvgC,EACA,OACAovB,MAAA+Q,EACAtkC,MAAAmE,GAIA,GAAAqgC,GAAAC,EAAA,CACAtgC,EAAAqE,KAAAm8B,mBAAAF,EAAAC,GACA,GAAAvgC,EACA,OACAovB,MAAAiR,EACAxkC,MAAAmE,GAIA,aAEAggC,EAAAxjC,UAAAgkC,mBAAA,SAAAzF,EAAAwF,GACA,IAAAE,EAAAp8B,KAAAq8B,cAAA3F,EAAAwF,GACA,cAAAE,EACAA,EAEAp8B,KAAAs8B,YAAA5F,EAAAwF,IAEAP,EAAAxjC,UAAAkkC,cAAA,SAAA7kC,EAAA0kC,GACA,IAAAK,EAAA1sB,KAAA2sB,IAAA,GAAAhlC,EAAA2F,QAAA3F,EAAA0gC,YAAA,SACAuE,EAAAnd,OAAA9nB,GACAklC,EAAAC,WAAAnlC,GACA,OAAAolC,MAAAH,IAAAG,MAAAF,IAAAD,IAAAC,EAYA,KAXA,IAAAD,GAAAP,GAMAO,EAAA5sB,KAAAklB,MAAA0H,EAAAF,GACAE,GAAAP,EAAAK,KACAhjB,OAAAkjB,EAAAF,IAPA,MAYAZ,EAAAxjC,UAAAmkC,YAAA,SAAA9kC,EAAA0kC,GACA,OAAAl8B,KAAA68B,iBAAA78B,KAAA47B,iBAAApkC,EAAA0kC,IAEAP,EAAAxjC,UAAA0kC,iBAAA,SAAAC,EAAAtlC,EAAA0kC,GAEA,IADA,IAAAvgC,EAAA,KACApF,EAAA,EAAAwG,EAAA+/B,EAAA3/B,OAA+C,OAAAxB,GAAApF,EAAAwG,EAA4BxG,IAC3EoF,EAAAqE,KAAA+8B,gBAAAD,EAAAvmC,GAAAiB,EAAA0kC,GAEA,OAAAvgC,GAEAggC,EAAAxjC,UAAA4kC,gBAAA,SAAAC,EAAAxlC,EAAA0kC,GACA,IAAAhpB,EAAA8pB,EAAAxiC,QAAAhD,GACA,OAAA0b,GAAA,GACAA,GAAAgpB,EAAA,KACAhpB,EAAA,EACAA,EAAA8pB,EAAA7/B,OAAA,EAGA+V,GAAA8pB,EAAA7/B,OAEA6/B,EAAA9pB,IAEA,MAEAyoB,EAAAsB,SAAA,IAAAtB,EACAA,EAhFA,GCAAuB,GAAA,WACA,SAAAA,IACAl9B,KAAAm9B,cAAA,GACAn9B,KAAAo9B,cAAAnmC,OAAAY,OAAA,MAYA,OAVAqlC,EAAA/kC,UAAAkG,OAAA,SAAAg/B,EAAA/P,GACAttB,KAAAm9B,cAAAE,GAAA/P,EACAttB,KAAAo9B,cAAA9P,EAAAnE,eAAAkU,GAEAH,EAAA/kC,UAAAmlC,aAAA,SAAAD,GACA,OAAAr9B,KAAAm9B,cAAAE,IAEAH,EAAA/kC,UAAAolC,aAAA,SAAAjQ,GACA,OAAAttB,KAAAo9B,cAAA9P,EAAAnE,gBAAA,GAEA+T,EAfA,GAiBAM,GAAA,IAAAN,GACAO,GAAA,IAAAP,GACAQ,GAAA,IAAAR,GAgJO,SAAAS,GAAAC,EAAAC,GACP,IAAAC,GAAA,MAAAD,IAAA,OACA,OAAAD,EAAAE,KAAA,GAjJA,WACA,SAAAz/B,EAAAg/B,EAAAU,EAAAC,EAAAC,QACA,IAAAD,IAA6CA,EAAAD,QAC7C,IAAAE,IAAkDA,EAAAD,GAClDR,GAAAn/B,OAAAg/B,EAAAU,GACAN,GAAAp/B,OAAAg/B,EAAAW,GACAN,GAAAr/B,OAAAg/B,EAAAY,GAEA5/B,EAAA,aACAA,EAAA,eACAA,EAAA,SACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,YACAA,EAAA,YACAA,EAAA,aACAA,EAAA,eACAA,EAAA,UACAA,EAAA,WACAA,EAAA,uBACAA,EAAA,mBACAA,EAAA,yBACAA,EAAA,uBACAA,EAAA,aACAA,EAAA,aACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,OAAoC,IAAK,SACzCA,EAAA,uBACAA,EAAA,wBACAA,EAAA,wBACAA,EAAA,yBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,oBACAA,EAAA,sBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,YACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,uBACAA,EAAA,kBACAA,EAAA,wBACAA,EAAA,uBACAA,EAAA,sBACAA,EAAA,sBAtHA,GAyHA,SAAAq9B,GACA,SAAA7T,EAAAwV,GACA,OAAAG,GAAAF,aAAAD,GAGA,SAAAa,EAAApmC,GACA,OAAA0lC,GAAAD,aAAAzlC,GAGA,SAAAqmC,EAAAd,GACA,OAAAI,GAAAH,aAAAD,GAGA,SAAAe,EAAAf,GACA,OAAAK,GAAAJ,aAAAD,GAGA,SAAAgB,EAAAvmC,GACA,OAAA2lC,GAAAF,aAAAzlC,IAAA4lC,GAAAH,aAAAzlC,GAdA4jC,EAAA7T,WAIA6T,EAAAwC,aAIAxC,EAAAyC,mBAIAzC,EAAA0C,wBAIA1C,EAAA2C,mBApBA,CAqBC3C,QAAA,MA0BD,WACA,SAAA4C,EAAAC,EAAAC,EAAAC,EAAAC,EAAArB,GACAr9B,KAAAvG,KAAA,EACAuG,KAAAu+B,UACAv+B,KAAAw+B,WACAx+B,KAAAy+B,SACAz+B,KAAA0+B,UACA1+B,KAAAq9B,UAEAiB,EAAAnmC,UAAA2xB,OAAA,SAAAC,GACA,WAAAA,EAAAtwB,OAGAuG,KAAAu+B,UAAAxU,EAAAwU,SACAv+B,KAAAw+B,WAAAzU,EAAAyU,UACAx+B,KAAAy+B,SAAA1U,EAAA0U,QACAz+B,KAAA0+B,UAAA3U,EAAA2U,SACA1+B,KAAAq9B,UAAAtT,EAAAsT,UAEAiB,EAAAnmC,UAAAwmC,cAAA,WACA,WAAA3+B,KAAAq9B,SACA,IAAAr9B,KAAAq9B,SACA,KAAAr9B,KAAAq9B,SACA,IAAAr9B,KAAAq9B,SACA,IAAAr9B,KAAAq9B,SAKAiB,EAAAnmC,UAAAymC,wBAAA,WACA,OAAA5+B,KAAAu+B,SAAA,IAAAv+B,KAAAq9B,SACAr9B,KAAAw+B,UAAA,IAAAx+B,KAAAq9B,SACAr9B,KAAAy+B,QAAA,IAAAz+B,KAAAq9B,SACAr9B,KAAA0+B,SAAA,KAAA1+B,KAAAq9B,UAjCA,GAsCA,WACA,SAAAwB,EAAAjB,EAAAE,GACA99B,KAAAvG,KAAA,EACAuG,KAAA49B,YACA59B,KAAA89B,aAJA,GASA,WACA,SAAAgB,EAAAP,EAAAC,EAAAC,EAAAC,EAAAK,EAAAC,GACAh/B,KAAAu+B,UACAv+B,KAAAw+B,WACAx+B,KAAAy+B,SACAz+B,KAAA0+B,UACA1+B,KAAAi/B,SAAAF,EACA/+B,KAAAk/B,aAAAF,GAPA,GAeA,WACA,SAAAG,MADA,GA9DA,IC3LOC,GAIAC,GAYAC,GAmLAC,GAWAC,GASAC,GAUAC,GAkBAC,GAcAC,GAeAC,GAOAC,GAQAC,GA+BAC,GAWAC,GAsBAC,GA8BAC,GA2BAC,GAWAC,GAkBAC,GAkBAC,GA8DAC,GAqBAC,GA6BAC,GAeAC,GAMAC,GASAC,GAkBAC,GCxmBHC,GAAyB,WAC7B,IAAAzyB,EAAA,SAAAzX,EAAA0X,GAIA,OAHAD,EAAArX,OAAAuX,gBACA,CAAcC,UAAA,cAAgBvR,OAAA,SAAArG,EAAA0X,GAAsC1X,EAAA4X,UAAAF,IACpE,SAAA1X,EAAA0X,GAA6B,QAAAlW,KAAAkW,IAAAnW,eAAAC,KAAAxB,EAAAwB,GAAAkW,EAAAlW,KAC7BiW,EAAAzX,EAAA0X,IAEA,gBAAA1X,EAAA0X,GAEA,SAAAG,IAAuB1O,KAAAb,YAAAtI,EADvByX,EAAAzX,EAAA0X,GAEA1X,EAAAsB,UAAA,OAAAoW,EAAAtX,OAAAY,OAAA0W,IAAAG,EAAAvW,UAAAoW,EAAApW,UAAA,IAAAuW,IAV6B,GAmBzBsyB,GAAS,SAAA/wB,GAEb,SAAAgxB,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAnzB,EAAA+B,EAAAvZ,KAAAsJ,KAAAkhC,EAAAC,EAAAC,EAAAC,IAAArhC,KAKA,OAJAkO,EAAAgzB,2BACAhzB,EAAAizB,uBACAjzB,EAAAkzB,qBACAlzB,EAAAmzB,iBACAnzB,EAmHA,OA1HI6yB,GAASE,EAAAhxB,GAYbgxB,EAAA9oC,UAAAmyB,MAAA,WACA,WAAA2W,EAAAjhC,KAAAkhC,yBAAAlhC,KAAAmhC,qBAAAnhC,KAAAohC,mBAAAphC,KAAAqhC,iBAKAJ,EAAA9oC,UAAA0vB,SAAA,WACA,UAAA7nB,KAAAkhC,yBAAA,IAAAlhC,KAAAmhC,qBAAA,OAAAnhC,KAAAohC,mBAAA,IAAAphC,KAAAqhC,eAAA,KAKAJ,EAAA9oC,UAAAmpC,gBAAA,SAAAvX,GACA,OAAAkX,EAAAM,gBAAAvhC,KAAA+pB,IAKAkX,EAAAM,gBAAA,SAAAvkB,EAAAzO,GACA,OAAAyO,EAAAkkB,2BAAA3yB,EAAA2yB,0BACAlkB,EAAAmkB,uBAAA5yB,EAAA4yB,sBACAnkB,EAAAokB,qBAAA7yB,EAAA6yB,oBACApkB,EAAAqkB,iBAAA9yB,EAAA8yB,gBAKAJ,EAAA9oC,UAAAqpC,aAAA,WACA,OAAAxhC,KAAAkhC,2BAAAlhC,KAAA2qB,iBAAA3qB,KAAAmhC,uBAAAnhC,KAAA4qB,YACA,EAEA,GAKAqW,EAAA9oC,UAAA8zB,eAAA,SAAApB,EAAAC,GACA,WAAA9qB,KAAAwhC,eACA,IAAAP,EAAAjhC,KAAA2qB,gBAAA3qB,KAAA4qB,YAAAC,EAAAC,GAEA,IAAAmW,EAAApW,EAAAC,EAAA9qB,KAAA2qB,gBAAA3qB,KAAA4qB,cAKAqW,EAAA9oC,UAAAspC,YAAA,WACA,WAAmBlY,GAAQvpB,KAAAohC,mBAAAphC,KAAAqhC,iBAK3BJ,EAAA9oC,UAAA+zB,iBAAA,SAAAvB,EAAAC,GACA,WAAA5qB,KAAAwhC,eACA,IAAAP,EAAAtW,EAAAC,EAAA5qB,KAAA6qB,cAAA7qB,KAAA8qB,WAEA,IAAAmW,EAAAjhC,KAAA6qB,cAAA7qB,KAAA8qB,UAAAH,EAAAC,IAMAqW,EAAA7U,cAAA,SAAAzc,EAAAC,GAEA,YADA,IAAAA,IAA6BA,EAAAD,GAC7B,IAAAsxB,EAAAtxB,EAAA6Z,WAAA7Z,EAAA8Z,OAAA7Z,EAAA4Z,WAAA5Z,EAAA6Z,SAKAwX,EAAAS,cAAA,SAAAC,GACA,WAAAV,EAAAU,EAAAT,yBAAAS,EAAAR,qBAAAQ,EAAAP,mBAAAO,EAAAN,iBAKAJ,EAAAW,mBAAA,SAAA5kB,EAAAzO,GACA,GAAAyO,IAAAzO,IAAAyO,GAAAzO,EACA,SAEA,IAAAyO,IAAAzO,EACA,SAEA,GAAAyO,EAAA7f,SAAAoR,EAAApR,OACA,SAEA,QAAA5G,EAAA,EAAAwG,EAAAigB,EAAA7f,OAAuC5G,EAAAwG,EAASxG,IAChD,IAAAyJ,KAAAuhC,gBAAAvkB,EAAAzmB,GAAAgY,EAAAhY,IACA,SAGA,UAKA0qC,EAAAY,aAAA,SAAA1sB,GACA,OAAAA,GACA,kBAAAA,EAAA+rB,0BACA,kBAAA/rB,EAAAgsB,sBACA,kBAAAhsB,EAAAisB,oBACA,kBAAAjsB,EAAAksB,gBAKAJ,EAAAa,oBAAA,SAAAnX,EAAAC,EAAAC,EAAAC,EAAAiX,GACA,WAAAA,EACA,IAAAd,EAAAtW,EAAAC,EAAAC,EAAAC,GAEA,IAAAmW,EAAApW,EAAAC,EAAAH,EAAAC,IAEAqW,EA3Ha,CA4HXxW,IC/IFuX,GAAA,WACA,SAAAA,EAAAC,EAAAxoC,EAAAgB,GACAuF,KAAAiiC,OAAA,EAAAA,EACAjiC,KAAAvG,OACAuG,KAAAvF,WAKA,OAHAunC,EAAA7pC,UAAA0vB,SAAA,WACA,UAAA7nB,KAAAiiC,OAAA,KAAAjiC,KAAAvG,KAAA,KAEAuoC,EATA,IAYA,WACA,SAAAE,EAAAC,EAAAC,GACApiC,KAAAmiC,SACAniC,KAAAoiC,aAHA,GAQA,WACA,SAAAC,EAAAF,EAAAC,GACApiC,KAAAmiC,SACAniC,KAAAoiC,YAHA,IFlBA,SAAAhD,GACAA,IAAA,iCADA,CAECA,QAAA,KAED,SAAAC,GACAA,IAAA,kBACAA,IAAA,kBACAA,IAAA,wBACAA,IAAA,oBAJA,CAKCA,QAAA,KAOD,SAAAC,GAIAA,IAAA,wBACAA,IAAA,4BACAA,IAAA,gBACAA,IAAA,oBACAA,IAAA,oBACAA,IAAA,kBACAA,IAAA,gBACAA,IAAA,8BACAA,IAAA,0BACAA,IAAA,sBACAA,IAAA,qBACAA,IAAA,uBACAA,IAAA,2BACAA,IAAA,iBACAA,IAAA,mBACAA,IAAA,6BACAA,IAAA,yBACAA,IAAA,+BACAA,IAAA,6BACAA,IAAA,uBACAA,IAAA,uBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,mBACAA,IAAA,iCACAA,IAAA,eACAA,IAAA,eACAA,IAAA,eACAA,IAAA,eACAA,IAAA,eACAA,IAAA,eACAA,IAAA,eACAA,IAAA,eACAA,IAAA,eACAA,IAAA,iBACAA,IAAA,iBACAA,IAAA,iBACAA,IAAA,iBACAA,IAAA,iBACAA,IAAA,iBACAA,IAAA,iBACAA,IAAA,iBACAA,IAAA,iBACAA,IAAA,iBACAA,IAAA,yBACAA,IAAA,+BAKAA,IAAA,mCAKAA,IAAA,2BAKAA,IAAA,2BAKAA,IAAA,2BAKAA,IAAA,uBAKAA,IAAA,2BAKAA,IAAA,iCAKAA,IAAA,uDAKAA,IAAA,mCAKAA,IAAA,yDAKAA,IAAA,2BAIAA,IAAA,qBAIAA,IAAA,yBACAA,IAAA,2BACAA,IAAA,2BACAA,IAAA,2BACAA,IAAA,2BACAA,IAAA,2BACAA,IAAA,2BACAA,IAAA,2BACAA,IAAA,4BACAA,IAAA,4BACAA,IAAA,4BACAA,IAAA,0CACAA,IAAA,gCACAA,IAAA,4CACAA,IAAA,0CACAA,IAAA,wCACAA,IAAA,sCAIAA,IAAA,gDACAA,IAAA,0BACAA,IAAA,0BAKAA,IAAA,8BA7KA,CA8KCA,QAAA,KAKD,SAAAC,GAIAA,IAAA,gBAIAA,IAAA,gBARA,CASCA,QAAA,KAED,SAAAC,GACAA,IAAA,kBACAA,IAAA,sBACAA,IAAA,wBAHA,CAICA,QAAA,KAKD,SAAAC,GACAA,IAAA,kBACAA,IAAA,sBACAA,IAAA,oBACAA,IAAA,kBAJA,CAKCA,QAAA,KAKD,SAAAC,GAIAA,IAAA,gCAIAA,IAAA,cAIAA,IAAA,kBAZA,CAaCA,QAAA,KAKD,SAAAC,GAIAA,IAAA,cAIAA,IAAA,kBARA,CASCA,QAAA,KAKD,SAAAC,GAIAA,IAAA,cAIAA,IAAA,kBARA,CASCA,QAAA,KAMD,SAAAC,GACAA,IAAA,kEACAA,IAAA,gEACAA,IAAA,4DACAA,IAAA,0DAJA,CAKCA,QAAA,KAED,SAAAC,GACAA,IAAA,sBACAA,IAAA,4BAFA,CAGCA,QAAA,KAKD,SAAAC,GAIAA,IAAA,sBAIAA,IAAA,kCAIAA,IAAA,8CAIAA,IAAA,0BAIAA,IAAA,oBAIAA,IAAA,kBAIAA,IAAA,kBA5BA,CA6BCA,QAAA,KAED,SAAAC,GACAA,IAAA,kBACAA,IAAA,oBACAA,IAAA,oBACAA,IAAA,gCACAA,IAAA,gCALA,CAMCA,QAAA,KAKD,SAAAC,GAIAA,IAAA,kBAIAA,IAAA,kBAIAA,IAAA,sBAIAA,IAAA,8BAhBA,CAiBCA,QAAA,KAKD,SAAAC,GAIAA,IAAA,sBAIAA,IAAA,oBAIAA,IAAA,sBAIAA,IAAA,oBAIAA,IAAA,sBAIAA,IAAA,oBAxBA,CAyBCA,QAAA,KAKD,SAAAC,GAIAA,IAAA,kBAIAA,IAAA,oBAIAA,IAAA,4BAIAA,IAAA,0BAIAA,IAAA,kCAIAA,IAAA,oCAxBA,CAyBCA,QAAA,KAED,SAAAC,GACAA,IAAA,gBACAA,IAAA,cACAA,IAAA,0BACAA,IAAA,0BACAA,IAAA,sBALA,CAMCA,QAAA,KAKD,SAAAC,GAIAA,IAAA,oBAIAA,IAAA,oBAIAA,IAAA,oBAZA,CAaCA,QAAA,KAKD,SAAAC,GAIAA,IAAA,0CAIAA,IAAA,gDAIAA,IAAA,8BAZA,CAaCA,QAAA,KAKD,SAAAC,GAIAA,IAAA,wBAIAA,IAAA,0BAIAA,IAAA,gDAIAA,IAAA,gDAIAA,IAAA,wDAIAA,IAAA,0CAIAA,IAAA,kCAIAA,IAAA,oCAIAA,IAAA,4CAIAA,IAAA,sCAIAA,IAAA,uCAIAA,IAAA,6BAIAA,IAAA,uCAIAA,IAAA,uCAxDA,CAyDCA,QAAA,KAKD,SAAAC,GAIAA,IAAA,kBAIAA,IAAA,sBAMAA,IAAA,oCAIAA,IAAA,wBAlBA,CAmBCA,QAAA,KAED,SAAAC,GACAA,IAAA,sBACAA,IAAA,0BACAA,IAAA,gCACAA,IAAA,oBACAA,IAAA,0BACAA,IAAA,oBACAA,IAAA,sBACAA,IAAA,4BACAA,IAAA,sBACAA,IAAA,0BACAA,IAAA,qBACAA,IAAA,2BACAA,IAAA,mBACAA,IAAA,qBACAA,IAAA,2BACAA,IAAA,mBACAA,IAAA,+BACAA,IAAA,yBACAA,IAAA,mBACAA,IAAA,qBACAA,IAAA,mBACAA,IAAA,6BACAA,IAAA,iCACAA,IAAA,uBACAA,IAAA,qCACAA,IAAA,yBA1BA,CA2BCA,QAAA,KAED,SAAAC,GAKAA,IAAA,sCAIAA,IAAA,wCATA,CAUCA,QAAA,KAKD,SAAAC,GACAA,IAAA,sBACAA,IAAA,0CACAA,IAAA,wEAHA,CAICA,QAAA,KAED,SAAAC,GACAA,IAAA,sBACAA,IAAA,0CACAA,IAAA,oCAHA,CAICA,QAAA,KAKD,SAAAC,GAIAA,IAAA,kBAIAA,IAAA,kBAIAA,IAAA,oBAZA,CAaCA,QAAA,KAKD,SAAAC,GACAA,IAAA,kBACAA,IAAA,sBACAA,IAAA,4BACAA,IAAA,wBACAA,IAAA,oBACAA,IAAA,sBACAA,IAAA,0BACAA,IAAA,oBACAA,IAAA,gCACAA,IAAA,kBACAA,IAAA,6BACAA,IAAA,2BACAA,IAAA,2BACAA,IAAA,2BACAA,IAAA,uBACAA,IAAA,uBACAA,IAAA,yBACAA,IAAA,qBACAA,IAAA,uBACAA,IAAA,iBACAA,IAAA,mBACAA,IAAA,+BACAA,IAAA,uBACAA,IAAA,qBACAA,IAAA,2BACAA,IAAA,qCA1BA,CA2BCA,QAAA,KG1nBD,IAAIwB,GAAM,WACV,SAAAC,KASA,OAPAA,EAAAC,MAAA,SAAA5E,EAAAC,GACA,OAAeF,GAAQC,EAAAC,IAEvB0E,EAAAE,QAAA,KACAF,EAAAG,MAAA,KACAH,EAAAI,IAAA,IACAJ,EAAAK,QAAA,IACAL,EAVU,GAaH,SAAAM,KACP,OACAC,YAAA1pC,EACA2pC,eAAA3pC,EACA2b,wBAAiCA,EACjCvD,QAAiBD,EACjB+tB,QAAiBA,GACjBiD,OAAgBD,GAChB/Y,SAAkBA,GAClBmB,MAAeD,GACfwW,UAAmBD,GACnBzB,mBAA4BA,GAC5BF,eAAwBA,GACxBD,UAAmBA,GACnBnkC,QAAiBwR,EAAA,KACjBu2B,IAAajc,GACbib,MAAeA,ICvCf,IAAIiB,GAAyB,WAC7B,IAAA30B,EAAA,SAAAzX,EAAA0X,GAIA,OAHAD,EAAArX,OAAAuX,gBACA,CAAcC,UAAA,cAAgBvR,OAAA,SAAArG,EAAA0X,GAAsC1X,EAAA4X,UAAAF,IACpE,SAAA1X,EAAA0X,GAA6B,QAAAlW,KAAAkW,IAAAnW,eAAAC,KAAAxB,EAAAwB,GAAAkW,EAAAlW,KAC7BiW,EAAAzX,EAAA0X,IAEA,gBAAA1X,EAAA0X,GAEA,SAAAG,IAAuB1O,KAAAb,YAAAtI,EADvByX,EAAAzX,EAAA0X,GAEA1X,EAAAsB,UAAA,OAAAoW,EAAAtX,OAAAY,OAAA0W,IAAAG,EAAAvW,UAAAoW,EAAApW,UAAA,IAAAuW,IAV6B,GA6BzBw0B,GAAW,SAAAjzB,GAEf,SAAAkzB,IACA,cAAAlzB,KAAArU,MAAAoE,KAAAN,YAAAM,KAuMA,OAzMIijC,GAASE,EAAAlzB,GAIbhZ,OAAAC,eAAAisC,EAAAhrC,UAAA,OACAf,IAAA,WACA,OAAA4I,KAAAk2B,MAEA/+B,YAAA,EACAqG,cAAA,IAEAvG,OAAAC,eAAAisC,EAAAhrC,UAAA,WACAf,IAAA,WACA,OAAA4I,KAAAo2B,YAEAj/B,YAAA,EACAqG,cAAA,IAEAvG,OAAAC,eAAAisC,EAAAhrC,UAAA,OACAf,IAAA,WACA,OAAA4I,KAAAm2B,MAEAh/B,YAAA,EACAqG,cAAA,IAEA2lC,EAAAhrC,UAAAqf,SAAA,WACA,OAAAxX,KAAAs2B,WAEA6M,EAAAhrC,UAAAirC,gBAAA,WACA,OAAApjC,KAAAuuB,OAAAnsB,MAAA,IAEA+gC,EAAAhrC,UAAA+iC,aAAA,WACA,OAAAl7B,KAAAuuB,OAAApxB,QAEAgmC,EAAAhrC,UAAAgjC,eAAA,SAAA3R,GACA,OAAAxpB,KAAAuuB,OAAA/E,EAAA,IAEA2Z,EAAAhrC,UAAAkrC,kBAAA,SAAApY,EAAA0M,GACA,IAAA2L,EAAyBhL,GAAarN,EAAAxB,OAAkBiO,GAAyBC,GAAA33B,KAAAuuB,OAAAtD,EAAAzB,WAAA,MACjF,OAAA8Z,EACA,IAAuB7Y,GAAKQ,EAAAzB,WAAA8Z,EAAA1Y,YAAAK,EAAAzB,WAAA8Z,EAAAxY,WAE5B,MAEAqY,EAAAhrC,UAAAorC,qBAAA,SAAAtY,EAAA0M,GACA,IAAA6L,EAAAxjC,KAAAqjC,kBAAApY,EAAA0M,GACA,OAAA6L,EAOA,CACApL,KAAAp4B,KAAAuuB,OAAAtD,EAAAzB,WAAA,GAAA7B,UAAA6b,EAAA5Y,YAAA,EAAAK,EAAAxB,OAAA,GACAmB,YAAA4Y,EAAA5Y,YACAE,UAAAG,EAAAxB,QATA,CACA2O,KAAA,GACAxN,YAAAK,EAAAxB,OACAqB,UAAAG,EAAAxB,SASA0Z,EAAAhrC,UAAAsrC,mBAAA,SAAA9L,GACA,IACAxiB,EAEAuuB,EAHAx1B,EAAAlO,KAEAwpB,EAAA,EAEAma,EAAA,EACAC,EAAA,GACA/0B,EAAA,WACA,GAAA80B,EAAAC,EAAAzmC,OAAA,CACA,IAAA3F,EAAAksC,EAAA/b,UAAAic,EAAAD,GAAAh0B,MAAAi0B,EAAAD,GAAA/zB,KAQA,OAPA+zB,GAAA,EACAxuB,EAIAA,EAAA3d,QAHA2d,EAAA,CAA2BnQ,MAAA,EAAAxN,SAK3B2d,EAEA,OAAAqU,GAAAtb,EAAAqgB,OAAApxB,OACuBwR,GAGvB+0B,EAAAx1B,EAAAqgB,OAAA/E,GACAoa,EAAA11B,EAAA21B,WAAAH,EAAA/L,GACAgM,EAAA,EACAna,GAAA,EACA3a,MAGA,OAAgBA,SAEhBs0B,EAAAhrC,UAAA2rC,aAAA,SAAAta,EAAAmO,GAIA,IAHA,IAAAoM,EAAA/jC,KAAAuuB,OAAA/E,EAAA,GACAwa,EAAAhkC,KAAA6jC,WAAAE,EAAApM,GACAsM,EAAA,GACA12B,EAAA,EAAA22B,EAAAF,EAA2Cz2B,EAAA22B,EAAA/mC,OAAsBoQ,IAAA,CACjE,IAAAwd,EAAAmZ,EAAA32B,GACA02B,EAAAjlC,KAAA,CACAo5B,KAAA2L,EAAApc,UAAAoD,EAAApb,MAAAob,EAAAnb,KACAgb,YAAAG,EAAApb,MAAA,EACAmb,UAAAC,EAAAnb,IAAA,IAGA,OAAAq0B,GAEAd,EAAAhrC,UAAA0rC,WAAA,SAAAE,EAAApM,GACA,IACArQ,EADA3rB,EAAA,GAEAg8B,EAAAI,UAAA,EACA,MAAAzQ,EAAAqQ,EAAApQ,KAAAwc,GAAA,CACA,OAAAzc,EAAA,GAAAnqB,OAEA,MAEAxB,EAAAqD,KAAA,CAAyB2Q,MAAA2X,EAAArY,MAAAW,IAAA0X,EAAArY,MAAAqY,EAAA,GAAAnqB,SAEzB,OAAAxB,GAEAwnC,EAAAhrC,UAAAgsC,gBAAA,SAAApZ,GAEA,GADAA,EAAA/qB,KAAAokC,eAAArZ,GACAA,EAAAJ,kBAAAI,EAAAF,cACA,OAAA7qB,KAAAuuB,OAAAxD,EAAAJ,gBAAA,GAAAhD,UAAAoD,EAAAH,YAAA,EAAAG,EAAAD,UAAA,GAEA,IAAAuZ,EAAArkC,KAAAm2B,KACAmO,EAAAvZ,EAAAJ,gBAAA,EACA4Z,EAAAxZ,EAAAF,cAAA,EACA2Z,EAAA,GACAA,EAAAxlC,KAAAgB,KAAAuuB,OAAA+V,GAAA3c,UAAAoD,EAAAH,YAAA,IACA,QAAAr0B,EAAA+tC,EAAA,EAAwC/tC,EAAAguC,EAAkBhuC,IAC1DiuC,EAAAxlC,KAAAgB,KAAAuuB,OAAAh4B,IAGA,OADAiuC,EAAAxlC,KAAAgB,KAAAuuB,OAAAgW,GAAA5c,UAAA,EAAAoD,EAAAD,UAAA,IACA0Z,EAAA75B,KAAA05B,IAEAlB,EAAAhrC,UAAAssC,SAAA,SAAAxZ,GAGA,OAFAA,EAAAjrB,KAAA0kC,kBAAAzZ,GACAjrB,KAAA22B,oBACA32B,KAAAq2B,YAAAzB,oBAAA3J,EAAAzB,WAAA,IAAAyB,EAAAxB,OAAA,IAEA0Z,EAAAhrC,UAAAwsC,WAAA,SAAA1C,GACAA,EAAApyB,KAAAklB,MAAAkN,GACAA,EAAApyB,KAAAO,IAAA,EAAA6xB,GACAjiC,KAAA22B,oBACA,IAAAiO,EAAA5kC,KAAAq2B,YAAAxB,WAAAoN,GACA4C,EAAA7kC,KAAAuuB,OAAAqW,EAAA31B,OAAA9R,OAEA,OACAqsB,WAAA,EAAAob,EAAA31B,MACAwa,OAAA,EAAA5Z,KAAAC,IAAA80B,EAAApR,UAAAqR,KAGA1B,EAAAhrC,UAAAisC,eAAA,SAAArZ,GACA,IAAApb,EAAA3P,KAAA0kC,kBAAA,CAA4Clb,WAAAuB,EAAAJ,gBAAAlB,OAAAsB,EAAAH,cAC5Chb,EAAA5P,KAAA0kC,kBAAA,CAA0Clb,WAAAuB,EAAAF,cAAApB,OAAAsB,EAAAD,YAC1C,OAAAnb,EAAA6Z,aAAAuB,EAAAJ,iBACAhb,EAAA8Z,SAAAsB,EAAAH,aACAhb,EAAA4Z,aAAAuB,EAAAF,eACAjb,EAAA6Z,SAAAsB,EAAAD,UACA,CACAH,gBAAAhb,EAAA6Z,WACAoB,YAAAjb,EAAA8Z,OACAoB,cAAAjb,EAAA4Z,WACAsB,UAAAlb,EAAA6Z,QAGAsB,GAEAoY,EAAAhrC,UAAAusC,kBAAA,SAAAzZ,GACA,IAAa1B,GAAQiB,YAAAS,GACrB,UAAAnrB,MAAA,gBAEA,IAAA0pB,EAAAyB,EAAAzB,WAAAC,EAAAwB,EAAAxB,OACAqb,GAAA,EACA,GAAAtb,EAAA,EACAA,EAAA,EACAC,EAAA,EACAqb,GAAA,OAEA,GAAAtb,EAAAxpB,KAAAuuB,OAAApxB,OACAqsB,EAAAxpB,KAAAuuB,OAAApxB,OACAssB,EAAAzpB,KAAAuuB,OAAA/E,EAAA,GAAArsB,OAAA,EACA2nC,GAAA,MAEA,CACA,IAAAC,EAAA/kC,KAAAuuB,OAAA/E,EAAA,GAAArsB,OAAA,EACAssB,EAAA,GACAA,EAAA,EACAqb,GAAA,GAEArb,EAAAsb,IACAtb,EAAAsb,EACAD,GAAA,GAGA,OAAAA,EAIA,CAAoBtb,aAAAC,UAHpBwB,GAMAkY,EA1Me,CA2Mb/N,IAIE4P,GAAsB,WAC1B,SAAAC,EAAAC,GACAllC,KAAAmlC,sBAAAD,EACAllC,KAAAolC,eAAA,KAoPA,OAjPAH,EAAA9sC,UAAAy1B,YAAA,SAAAyX,EAAAC,EAAAC,GACA,IAAApnB,EAAAne,KAAAwlC,UAAAH,GACAjnB,EAAApe,KAAAwlC,UAAAF,GACA,IAAAnnB,IAAAC,EACA,OAAAnjB,QAAA6c,QAAA,MAEA,IAAA0Z,EAAArT,EAAAilB,kBACA3R,EAAArT,EAAAglB,kBACAqC,EAAA,IAA+BlU,GAAYC,EAAAC,EAAA,CAC3CL,0BAAA,EACAC,8BAAA,EACAtC,2BAAAwW,EACA5T,sBAAA,IAEArQ,EAAAmkB,EAAA7X,cACA8X,IAAApkB,EAAAnkB,OAAA,IAAA6C,KAAA2lC,oBAAAxnB,EAAAC,GACA,OAAAnjB,QAAA6c,QAAA,CACA4tB,YACApkB,aAGA2jB,EAAA9sC,UAAAwtC,oBAAA,SAAAxnB,EAAAC,GACA,IAAAwnB,EAAAznB,EAAA+c,eACA2K,EAAAznB,EAAA8c,eACA,GAAA0K,IAAAC,EACA,SAEA,QAAAvL,EAAA,EAA0BA,GAAAsL,EAA2BtL,IAAA,CACrD,IAAAjI,EAAAlU,EAAAgd,eAAAb,GACAhI,EAAAlU,EAAA+c,eAAAb,GACA,GAAAjI,IAAAC,EACA,SAGA,UAEA2S,EAAA9sC,UAAA2tC,wBAAA,SAAAC,EAAAC,GACA,IAAAjL,EAAA/6B,KAAAwlC,UAAAO,GACA,IAAAhL,EACA,OAAA9/B,QAAA6c,QAAAkuB,GAEA,IAAArqC,EAAA,GACAsqC,OAAA7sC,EACA4sC,EAAgBrpB,EAASqpB,EAAA,SAAAhpB,EAAAzO,GACzB,GAAAyO,EAAA+N,OAAAxc,EAAAwc,MACA,OAAuBN,GAAK+B,yBAAAxP,EAAA+N,MAAAxc,EAAAwc,OAG5B,IAAAmb,EAAAlpB,EAAA+N,MAAA,IACAob,EAAA53B,EAAAwc,MAAA,IACA,OAAAmb,EAAAC,IAEA,QAAA54B,EAAA,EAAA64B,EAAAJ,EAAyCz4B,EAAA64B,EAAAjpC,OAAqBoQ,IAAA,CAC9D,IAAAmF,EAAA0zB,EAAA74B,GAAAwd,EAAArY,EAAAqY,MAAA2L,EAAAhkB,EAAAgkB,KAAAV,EAAAtjB,EAAAsjB,IAIA,GAHA,kBAAAA,IACAiQ,EAAAjQ,GAEAjL,EAAA,CAIA,IAAA5M,EAAA4c,EAAAoJ,gBAAApZ,GAEA,GADA2L,IAAAhP,QAAA,cAAAqT,EAAA/E,KACA7X,IAAAuY,EAKA,GAAA7mB,KAAAO,IAAAsmB,EAAAv5B,OAAAghB,EAAAhhB,QAAA8nC,EAAAoB,WACA1qC,EAAAqD,KAAA,CAA6B+rB,QAAA2L,cAM7B,IAFA,IAAApV,EAA0BpD,EAAUC,EAAAuY,GAAA,GACpC4P,EAAAvL,EAAA0J,SAA4Cha,GAAKF,KAAAQ,GAAAiB,oBACjDwN,EAAA,EAAA+M,EAAAjlB,EAAiDkY,EAAA+M,EAAAppC,OAAuBq8B,IAAA,CACxE,IAAAnV,EAAAkiB,EAAA/M,GACA7pB,EAAAorB,EAAA4J,WAAA2B,EAAAjiB,EAAA7G,eACA5N,EAAAmrB,EAAA4J,WAAA2B,EAAAjiB,EAAA7G,cAAA6G,EAAA5G,gBACA+oB,EAAA,CACA9P,OAAA3N,OAAA1E,EAAA3G,cAAA2G,EAAA1G,gBACAoN,MAAA,CAA4BJ,gBAAAhb,EAAA6Z,WAAAoB,YAAAjb,EAAA8Z,OAAAoB,cAAAjb,EAAA4Z,WAAAsB,UAAAlb,EAAA6Z,SAE5BsR,EAAAoJ,gBAAAqC,EAAAzb,SAAAyb,EAAA9P,MACA/6B,EAAAqD,KAAAwnC,KAOA,MAHA,kBAAAP,GACAtqC,EAAAqD,KAAA,CAAyBg3B,IAAAiQ,EAAAvP,UAAAt9B,EAAA2xB,WAAA3xB,IAEzB6B,QAAA6c,QAAAnc,IAGAspC,EAAA9sC,UAAA2iC,aAAA,SAAAiL,GACA,IAAAhL,EAAA/6B,KAAAwlC,UAAAO,GACA,OAAAhL,EAGA9/B,QAAA6c,QAA+BgjB,GAAYC,IAF3C9/B,QAAA6c,QAAA,OAIAmtB,EAAA9sC,UAAAsuC,eAAA,SAAAV,EAAA9a,EAAAyb,EAAAC,GACA,IAAA5L,EAAA/6B,KAAAwlC,UAAAO,GACA,IAAAhL,EACA,OAAA9/B,QAAA6c,QAAA,MAEA,IAAA8uB,EAAA,GACAC,EAAA,IAAArP,OAAAkP,EAAAC,GACAG,EAAA/L,EAAAwI,qBAAAtY,EAAA4b,GACAE,EAAA9vC,OAAAY,OAAA,MACAkvC,EAAAD,EAAA1O,OAAA,EACA,QAAA3lB,EAAAsoB,EAAA0I,mBAAAoD,GAAAvsC,EAAAmY,EAAA5D,QAAiFvU,EAAA0K,MAAA4hC,EAAAzpC,QAAA8nC,EAAA+B,kBAA2E1sC,EAAAmY,EAAA5D,OAAA,CAC5J,IAAAupB,EAAA99B,EAAA9C,MACAuvC,EAAA3O,KAGA2O,EAAA3O,IAAA,EACAwE,MAAAtd,OAAA8Y,KAGAwO,EAAA5nC,KAAA,CACAioC,KAAA,GACAC,MAAA9O,EACAnB,WAAAmB,EACArN,MAAA,CAAwBJ,gBAAAM,EAAAzB,WAAAoB,YAAAkc,EAAAlc,YAAAC,cAAAI,EAAAzB,WAAAsB,UAAAgc,EAAAhc,cAGxB,OAAA7vB,QAAA6c,QAAA,CAAgC8uB,iBAIhC3B,EAAA9sC,UAAAgvC,kBAAA,SAAApB,EAAAhb,EAAA2b,EAAAC,GACA,IAAA5L,EAAA/6B,KAAAwlC,UAAAO,GACA,IAAAhL,EACA,OAAA9/B,QAAA6c,QAAA7gB,OAAAY,OAAA,OAIA,IAFA,IAAAgvC,EAAA,IAAArP,OAAAkP,EAAAC,GACAhrC,EAAA1E,OAAAY,OAAA,MACAyiC,EAAAvP,EAAAJ,gBAA8C2P,EAAAvP,EAAAF,cAA4ByP,IAE1E,IADA,IAAA2J,EAAAlJ,EAAA+I,aAAAxJ,EAAAuM,GACAt5B,EAAA,EAAA65B,EAAAnD,EAA6C12B,EAAA65B,EAAAjqC,OAAqBoQ,IAAA,CAClE,IAAA6qB,EAAAgP,EAAA75B,GACA,GAAAqvB,MAAAtd,OAAA8Y,SAAA,CAGA,IAAAppB,EAAArT,EAAAy8B,QACAppB,IACAA,EAAA,GACArT,EAAAy8B,QAAAppB,GAEAA,EAAAhQ,KAAA,CACA2rB,gBAAA2P,EACA1P,YAAAwN,EAAAxN,YACAC,cAAAyP,EACAxP,UAAAsN,EAAAtN,aAIA,OAAA7vB,QAAA6c,QAAAnc,IAGAspC,EAAA9sC,UAAA0jC,iBAAA,SAAAkK,EAAAhb,EAAAmR,EAAAwK,EAAAC,GACA,IAAA5L,EAAA/6B,KAAAwlC,UAAAO,GACA,IAAAhL,EACA,OAAA9/B,QAAA6c,QAAA,MAEA,IAAA+uB,EAAA,IAAArP,OAAAkP,EAAAC,GACA5b,EAAAH,cAAAG,EAAAD,YACAC,EAAA,CACAJ,gBAAAI,EAAAJ,gBACAC,YAAAG,EAAAH,YACAC,cAAAE,EAAAF,cACAC,UAAAC,EAAAD,UAAA,IAGA,IAAAuc,EAAAtM,EAAAoJ,gBAAApZ,GACAuc,EAAAvM,EAAAsI,kBAAA,CAAiD7Z,WAAAuB,EAAAJ,gBAAAlB,OAAAsB,EAAAH,aAA+Dic,GAChH,IAAAS,EACA,OAAArsC,QAAA6c,QAAA,MAEA,IAAAsgB,EAAA2C,EAAAoJ,gBAAAmD,GACA3rC,EAAqBggC,GAAmBsB,SAAApB,iBAAA9Q,EAAAsc,EAAAC,EAAAlP,EAAA8D,GACxC,OAAAjhC,QAAA6c,QAAAnc,IAGAspC,EAAA9sC,UAAAovC,kBAAA,SAAAnxC,EAAAoxC,GACA,IAAAt5B,EAAAlO,KACAynC,EAAA,CACAC,gBAAA,WACA,OAAAx5B,EAAAy5B,eAGA,GAAA3nC,KAAAmlC,sBAAA,CACAnlC,KAAAolC,eAAAplC,KAAAmlC,sBAAAsC,EAAAD,GAEA,IAAAprB,EAAA,GACA,QAAAC,KAAArc,KAAAolC,eACA,oBAAAplC,KAAAolC,eAAA/oB,IACAD,EAAApd,KAAAqd,GAGA,OAAAphB,QAAA6c,QAAAsE,GAoBA,OAAAnhB,QAAA8c,OAAA,IAAAjY,MAAA,sBAIAmlC,EAAA9sC,UAAAyvC,IAAA,SAAAxuB,EAAAC,GACA,IAAArZ,KAAAolC,gBAAA,oBAAAplC,KAAAolC,eAAAhsB,GACA,OAAAne,QAAA8c,OAAA,IAAAjY,MAAA,qCAAAsZ,IAEA,IACA,OAAAne,QAAA6c,QAAA9X,KAAAolC,eAAAhsB,GAAAxd,MAAAoE,KAAAolC,eAAA/rB,IAEA,MAAA/e,GACA,OAAAW,QAAA8c,OAAAzd,KAKA2qC,EAAAoB,WAAA,IAEApB,EAAA+B,kBAAA,IACA/B,EAvP0B,GA6PtB4C,GAAsB,SAAA53B,GAE1B,SAAA63B,EAAA5C,GACA,IAAAh3B,EAAA+B,EAAAvZ,KAAAsJ,KAAAklC,IAAAllC,KAEA,OADAkO,EAAA65B,QAAA9wC,OAAAY,OAAA,MACAqW,EA8BA,OAlCI+0B,GAAS6E,EAAA73B,GAMb63B,EAAA3vC,UAAAqV,QAAA,WACAxN,KAAA+nC,QAAA9wC,OAAAY,OAAA,OAEAiwC,EAAA3vC,UAAAqtC,UAAA,SAAAtc,GACA,OAAAlpB,KAAA+nC,QAAA7e,IAEA4e,EAAA3vC,UAAAwvC,WAAA,WACA,IAAAz5B,EAAAlO,KACAgE,EAAA,GAEA,OADA/M,OAAA+F,KAAAgD,KAAA+nC,SAAAxqC,QAAA,SAAAzF,GAA0D,OAAAkM,EAAAhF,KAAAkP,EAAA65B,QAAAjwC,MAC1DkM,GAEA8jC,EAAA3vC,UAAA6vC,eAAA,SAAAprB,GACA5c,KAAA+nC,QAAAnrB,EAAAie,KAAA,IAAqCqI,GAAYnc,GAAG9sB,MAAA2iB,EAAAie,KAAAje,EAAAqR,MAAArR,EAAAqrB,IAAArrB,EAAAqZ,YAEpD6R,EAAA3vC,UAAA+vC,mBAAA,SAAAC,EAAA7tC,GACA,GAAA0F,KAAA+nC,QAAAI,GAAA,CAGA,IAAApN,EAAA/6B,KAAA+nC,QAAAI,GACApN,EAAAxE,SAAAj8B,KAEAwtC,EAAA3vC,UAAAiwC,mBAAA,SAAAD,GACAnoC,KAAA+nC,QAAAI,WAGAnoC,KAAA+nC,QAAAI,IAEAL,EAnC0B,CAoCxB9C,IASF,oBAAAqD,gBAEI1uC,EAAA,KAAO2uC,OAAUzF,MC5hBrB1sC,EAAAU,EAAA4B,EAAA,+BAAAyjB,KAMA,IAAAxd,IAAA,EACO,SAAAwd,GAAAqsB,GACP,IAAA7pC,GAAA,CAGAA,IAAA,EACA,IAAA8pC,EAAA,IAA2BX,GAAsBU,GACjDE,EAAA,IAA2BnuB,EAAkB,SAAAT,GAC7Clf,KAAAigB,YAAAf,IACK2uB,GACL7tC,KAAAshB,UAAA,SAAA3hB,GACAmuC,EAAAxsB,UAAA3hB,EAAAsiB,QAGAjiB,KAAAshB,UAAA,SAAA3hB,GAEAoE,IACAwd,GAAA,2BCtBA,IAOAwsB,EACAC,EARApwC,EAAAjC,EAAAD,QAAA,GAUA,SAAAuyC,IACA,UAAA9oC,MAAA,mCAEA,SAAA+oC,IACA,UAAA/oC,MAAA,qCAsBA,SAAAgpC,EAAAC,GACA,GAAAL,IAAA3tC,WAEA,OAAAA,WAAAguC,EAAA,GAGA,IAAAL,IAAAE,IAAAF,IAAA3tC,WAEA,OADA2tC,EAAA3tC,WACAA,WAAAguC,EAAA,GAEA,IAEA,OAAAL,EAAAK,EAAA,GACK,MAAAzuC,GACL,IAEA,OAAAouC,EAAAhyC,KAAA,KAAAqyC,EAAA,GACS,MAAAzuC,GAET,OAAAouC,EAAAhyC,KAAAsJ,KAAA+oC,EAAA,KAMA,SAAAC,EAAAC,GACA,GAAAN,IAAAh/B,aAEA,OAAAA,aAAAs/B,GAGA,IAAAN,IAAAE,IAAAF,IAAAh/B,aAEA,OADAg/B,EAAAh/B,aACAA,aAAAs/B,GAEA,IAEA,OAAAN,EAAAM,GACK,MAAA3uC,GACL,IAEA,OAAAquC,EAAAjyC,KAAA,KAAAuyC,GACS,MAAA3uC,GAGT,OAAAquC,EAAAjyC,KAAAsJ,KAAAipC,MAjEA,WACA,IAEAP,EADA,oBAAA3tC,WACAA,WAEA6tC,EAEK,MAAAtuC,GACLouC,EAAAE,EAEA,IAEAD,EADA,oBAAAh/B,aACAA,aAEAk/B,EAEK,MAAAvuC,GACLquC,EAAAE,IAjBA,GAwEA,IAEAK,EAFAziC,EAAA,GACA0iC,GAAA,EAEAC,GAAA,EAEA,SAAAC,IACAF,GAAAD,IAGAC,GAAA,EACAD,EAAA/rC,OACAsJ,EAAAyiC,EAAAI,OAAA7iC,GAEA2iC,GAAA,EAEA3iC,EAAAtJ,QACAosC,KAIA,SAAAA,IACA,IAAAJ,EAAA,CAGA,IAAA1/B,EAAAq/B,EAAAO,GACAF,GAAA,EAEA,IAAApsC,EAAA0J,EAAAtJ,OACA,MAAAJ,EAAA,CACAmsC,EAAAziC,EACAA,EAAA,GACA,QAAA2iC,EAAArsC,EACAmsC,GACAA,EAAAE,GAAAI,MAGAJ,GAAA,EACArsC,EAAA0J,EAAAtJ,OAEA+rC,EAAA,KACAC,GAAA,EACAH,EAAAv/B,IAiBA,SAAAggC,EAAAV,EAAA/5B,GACAhP,KAAA+oC,MACA/oC,KAAAgP,QAYA,SAAA06B,KA5BAnxC,EAAAuC,SAAA,SAAAiuC,GACA,IAAA1vB,EAAA,IAAAnc,MAAAwC,UAAAvC,OAAA,GACA,GAAAuC,UAAAvC,OAAA,EACA,QAAA5G,EAAA,EAAuBA,EAAAmJ,UAAAvC,OAAsB5G,IAC7C8iB,EAAA9iB,EAAA,GAAAmJ,UAAAnJ,GAGAkQ,EAAAzH,KAAA,IAAAyqC,EAAAV,EAAA1vB,IACA,IAAA5S,EAAAtJ,QAAAgsC,GACAL,EAAAS,IASAE,EAAAtxC,UAAAqxC,IAAA,WACAxpC,KAAA+oC,IAAAntC,MAAA,KAAAoE,KAAAgP,QAEAzW,EAAAoxC,MAAA,UACApxC,EAAAqxC,SAAA,EACArxC,EAAAsxC,IAAA,GACAtxC,EAAAuxC,KAAA,GACAvxC,EAAAwxC,QAAA,GACAxxC,EAAAgB,SAAA,GAIAhB,EAAAsb,GAAA61B,EACAnxC,EAAAyxC,YAAAN,EACAnxC,EAAA0V,KAAAy7B,EACAnxC,EAAA0xC,IAAAP,EACAnxC,EAAA2xC,eAAAR,EACAnxC,EAAA4xC,mBAAAT,EACAnxC,EAAAqU,KAAA88B,EACAnxC,EAAA6xC,gBAAAV,EACAnxC,EAAA8xC,oBAAAX,EAEAnxC,EAAA2J,UAAA,SAAApL,GAAqC,UAErCyB,EAAA+xC,QAAA,SAAAxzC,GACA,UAAAgJ,MAAA,qCAGAvH,EAAAgyC,IAAA,WAA2B,WAC3BhyC,EAAAiyC,MAAA,SAAAC,GACA,UAAA3qC,MAAA,mCAEAvH,EAAAmyC,MAAA,WAA4B","file":"editor.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/xkinput/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"e500\");\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar _isWindows = false;\r\nvar _isMacintosh = false;\r\nvar _isLinux = false;\r\nvar _isNative = false;\r\nvar _isWeb = false;\r\nvar _locale = undefined;\r\nvar _language = undefined;\r\nvar _translationsConfigFile = undefined;\r\nexport var LANGUAGE_DEFAULT = 'en';\r\nvar isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\r\n// OS detection\r\nif (typeof navigator === 'object' && !isElectronRenderer) {\r\n    var userAgent = navigator.userAgent;\r\n    _isWindows = userAgent.indexOf('Windows') >= 0;\r\n    _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\r\n    _isLinux = userAgent.indexOf('Linux') >= 0;\r\n    _isWeb = true;\r\n    _locale = navigator.language;\r\n    _language = _locale;\r\n}\r\nelse if (typeof process === 'object') {\r\n    _isWindows = (process.platform === 'win32');\r\n    _isMacintosh = (process.platform === 'darwin');\r\n    _isLinux = (process.platform === 'linux');\r\n    _locale = LANGUAGE_DEFAULT;\r\n    _language = LANGUAGE_DEFAULT;\r\n    var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\r\n    if (rawNlsConfig) {\r\n        try {\r\n            var nlsConfig = JSON.parse(rawNlsConfig);\r\n            var resolved = nlsConfig.availableLanguages['*'];\r\n            _locale = nlsConfig.locale;\r\n            // VSCode's default language is 'en'\r\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\r\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    _isNative = true;\r\n}\r\nvar _platform = 0 /* Web */;\r\nif (_isNative) {\r\n    if (_isMacintosh) {\r\n        _platform = 1 /* Mac */;\r\n    }\r\n    else if (_isWindows) {\r\n        _platform = 3 /* Windows */;\r\n    }\r\n    else if (_isLinux) {\r\n        _platform = 2 /* Linux */;\r\n    }\r\n}\r\nexport var isWindows = _isWindows;\r\nexport var isMacintosh = _isMacintosh;\r\nexport var isLinux = _isLinux;\r\nexport var isNative = _isNative;\r\nexport var isWeb = _isWeb;\r\nvar _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\r\nexport var globals = _globals;\r\nvar _setImmediate = null;\r\nexport function setImmediate(callback) {\r\n    if (_setImmediate === null) {\r\n        if (globals.setImmediate) {\r\n            _setImmediate = globals.setImmediate.bind(globals);\r\n        }\r\n        else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\r\n            _setImmediate = process.nextTick.bind(process);\r\n        }\r\n        else {\r\n            _setImmediate = globals.setTimeout.bind(globals);\r\n        }\r\n    }\r\n    return _setImmediate(callback);\r\n}\r\nexport var OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\r\n","/**\n * Extracted from https://github.com/winjs/winjs\n * Version: 4.4.0(ec3258a9f3a36805a187848984e3bb938044178d)\n * Copyright (c) Microsoft Corporation.\n * All Rights Reserved.\n * Licensed under the MIT License.\n */\nvar __winjs_exports;\n\n(function() {\n\nvar _modules = Object.create(null);//{};\n_modules[\"WinJS/Core/_WinJS\"] = {};\n\nvar _winjs = function(moduleId, deps, factory) {\n    var exports = {};\n    var exportsPassedIn = false;\n\n    var depsValues = deps.map(function(dep) {\n        if (dep === 'exports') {\n            exportsPassedIn = true;\n            return exports;\n        }\n        return _modules[dep];\n    });\n\n    var result = factory.apply({}, depsValues);\n\n    _modules[moduleId] = exportsPassedIn ? exports : result;\n};\n\n\n_winjs(\"WinJS/Core/_Global\", [], function () {\n    \"use strict\";\n\n    // Appease jshint\n    /* global window, self, global */\n\n    var globalObject =\n        typeof window !== 'undefined' ? window :\n        typeof self !== 'undefined' ? self :\n        typeof global !== 'undefined' ? global :\n        {};\n    return globalObject;\n});\n\n_winjs(\"WinJS/Core/_BaseCoreUtils\", [\"WinJS/Core/_Global\"], function baseCoreUtilsInit(_Global) {\n    \"use strict\";\n\n    var hasWinRT = !!_Global.Windows;\n\n    function markSupportedForProcessing(func) {\n        /// <signature helpKeyword=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// <summary locid=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// Marks a function as being compatible with declarative processing, such as WinJS.UI.processAll\n        /// or WinJS.Binding.processAll.\n        /// </summary>\n        /// <param name=\"func\" type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_p:func\">\n        /// The function to be marked as compatible with declarative processing.\n        /// </param>\n        /// <returns type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_returnValue\">\n        /// The input function.\n        /// </returns>\n        /// </signature>\n        func.supportedForProcessing = true;\n        return func;\n    }\n\n    var actualSetImmediate = null;\n\n    return {\n        hasWinRT: hasWinRT,\n        markSupportedForProcessing: markSupportedForProcessing,\n        _setImmediate: function (callback) {\n            // BEGIN monaco change\n            if (actualSetImmediate === null) {\n                if (_Global.setImmediate) {\n                    actualSetImmediate = _Global.setImmediate.bind(_Global);\n                } else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n                    actualSetImmediate = process.nextTick.bind(process);\n                } else {\n                    actualSetImmediate = _Global.setTimeout.bind(_Global);\n                }\n            }\n            actualSetImmediate(callback);\n            // END monaco change\n        }\n    };\n});\n_winjs(\"WinJS/Core/_WriteProfilerMark\", [\"WinJS/Core/_Global\"], function profilerInit(_Global) {\n    \"use strict\";\n\n    return _Global.msWriteProfilerMark || function () { };\n});\n_winjs(\"WinJS/Core/_Base\", [\"WinJS/Core/_WinJS\",\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_WriteProfilerMark\"], function baseInit(_WinJS, _Global, _BaseCoreUtils, _WriteProfilerMark) {\n    \"use strict\";\n\n    function initializeProperties(target, members, prefix) {\n        var keys = Object.keys(members);\n        var isArray = Array.isArray(target);\n        var properties;\n        var i, len;\n        for (i = 0, len = keys.length; i < len; i++) {\n            var key = keys[i];\n            var enumerable = key.charCodeAt(0) !== /*_*/95;\n            var member = members[key];\n            if (member && typeof member === 'object') {\n                if (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\n                    if (member.enumerable === undefined) {\n                        member.enumerable = enumerable;\n                    }\n                    if (prefix && member.setName && typeof member.setName === 'function') {\n                        member.setName(prefix + \".\" + key);\n                    }\n                    properties = properties || {};\n                    properties[key] = member;\n                    continue;\n                }\n            }\n            if (!enumerable) {\n                properties = properties || {};\n                properties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true };\n                continue;\n            }\n            if (isArray) {\n                target.forEach(function (target) {\n                    target[key] = member;\n                });\n            } else {\n                target[key] = member;\n            }\n        }\n        if (properties) {\n            if (isArray) {\n                target.forEach(function (target) {\n                    Object.defineProperties(target, properties);\n                });\n            } else {\n                Object.defineProperties(target, properties);\n            }\n        }\n    }\n\n    (function () {\n\n        var _rootNamespace = _WinJS;\n        if (!_rootNamespace.Namespace) {\n            _rootNamespace.Namespace = Object.create(Object.prototype);\n        }\n\n        function createNamespace(parentNamespace, name) {\n            var currentNamespace = parentNamespace || {};\n            if (name) {\n                var namespaceFragments = name.split(\".\");\n                if (currentNamespace === _Global && namespaceFragments[0] === \"WinJS\") {\n                    currentNamespace = _WinJS;\n                    namespaceFragments.splice(0, 1);\n                }\n                for (var i = 0, len = namespaceFragments.length; i < len; i++) {\n                    var namespaceName = namespaceFragments[i];\n                    if (!currentNamespace[namespaceName]) {\n                        Object.defineProperty(currentNamespace, namespaceName,\n                            { value: {}, writable: false, enumerable: true, configurable: true }\n                        );\n                    }\n                    currentNamespace = currentNamespace[namespaceName];\n                }\n            }\n            return currentNamespace;\n        }\n\n        function defineWithParent(parentNamespace, name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.defineWithParent\">\n            /// <summary locid=\"WinJS.Namespace.defineWithParent\">\n            /// Defines a new namespace with the specified name under the specified parent namespace.\n            /// </summary>\n            /// <param name=\"parentNamespace\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:parentNamespace\">\n            /// The parent namespace.\n            /// </param>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.defineWithParent_p:name\">\n            /// The name of the new namespace.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            var currentNamespace = createNamespace(parentNamespace, name);\n\n            if (members) {\n                initializeProperties(currentNamespace, members, name || \"<ANONYMOUS>\");\n            }\n\n            return currentNamespace;\n        }\n\n        function define(name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.define\">\n            /// <summary locid=\"WinJS.Namespace.define\">\n            /// Defines a new namespace with the specified name.\n            /// </summary>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.define_p:name\">\n            /// The name of the namespace. This could be a dot-separated name for nested namespaces.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.define_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.define_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            return defineWithParent(_Global, name, members);\n        }\n\n        var LazyStates = {\n            uninitialized: 1,\n            working: 2,\n            initialized: 3,\n        };\n\n        function lazy(f) {\n            var name;\n            var state = LazyStates.uninitialized;\n            var result;\n            return {\n                setName: function (value) {\n                    name = value;\n                },\n                get: function () {\n                    switch (state) {\n                        case LazyStates.initialized:\n                            return result;\n\n                        case LazyStates.uninitialized:\n                            state = LazyStates.working;\n                            try {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StartTM\");\n                                result = f();\n                            } finally {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StopTM\");\n                                state = LazyStates.uninitialized;\n                            }\n                            f = null;\n                            state = LazyStates.initialized;\n                            return result;\n\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            throw \"Illegal\";\n                    }\n                },\n                set: function (value) {\n                    switch (state) {\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            state = LazyStates.initialized;\n                            result = value;\n                            break;\n                    }\n                },\n                enumerable: true,\n                configurable: true,\n            };\n        }\n\n        // helper for defining AMD module members\n        function moduleDefine(exports, name, members) {\n            var target = [exports];\n            var publicNS = null;\n            if (name) {\n                publicNS = createNamespace(_Global, name);\n                target.push(publicNS);\n            }\n            initializeProperties(target, members, name || \"<ANONYMOUS>\");\n            return publicNS;\n        }\n\n        // Establish members of the \"WinJS.Namespace\" namespace\n        Object.defineProperties(_rootNamespace.Namespace, {\n\n            defineWithParent: { value: defineWithParent, writable: true, enumerable: true, configurable: true },\n\n            define: { value: define, writable: true, enumerable: true, configurable: true },\n\n            _lazy: { value: lazy, writable: true, enumerable: true, configurable: true },\n\n            _moduleDefine: { value: moduleDefine, writable: true, enumerable: true, configurable: true }\n\n        });\n\n    })();\n\n    (function () {\n\n        function define(constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.define\">\n            /// <summary locid=\"WinJS.Class.define\">\n            /// Defines a class using the given constructor and the specified instance members.\n            /// </summary>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.define_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:staticMembers\">\n            /// The set of static fields, properties, and methods made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.define_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            _BaseCoreUtils.markSupportedForProcessing(constructor);\n            if (instanceMembers) {\n                initializeProperties(constructor.prototype, instanceMembers);\n            }\n            if (staticMembers) {\n                initializeProperties(constructor, staticMembers);\n            }\n            return constructor;\n        }\n\n        function derive(baseClass, constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.derive\">\n            /// <summary locid=\"WinJS.Class.derive\">\n            /// Creates a sub-class based on the supplied baseClass parameter, using prototypal inheritance.\n            /// </summary>\n            /// <param name=\"baseClass\" type=\"Function\" locid=\"WinJS.Class.derive_p:baseClass\">\n            /// The class to inherit from.\n            /// </param>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.derive_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:staticMembers\">\n            /// The set of static fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.derive_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            if (baseClass) {\n                constructor = constructor || function () { };\n                var basePrototype = baseClass.prototype;\n                constructor.prototype = Object.create(basePrototype);\n                _BaseCoreUtils.markSupportedForProcessing(constructor);\n                Object.defineProperty(constructor.prototype, \"constructor\", { value: constructor, writable: true, configurable: true, enumerable: true });\n                if (instanceMembers) {\n                    initializeProperties(constructor.prototype, instanceMembers);\n                }\n                if (staticMembers) {\n                    initializeProperties(constructor, staticMembers);\n                }\n                return constructor;\n            } else {\n                return define(constructor, instanceMembers, staticMembers);\n            }\n        }\n\n        function mix(constructor) {\n            /// <signature helpKeyword=\"WinJS.Class.mix\">\n            /// <summary locid=\"WinJS.Class.mix\">\n            /// Defines a class using the given constructor and the union of the set of instance members\n            /// specified by all the mixin objects. The mixin parameter list is of variable length.\n            /// </summary>\n            /// <param name=\"constructor\" locid=\"WinJS.Class.mix_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.mix_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            var i, len;\n            for (i = 1, len = arguments.length; i < len; i++) {\n                initializeProperties(constructor.prototype, arguments[i]);\n            }\n            return constructor;\n        }\n\n        // Establish members of \"WinJS.Class\" namespace\n        _WinJS.Namespace.define(\"WinJS.Class\", {\n            define: define,\n            derive: derive,\n            mix: mix\n        });\n\n    })();\n\n    return {\n        Namespace: _WinJS.Namespace,\n        Class: _WinJS.Class\n    };\n\n});\n_winjs(\"WinJS/Core/_ErrorFromName\", [\"WinJS/Core/_Base\"], function errorsInit(_Base) {\n    \"use strict\";\n\n    var ErrorFromName = _Base.Class.derive(Error, function (name, message) {\n        /// <signature helpKeyword=\"WinJS.ErrorFromName\">\n        /// <summary locid=\"WinJS.ErrorFromName\">\n        /// Creates an Error object with the specified name and message properties.\n        /// </summary>\n        /// <param name=\"name\" type=\"String\" locid=\"WinJS.ErrorFromName_p:name\">The name of this error. The name is meant to be consumed programmatically and should not be localized.</param>\n        /// <param name=\"message\" type=\"String\" optional=\"true\" locid=\"WinJS.ErrorFromName_p:message\">The message for this error. The message is meant to be consumed by humans and should be localized.</param>\n        /// <returns type=\"Error\" locid=\"WinJS.ErrorFromName_returnValue\">Error instance with .name and .message properties populated</returns>\n        /// </signature>\n        this.name = name;\n        this.message = message || name;\n    }, {\n        /* empty */\n    }, {\n        supportedForProcessing: false,\n    });\n\n    _Base.Namespace.define(\"WinJS\", {\n        // ErrorFromName establishes a simple pattern for returning error codes.\n        //\n        ErrorFromName: ErrorFromName\n    });\n\n    return ErrorFromName;\n\n});\n\n\n_winjs(\"WinJS/Core/_Events\", [\"exports\",\"WinJS/Core/_Base\"], function eventsInit(exports, _Base) {\n    \"use strict\";\n\n\n    function createEventProperty(name) {\n        var eventPropStateName = \"_on\" + name + \"state\";\n\n        return {\n            get: function () {\n                var state = this[eventPropStateName];\n                return state && state.userHandler;\n            },\n            set: function (handler) {\n                var state = this[eventPropStateName];\n                if (handler) {\n                    if (!state) {\n                        state = { wrapper: function (evt) { return state.userHandler(evt); }, userHandler: handler };\n                        Object.defineProperty(this, eventPropStateName, { value: state, enumerable: false, writable:true, configurable: true });\n                        this.addEventListener(name, state.wrapper, false);\n                    }\n                    state.userHandler = handler;\n                } else if (state) {\n                    this.removeEventListener(name, state.wrapper, false);\n                    this[eventPropStateName] = null;\n                }\n            },\n            enumerable: true\n        };\n    }\n\n    function createEventProperties() {\n        /// <signature helpKeyword=\"WinJS.Utilities.createEventProperties\">\n        /// <summary locid=\"WinJS.Utilities.createEventProperties\">\n        /// Creates an object that has one property for each name passed to the function.\n        /// </summary>\n        /// <param name=\"events\" locid=\"WinJS.Utilities.createEventProperties_p:events\">\n        /// A variable list of property names.\n        /// </param>\n        /// <returns type=\"Object\" locid=\"WinJS.Utilities.createEventProperties_returnValue\">\n        /// The object with the specified properties. The names of the properties are prefixed with 'on'.\n        /// </returns>\n        /// </signature>\n        var props = {};\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            var name = arguments[i];\n            props[\"on\" + name] = createEventProperty(name);\n        }\n        return props;\n    }\n\n    var EventMixinEvent = _Base.Class.define(\n        function EventMixinEvent_ctor(type, detail, target) {\n            this.detail = detail;\n            this.target = target;\n            this.timeStamp = Date.now();\n            this.type = type;\n        },\n        {\n            bubbles: { value: false, writable: false },\n            cancelable: { value: false, writable: false },\n            currentTarget: {\n                get: function () { return this.target; }\n            },\n            defaultPrevented: {\n                get: function () { return this._preventDefaultCalled; }\n            },\n            trusted: { value: false, writable: false },\n            eventPhase: { value: 0, writable: false },\n            target: null,\n            timeStamp: null,\n            type: null,\n\n            preventDefault: function () {\n                this._preventDefaultCalled = true;\n            },\n            stopImmediatePropagation: function () {\n                this._stopImmediatePropagationCalled = true;\n            },\n            stopPropagation: function () {\n            }\n        }, {\n            supportedForProcessing: false,\n        }\n    );\n\n    var eventMixin = {\n        _listeners: null,\n\n        addEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// Adds an event listener to the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:listener\">\n            /// The listener to invoke when the event is raised.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:useCapture\">\n            /// if true initiates capture, otherwise false.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            this._listeners = this._listeners || {};\n            var eventListeners = (this._listeners[type] = this._listeners[type] || []);\n            for (var i = 0, len = eventListeners.length; i < len; i++) {\n                var l = eventListeners[i];\n                if (l.useCapture === useCapture && l.listener === listener) {\n                    return;\n                }\n            }\n            eventListeners.push({ listener: listener, useCapture: useCapture });\n        },\n        dispatchEvent: function (type, details) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// Raises an event of the specified type and with the specified additional properties.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"details\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:details\">\n            /// The set of additional properties to be attached to the event object when the event is raised.\n            /// </param>\n            /// <returns type=\"Boolean\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_returnValue\">\n            /// true if preventDefault was called on the event.\n            /// </returns>\n            /// </signature>\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                var eventValue = new EventMixinEvent(type, details, this);\n                // Need to copy the array to protect against people unregistering while we are dispatching\n                listeners = listeners.slice(0, listeners.length);\n                for (var i = 0, len = listeners.length; i < len && !eventValue._stopImmediatePropagationCalled; i++) {\n                    listeners[i].listener(eventValue);\n                }\n                return eventValue.defaultPrevented || false;\n            }\n            return false;\n        },\n        removeEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// Removes an event listener from the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:listener\">\n            /// The listener to remove.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:useCapture\">\n            /// Specifies whether to initiate capture.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                for (var i = 0, len = listeners.length; i < len; i++) {\n                    var l = listeners[i];\n                    if (l.listener === listener && l.useCapture === useCapture) {\n                        listeners.splice(i, 1);\n                        if (listeners.length === 0) {\n                            delete this._listeners[type];\n                        }\n                        // Only want to remove one element for each call to removeEventListener\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    _Base.Namespace._moduleDefine(exports, \"WinJS.Utilities\", {\n        _createEventProperty: createEventProperty,\n        createEventProperties: createEventProperties,\n        eventMixin: eventMixin\n    });\n\n});\n\n\n_winjs(\"WinJS/Core/_Trace\", [\"WinJS/Core/_Global\"], function traceInit(_Global) {\n    \"use strict\";\n\n    function nop(v) {\n        return v;\n    }\n\n    return {\n        _traceAsyncOperationStarting: (_Global.Debug && _Global.Debug.msTraceAsyncOperationStarting && _Global.Debug.msTraceAsyncOperationStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncOperationCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncOperationCompleted && _Global.Debug.msTraceAsyncOperationCompleted.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackStarting: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackStarting && _Global.Debug.msTraceAsyncCallbackStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackCompleted && _Global.Debug.msTraceAsyncCallbackCompleted.bind(_Global.Debug)) || nop\n    };\n});\n_winjs(\"WinJS/Promise/_StateMachine\", [\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_Base\",\"WinJS/Core/_ErrorFromName\",\"WinJS/Core/_Events\",\"WinJS/Core/_Trace\"], function promiseStateMachineInit(_Global, _BaseCoreUtils, _Base, _ErrorFromName, _Events, _Trace) {\n    \"use strict\";\n\n    _Global.Debug && (_Global.Debug.setNonUserCodeExceptions = true);\n\n    var ListenerType = _Base.Class.mix(_Base.Class.define(null, { /*empty*/ }, { supportedForProcessing: false }), _Events.eventMixin);\n    var promiseEventListeners = new ListenerType();\n    // make sure there is a listeners collection so that we can do a more trivial check below\n    promiseEventListeners._listeners = {};\n    var errorET = \"error\";\n    var canceledName = \"Canceled\";\n    var tagWithStack = false;\n    var tag = {\n        promise: 0x01,\n        thenPromise: 0x02,\n        errorPromise: 0x04,\n        exceptionPromise: 0x08,\n        completePromise: 0x10,\n    };\n    tag.all = tag.promise | tag.thenPromise | tag.errorPromise | tag.exceptionPromise | tag.completePromise;\n\n    //\n    // Global error counter, for each error which enters the system we increment this once and then\n    // the error number travels with the error as it traverses the tree of potential handlers.\n    //\n    // When someone has registered to be told about errors (WinJS.Promise.callonerror) promises\n    // which are in error will get tagged with a ._errorId field. This tagged field is the\n    // contract by which nested promises with errors will be identified as chaining for the\n    // purposes of the callonerror semantics. If a nested promise in error is encountered without\n    // a ._errorId it will be assumed to be foreign and treated as an interop boundary and\n    // a new error id will be minted.\n    //\n    var error_number = 1;\n\n    //\n    // The state machine has a interesting hiccup in it with regards to notification, in order\n    // to flatten out notification and avoid recursion for synchronous completion we have an\n    // explicit set of *_notify states which are responsible for notifying their entire tree\n    // of children. They can do this because they know that immediate children are always\n    // ThenPromise instances and we can therefore reach into their state to access the\n    // _listeners collection.\n    //\n    // So, what happens is that a Promise will be fulfilled through the _completed or _error\n    // messages at which point it will enter a *_notify state and be responsible for to move\n    // its children into an (as appropriate) success or error state and also notify that child's\n    // listeners of the state transition, until leaf notes are reached.\n    //\n\n    var state_created,              // -> working\n        state_working,              // -> error | error_notify | success | success_notify | canceled | waiting\n        state_waiting,              // -> error | error_notify | success | success_notify | waiting_canceled\n        state_waiting_canceled,     // -> error | error_notify | success | success_notify | canceling\n        state_canceled,             // -> error | error_notify | success | success_notify | canceling\n        state_canceling,            // -> error_notify\n        state_success_notify,       // -> success\n        state_success,              // -> .\n        state_error_notify,         // -> error\n        state_error;                // -> .\n\n    // Noop function, used in the various states to indicate that they don't support a given\n    // message. Named with the somewhat cute name '_' because it reads really well in the states.\n\n    function _() { }\n\n    // Initial state\n    //\n    state_created = {\n        name: \"created\",\n        enter: function (promise) {\n            promise._setState(state_working);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Ready state, waiting for a message (completed/error/progress), able to be canceled\n    //\n    state_working = {\n        name: \"working\",\n        enter: _,\n        cancel: function (promise) {\n            promise._setState(state_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting state, if a promise is completed with a value which is itself a promise\n    // (has a then() method) it signs up to be informed when that child promise is\n    // fulfilled at which point it will be fulfilled with that value.\n    //\n    state_waiting = {\n        name: \"waiting\",\n        enter: function (promise) {\n            var waitedUpon = promise._value;\n            // We can special case our own intermediate promises which are not in a\n            //  terminal state by just pushing this promise as a listener without\n            //  having to create new indirection functions\n            if (waitedUpon instanceof ThenPromise &&\n                waitedUpon._state !== state_error &&\n                waitedUpon._state !== state_success) {\n                pushListener(waitedUpon, { promise: promise });\n            } else {\n                var error = function (value) {\n                    if (waitedUpon._errorId) {\n                        promise._chainedError(value, waitedUpon);\n                    } else {\n                        // Because this is an interop boundary we want to indicate that this\n                        //  error has been handled by the promise infrastructure before we\n                        //  begin a new handling chain.\n                        //\n                        callonerror(promise, value, detailsForHandledError, waitedUpon, error);\n                        promise._error(value);\n                    }\n                };\n                error.handlesOnError = true;\n                waitedUpon.then(\n                    promise._completed.bind(promise),\n                    error,\n                    promise._progress.bind(promise)\n                );\n            }\n        },\n        cancel: function (promise) {\n            promise._setState(state_waiting_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting canceled state, when a promise has been in a waiting state and receives a\n    // request to cancel its pending work it will forward that request to the child promise\n    // and then waits to be informed of the result. This promise moves itself into the\n    // canceling state but understands that the child promise may instead push it to a\n    // different state.\n    //\n    state_waiting_canceled = {\n        name: \"waiting_canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. Triggering a cancel on the promise\n            // that we are waiting upon may result in a different state transition\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            var waitedUpon = promise._value;\n            if (waitedUpon.cancel) {\n                waitedUpon.cancel();\n            }\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceled state, moves to the canceling state and then tells the promise to do\n    // whatever it might need to do on cancelation.\n    //\n    state_canceled = {\n        name: \"canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. The _cancelAction may change the state\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            promise._cancelAction();\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceling state, commits to the promise moving to an error state with an error\n    // object whose 'name' and 'message' properties contain the string \"Canceled\"\n    //\n    state_canceling = {\n        name: \"canceling\",\n        enter: function (promise) {\n            var error = new Error(canceledName);\n            error.name = error.message;\n            promise._value = error;\n            promise._setState(state_error_notify);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success notify state, moves a promise to the success state and notifies all children\n    //\n    state_success_notify = {\n        name: \"complete_notify\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_success);\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success state, moves a promise to the success state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_success = {\n        name: \"success\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error notify state, moves a promise to the error state and notifies all children\n    //\n    state_error_notify = {\n        name: \"error_notify\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_error);\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error state, moves a promise to the error state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_error = {\n        name: \"error\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    //\n    // The statemachine implementation follows a very particular pattern, the states are specified\n    // as static stateless bags of functions which are then indirected through the state machine\n    // instance (a Promise). As such all of the functions on each state have the promise instance\n    // passed to them explicitly as a parameter and the Promise instance members do a little\n    // dance where they indirect through the state and insert themselves in the argument list.\n    //\n    // We could instead call directly through the promise states however then every caller\n    // would have to remember to do things like pumping the state machine to catch state transitions.\n    //\n\n    var PromiseStateMachine = _Base.Class.define(null, {\n        _listeners: null,\n        _nextState: null,\n        _state: null,\n        _value: null,\n\n        cancel: function () {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n            /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n            /// already been fulfilled and cancellation is supported, the promise enters\n            /// the error state with a value of Error(\"Canceled\").\n            /// </summary>\n            /// </signature>\n            this._state.cancel(this);\n            this._run();\n        },\n        done: function Promise_done(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            ///\n            /// After the handlers have finished executing, this function throws any error that would have been returned\n            /// from then() as a promise in the error state.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The fulfilled value is passed as the single argument. If the value is null,\n            /// the fulfilled value is returned. The value returned\n            /// from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while executing the function, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function is the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n            /// the function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// </signature>\n            this._state.done(this, onComplete, onError, onProgress);\n        },\n        then: function Promise_then(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The value is passed as the single argument. If the value is null, the value is returned.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while this function is being executed, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n            /// The function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n            /// The promise whose value is the result of executing the complete or\n            /// error function.\n            /// </returns>\n            /// </signature>\n            // BEGIN monaco change\n            if (this.then !== Promise_then) {\n                this.then(onComplete, onError, onProgress);\n                return;\n            }\n            // END monaco change\n            return this._state.then(this, onComplete, onError, onProgress);\n        },\n\n        _chainedError: function (value, context) {\n            var result = this._state._error(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _completed: function (value) {\n            var result = this._state._completed(this, value);\n            this._run();\n            return result;\n        },\n        _error: function (value) {\n            var result = this._state._error(this, value, detailsForError);\n            this._run();\n            return result;\n        },\n        _progress: function (value) {\n            this._state._progress(this, value);\n        },\n        _setState: function (state) {\n            this._nextState = state;\n        },\n        _setCompleteValue: function (value) {\n            this._state._setCompleteValue(this, value);\n            this._run();\n        },\n        _setChainedErrorValue: function (value, context) {\n            var result = this._state._setErrorValue(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _setExceptionValue: function (value) {\n            var result = this._state._setErrorValue(this, value, detailsForException);\n            this._run();\n            return result;\n        },\n        _run: function () {\n            while (this._nextState) {\n                this._state = this._nextState;\n                this._nextState = null;\n                this._state.enter(this);\n            }\n        }\n    }, {\n        supportedForProcessing: false\n    });\n\n    //\n    // Implementations of shared state machine code.\n    //\n\n    function completed(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success_notify;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function createErrorDetails(exception, error, promise, id, parent, handler) {\n        return {\n            exception: exception,\n            error: error,\n            promise: promise,\n            handler: handler,\n            id: id,\n            parent: parent\n        };\n    }\n    function detailsForHandledError(promise, errorValue, context, handler) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context,\n            handler\n        );\n    }\n    function detailsForChainedError(promise, errorValue, context) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        setErrorInfo(promise, errorId, exception);\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context\n        );\n    }\n    function detailsForError(promise, errorValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId);\n        return createErrorDetails(\n            null,\n            errorValue,\n            promise,\n            errorId\n        );\n    }\n    function detailsForException(promise, exceptionValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId, true);\n        return createErrorDetails(\n            exceptionValue,\n            null,\n            promise,\n            errorId\n        );\n    }\n    function done(promise, onComplete, onError, onProgress) {\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.done\");\n        pushListener(promise, { c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n    }\n    function error(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error_notify);\n    }\n    function notifySuccess(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onComplete = listener.c;\n            var target = listener.promise;\n\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, _Global.Debug && _Global.Debug.MS_ASYNC_OP_STATUS_SUCCESS);\n\n            if (target) {\n                _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                try {\n                    target._setCompleteValue(onComplete ? onComplete(value) : value);\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    _Trace._traceAsyncCallbackCompleted();\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                CompletePromise.prototype.done.call(promise, onComplete);\n            }\n        }\n    }\n    function notifyError(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onError = listener.e;\n            var target = listener.promise;\n\n            var errorID = _Global.Debug && (value && value.name === canceledName ? _Global.Debug.MS_ASYNC_OP_STATUS_CANCELED : _Global.Debug.MS_ASYNC_OP_STATUS_ERROR);\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, errorID);\n\n            if (target) {\n                var asyncCallbackStarted = false;\n                try {\n                    if (onError) {\n                        _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                        asyncCallbackStarted = true;\n                        if (!onError.handlesOnError) {\n                            callonerror(target, value, detailsForHandledError, promise, onError);\n                        }\n                        target._setCompleteValue(onError(value));\n                    } else {\n                        target._setChainedErrorValue(value, promise);\n                    }\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    if (asyncCallbackStarted) {\n                        _Trace._traceAsyncCallbackCompleted();\n                    }\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                ErrorPromise.prototype.done.call(promise, null, onError);\n            }\n        }\n    }\n    function callonerror(promise, value, onerrorDetailsGenerator, context, handler) {\n        if (promiseEventListeners._listeners[errorET]) {\n            if (value instanceof Error && value.message === canceledName) {\n                return;\n            }\n            promiseEventListeners.dispatchEvent(errorET, onerrorDetailsGenerator(promise, value, context, handler));\n        }\n    }\n    function progress(promise, value) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            var i, len;\n            for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n                var listener = len === 1 ? listeners : listeners[i];\n                var onProgress = listener.p;\n                if (onProgress) {\n                    try { onProgress(value); } catch (ex) { }\n                }\n                if (!(listener.c || listener.e) && listener.promise) {\n                    listener.promise._progress(value);\n                }\n            }\n        }\n    }\n    function pushListener(promise, listener) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            // We may have either a single listener (which will never be wrapped in an array)\n            // or 2+ listeners (which will be wrapped). Since we are now adding one more listener\n            // we may have to wrap the single listener before adding the second.\n            listeners = Array.isArray(listeners) ? listeners : [listeners];\n            listeners.push(listener);\n        } else {\n            listeners = listener;\n        }\n        promise._listeners = listeners;\n    }\n    // The difference beween setCompleteValue()/setErrorValue() and complete()/error() is that setXXXValue() moves\n    // a promise directly to the success/error state without starting another notification pass (because one\n    // is already ongoing).\n    function setErrorInfo(promise, errorId, isException) {\n        promise._isException = isException || false;\n        promise._errorId = errorId;\n    }\n    function setErrorValue(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error);\n    }\n    function setCompleteValue(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function then(promise, onComplete, onError, onProgress) {\n        var result = new ThenPromise(promise);\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.then\");\n        pushListener(promise, { promise: result, c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n        return result;\n    }\n\n    //\n    // Internal implementation detail promise, ThenPromise is created when a promise needs\n    // to be returned from a then() method.\n    //\n    var ThenPromise = _Base.Class.derive(PromiseStateMachine,\n        function (creator) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.thenPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._creator = creator;\n            this._setState(state_created);\n            this._run();\n        }, {\n            _creator: null,\n\n            _cancelAction: function () { if (this._creator) { this._creator.cancel(); } },\n            _cleanupAction: function () { this._creator = null; }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Slim promise implementations for already completed promises, these are created\n    // under the hood on synchronous completion paths as well as by WinJS.Promise.wrap\n    // and WinJS.Promise.wrapError.\n    //\n\n    var ErrorPromise = _Base.Class.define(\n        function ErrorPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.errorPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForError);\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function ErrorPromise_done(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                var value = this._value;\n                if (onError) {\n                    try {\n                        if (!onError.handlesOnError) {\n                            callonerror(null, value, detailsForHandledError, this, onError);\n                        }\n                        var result = onError(value);\n                        if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                            // If a promise is returned we need to wait on it.\n                            result.done();\n                        }\n                        return;\n                    } catch (ex) {\n                        value = ex;\n                    }\n                }\n                if (value instanceof Error && value.message === canceledName) {\n                    // suppress cancel\n                    return;\n                }\n                // force the exception to be thrown asyncronously to avoid any try/catch blocks\n                //\n                Promise._doneHandler(value);\n            },\n            then: function ErrorPromise_then(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n\n                // If the promise is already in a error state and no error handler is provided\n                // we optimize by simply returning the promise instead of creating a new one.\n                //\n                if (!onError) { return this; }\n                var result;\n                var value = this._value;\n                try {\n                    if (!onError.handlesOnError) {\n                        callonerror(null, value, detailsForHandledError, this, onError);\n                    }\n                    result = new CompletePromise(onError(value));\n                } catch (ex) {\n                    // If the value throw from the error handler is the same as the value\n                    // provided to the error handler then there is no need for a new promise.\n                    //\n                    if (ex === value) {\n                        result = this;\n                    } else {\n                        result = new ExceptionPromise(ex);\n                    }\n                }\n                return result;\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var ExceptionPromise = _Base.Class.derive(ErrorPromise,\n        function ExceptionPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.exceptionPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForException);\n        }, {\n            /* empty */\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var CompletePromise = _Base.Class.define(\n        function CompletePromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.completePromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                var result = new ThenPromise(null);\n                result._setCompleteValue(value);\n                return result;\n            }\n            this._value = value;\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function CompletePromise_done(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                if (!onComplete) { return; }\n                try {\n                    var result = onComplete(this._value);\n                    if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                        result.done();\n                    }\n                } catch (ex) {\n                    // force the exception to be thrown asynchronously to avoid any try/catch blocks\n                    Promise._doneHandler(ex);\n                }\n            },\n            then: function CompletePromise_then(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n                try {\n                    // If the value returned from the completion handler is the same as the value\n                    // provided to the completion handler then there is no need for a new promise.\n                    //\n                    var newValue = onComplete ? onComplete(this._value) : this._value;\n                    return newValue === this._value ? this : new CompletePromise(newValue);\n                } catch (ex) {\n                    return new ExceptionPromise(ex);\n                }\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Promise is the user-creatable WinJS.Promise object.\n    //\n\n    function timeout(timeoutMS) {\n        var id;\n        return new Promise(\n            function (c) {\n                if (timeoutMS) {\n                    id = _Global.setTimeout(c, timeoutMS);\n                } else {\n                    _BaseCoreUtils._setImmediate(c);\n                }\n            },\n            function () {\n                if (id) {\n                    _Global.clearTimeout(id);\n                }\n            }\n        );\n    }\n\n    function timeoutWithPromise(timeout, promise) {\n        var cancelPromise = function () { promise.cancel(); };\n        var cancelTimeout = function () { timeout.cancel(); };\n        timeout.then(cancelPromise);\n        promise.then(cancelTimeout, cancelTimeout);\n        return promise;\n    }\n\n    var staticCanceledPromise;\n\n    var Promise = _Base.Class.derive(PromiseStateMachine,\n        function Promise_ctor(init, oncancel) {\n            /// <signature helpKeyword=\"WinJS.Promise\">\n            /// <summary locid=\"WinJS.Promise\">\n            /// A promise provides a mechanism to schedule work to be done on a value that\n            /// has not yet been computed. It is a convenient abstraction for managing\n            /// interactions with asynchronous APIs.\n            /// </summary>\n            /// <param name=\"init\" type=\"Function\" locid=\"WinJS.Promise_p:init\">\n            /// The function that is called during construction of the  promise. The function\n            /// is given three arguments (complete, error, progress). Inside this function\n            /// you should add event listeners for the notifications supported by this value.\n            /// </param>\n            /// <param name=\"oncancel\" optional=\"true\" locid=\"WinJS.Promise_p:oncancel\">\n            /// The function to call if a consumer of this promise wants\n            /// to cancel its undone work. Promises are not required to\n            /// support cancellation.\n            /// </param>\n            /// </signature>\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.promise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._oncancel = oncancel;\n            this._setState(state_created);\n            this._run();\n\n            try {\n                var complete = this._completed.bind(this);\n                var error = this._error.bind(this);\n                var progress = this._progress.bind(this);\n                init(complete, error, progress);\n            } catch (ex) {\n                this._setExceptionValue(ex);\n            }\n        }, {\n            _oncancel: null,\n\n            _cancelAction: function () {\n                // BEGIN monaco change\n                try {\n                    if (this._oncancel) {\n                        this._oncancel();\n                    } else {\n                        throw new Error('Promise did not implement oncancel');\n                    }\n                } catch (ex) {\n                    // Access fields to get them created\n                    var msg = ex.message;\n                    var stack = ex.stack;\n                    promiseEventListeners.dispatchEvent('error', ex);\n                }\n                // END monaco change\n            },\n            _cleanupAction: function () { this._oncancel = null; }\n        }, {\n\n            addEventListener: function Promise_addEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.addEventListener\">\n                /// <summary locid=\"WinJS.Promise.addEventListener\">\n                /// Adds an event listener to the control.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.addEventListener_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"listener\" locid=\"WinJS.Promise.addEventListener_p:listener\">\n                /// The listener to invoke when the event is raised.\n                /// </param>\n                /// <param name=\"capture\" locid=\"WinJS.Promise.addEventListener_p:capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.addEventListener(eventType, listener, capture);\n            },\n            any: function Promise_any(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.any\">\n                /// <summary locid=\"WinJS.Promise.any\">\n                /// Returns a promise that is fulfilled when one of the input promises\n                /// has been fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Array\" locid=\"WinJS.Promise.any_p:values\">\n                /// An array that contains promise objects or objects whose property\n                /// values include promise objects.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.any_returnValue\">\n                /// A promise that on fulfillment yields the value of the input (complete or error).\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error) {\n                        var keys = Object.keys(values);\n                        if (keys.length === 0) {\n                            complete();\n                        }\n                        var canceled = 0;\n                        keys.forEach(function (key) {\n                            Promise.as(values[key]).then(\n                                function () { complete({ key: key, value: values[key] }); },\n                                function (e) {\n                                    if (e instanceof Error && e.name === canceledName) {\n                                        if ((++canceled) === keys.length) {\n                                            complete(Promise.cancel);\n                                        }\n                                        return;\n                                    }\n                                    error({ key: key, value: values[key] });\n                                }\n                            );\n                        });\n                    },\n                    function () {\n                        var keys = Object.keys(values);\n                        keys.forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            as: function Promise_as(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.as\">\n                /// <summary locid=\"WinJS.Promise.as\">\n                /// Returns a promise. If the object is already a promise it is returned;\n                /// otherwise the object is wrapped in a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.as_p:value\">\n                /// The value to be treated as a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.as_returnValue\">\n                /// A promise.\n                /// </returns>\n                /// </signature>\n                if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                    return value;\n                }\n                return new CompletePromise(value);\n            },\n            /// <field type=\"WinJS.Promise\" helpKeyword=\"WinJS.Promise.cancel\" locid=\"WinJS.Promise.cancel\">\n            /// Canceled promise value, can be returned from a promise completion handler\n            /// to indicate cancelation of the promise chain.\n            /// </field>\n            cancel: {\n                get: function () {\n                    return (staticCanceledPromise = staticCanceledPromise || new ErrorPromise(new _ErrorFromName(canceledName)));\n                }\n            },\n            dispatchEvent: function Promise_dispatchEvent(eventType, details) {\n                /// <signature helpKeyword=\"WinJS.Promise.dispatchEvent\">\n                /// <summary locid=\"WinJS.Promise.dispatchEvent\">\n                /// Raises an event of the specified type and properties.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.dispatchEvent_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"details\" locid=\"WinJS.Promise.dispatchEvent_p:details\">\n                /// The set of additional properties to be attached to the event object.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.dispatchEvent_returnValue\">\n                /// Specifies whether preventDefault was called on the event.\n                /// </returns>\n                /// </signature>\n                return promiseEventListeners.dispatchEvent(eventType, details);\n            },\n            is: function Promise_is(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.is\">\n                /// <summary locid=\"WinJS.Promise.is\">\n                /// Determines whether a value fulfills the promise contract.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.is_p:value\">\n                /// A value that may be a promise.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.is_returnValue\">\n                /// true if the specified value is a promise, otherwise false.\n                /// </returns>\n                /// </signature>\n                return value && typeof value === \"object\" && typeof value.then === \"function\";\n            },\n            join: function Promise_join(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.join\">\n                /// <summary locid=\"WinJS.Promise.join\">\n                /// Creates a promise that is fulfilled when all the values are fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Object\" locid=\"WinJS.Promise.join_p:values\">\n                /// An object whose fields contain values, some of which may be promises.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.join_returnValue\">\n                /// A promise whose value is an object with the same field names as those of the object in the values parameter, where\n                /// each field value is the fulfilled value of a promise.\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error, progress) {\n                        var keys = Object.keys(values);\n                        var errors = Array.isArray(values) ? [] : {};\n                        var results = Array.isArray(values) ? [] : {};\n                        var undefineds = 0;\n                        var pending = keys.length;\n                        var argDone = function (key) {\n                            if ((--pending) === 0) {\n                                var errorCount = Object.keys(errors).length;\n                                if (errorCount === 0) {\n                                    complete(results);\n                                } else {\n                                    var canceledCount = 0;\n                                    keys.forEach(function (key) {\n                                        var e = errors[key];\n                                        if (e instanceof Error && e.name === canceledName) {\n                                            canceledCount++;\n                                        }\n                                    });\n                                    if (canceledCount === errorCount) {\n                                        complete(Promise.cancel);\n                                    } else {\n                                        error(errors);\n                                    }\n                                }\n                            } else {\n                                progress({ Key: key, Done: true });\n                            }\n                        };\n                        keys.forEach(function (key) {\n                            var value = values[key];\n                            if (value === undefined) {\n                                undefineds++;\n                            } else {\n                                Promise.then(value,\n                                    function (value) { results[key] = value; argDone(key); },\n                                    function (value) { errors[key] = value; argDone(key); }\n                                );\n                            }\n                        });\n                        pending -= undefineds;\n                        if (pending === 0) {\n                            complete(results);\n                            return;\n                        }\n                    },\n                    function () {\n                        Object.keys(values).forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            removeEventListener: function Promise_removeEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.removeEventListener\">\n                /// <summary locid=\"WinJS.Promise.removeEventListener\">\n                /// Removes an event listener from the control.\n                /// </summary>\n                /// <param name='eventType' locid=\"WinJS.Promise.removeEventListener_eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name='listener' locid=\"WinJS.Promise.removeEventListener_listener\">\n                /// The listener to remove.\n                /// </param>\n                /// <param name='capture' locid=\"WinJS.Promise.removeEventListener_capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.removeEventListener(eventType, listener, capture);\n            },\n            supportedForProcessing: false,\n            then: function Promise_then(value, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.then\">\n                /// <summary locid=\"WinJS.Promise.then\">\n                /// A static version of the promise instance method then().\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.then_p:value\">\n                /// the value to be treated as a promise.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.then_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If it is null, the promise simply\n                /// returns the value. The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.then_returnValue\">\n                /// A promise whose value is the result of executing the provided complete function.\n                /// </returns>\n                /// </signature>\n                return Promise.as(value).then(onComplete, onError, onProgress);\n            },\n            thenEach: function Promise_thenEach(values, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.thenEach\">\n                /// <summary locid=\"WinJS.Promise.thenEach\">\n                /// Performs an operation on all the input promises and returns a promise\n                /// that has the shape of the input and contains the result of the operation\n                /// that has been performed on each input.\n                /// </summary>\n                /// <param name=\"values\" locid=\"WinJS.Promise.thenEach_p:values\">\n                /// A set of values (which could be either an array or an object) of which some or all are promises.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.thenEach_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If the value is null, the promise returns the value.\n                /// The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.thenEach_returnValue\">\n                /// A promise that is the result of calling Promise.join on the values parameter.\n                /// </returns>\n                /// </signature>\n                var result = Array.isArray(values) ? [] : {};\n                Object.keys(values).forEach(function (key) {\n                    result[key] = Promise.as(values[key]).then(onComplete, onError, onProgress);\n                });\n                return Promise.join(result);\n            },\n            timeout: function Promise_timeout(time, promise) {\n                /// <signature helpKeyword=\"WinJS.Promise.timeout\">\n                /// <summary locid=\"WinJS.Promise.timeout\">\n                /// Creates a promise that is fulfilled after a timeout.\n                /// </summary>\n                /// <param name=\"timeout\" type=\"Number\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:timeout\">\n                /// The timeout period in milliseconds. If this value is zero or not specified\n                /// setImmediate is called, otherwise setTimeout is called.\n                /// </param>\n                /// <param name=\"promise\" type=\"Promise\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:promise\">\n                /// A promise that will be canceled if it doesn't complete before the\n                /// timeout has expired.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.timeout_returnValue\">\n                /// A promise that is completed asynchronously after the specified timeout.\n                /// </returns>\n                /// </signature>\n                var to = timeout(time);\n                return promise ? timeoutWithPromise(to, promise) : to;\n            },\n            wrap: function Promise_wrap(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrap\">\n                /// <summary locid=\"WinJS.Promise.wrap\">\n                /// Wraps a non-promise value in a promise. You can use this function if you need\n                /// to pass a value to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.wrap_p:value\">\n                /// Some non-promise value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrap_returnValue\">\n                /// A promise that is successfully fulfilled with the specified value\n                /// </returns>\n                /// </signature>\n                return new CompletePromise(value);\n            },\n            wrapError: function Promise_wrapError(error) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrapError\">\n                /// <summary locid=\"WinJS.Promise.wrapError\">\n                /// Wraps a non-promise error value in a promise. You can use this function if you need\n                /// to pass an error to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"error\" locid=\"WinJS.Promise.wrapError_p:error\">\n                /// A non-promise error value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrapError_returnValue\">\n                /// A promise that is in an error state with the specified value.\n                /// </returns>\n                /// </signature>\n                return new ErrorPromise(error);\n            },\n\n            _veryExpensiveTagWithStack: {\n                get: function () { return tagWithStack; },\n                set: function (value) { tagWithStack = value; }\n            },\n            _veryExpensiveTagWithStack_tag: tag,\n            _getStack: function () {\n                if (_Global.Debug && _Global.Debug.debuggerEnabled) {\n                    try { throw new Error(); } catch (e) { return e.stack; }\n                }\n            },\n\n            _cancelBlocker: function Promise__cancelBlocker(input, oncancel) {\n                //\n                // Returns a promise which on cancelation will still result in downstream cancelation while\n                //  protecting the promise 'input' from being  canceled which has the effect of allowing\n                //  'input' to be shared amoung various consumers.\n                //\n                if (!Promise.is(input)) {\n                    return Promise.wrap(input);\n                }\n                var complete;\n                var error;\n                var output = new Promise(\n                    function (c, e) {\n                        complete = c;\n                        error = e;\n                    },\n                    function () {\n                        complete = null;\n                        error = null;\n                        oncancel && oncancel();\n                    }\n                );\n                input.then(\n                    function (v) { complete && complete(v); },\n                    function (e) { error && error(e); }\n                );\n                return output;\n            },\n\n        }\n    );\n    Object.defineProperties(Promise, _Events.createEventProperties(errorET));\n\n    Promise._doneHandler = function (value) {\n        _BaseCoreUtils._setImmediate(function Promise_done_rethrow() {\n            throw value;\n        });\n    };\n\n    return {\n        PromiseStateMachine: PromiseStateMachine,\n        Promise: Promise,\n        state_created: state_created\n    };\n});\n\n_winjs(\"WinJS/Promise\", [\"WinJS/Core/_Base\",\"WinJS/Promise/_StateMachine\"], function promiseInit( _Base, _StateMachine) {\n    \"use strict\";\n\n    _Base.Namespace.define(\"WinJS\", {\n        Promise: _StateMachine.Promise\n    });\n\n    return _StateMachine.Promise;\n});\n\n__winjs_exports = _modules[\"WinJS/Core/_WinJS\"];\n__winjs_exports.TPromise = __winjs_exports.Promise;\n__winjs_exports.PPromise = __winjs_exports.Promise;\n\n// ESM-comment-begin\n// if (typeof exports === 'undefined' && typeof define === 'function' && define.amd) {\n//     define([], __winjs_exports);\n// } else {\n//     module.exports = __winjs_exports;\n// }\n// ESM-comment-end\n\n})();\n\n// ESM-uncomment-begin\nexport var Promise = __winjs_exports.Promise;\nexport var TPromise = __winjs_exports.TPromise;\nexport var PPromise = __winjs_exports.PPromise;\n// ESM-uncomment-end\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { TPromise } from './winjs.base.js';\r\n// ------ BEGIN Hook up error listeners to winjs promises\r\nvar outstandingPromiseErrors = {};\r\nfunction promiseErrorHandler(e) {\r\n    //\r\n    // e.detail looks like: { exception, error, promise, handler, id, parent }\r\n    //\r\n    var details = e.detail;\r\n    var id = details.id;\r\n    // If the error has a parent promise then this is not the origination of the\r\n    //  error so we check if it has a handler, and if so we mark that the error\r\n    //  was handled by removing it from outstandingPromiseErrors\r\n    //\r\n    if (details.parent) {\r\n        if (details.handler && outstandingPromiseErrors) {\r\n            delete outstandingPromiseErrors[id];\r\n        }\r\n        return;\r\n    }\r\n    // Indicate that this error was originated and needs to be handled\r\n    outstandingPromiseErrors[id] = details;\r\n    // The first time the queue fills up this iteration, schedule a timeout to\r\n    // check if any errors are still unhandled.\r\n    if (Object.keys(outstandingPromiseErrors).length === 1) {\r\n        setTimeout(function () {\r\n            var errors = outstandingPromiseErrors;\r\n            outstandingPromiseErrors = {};\r\n            Object.keys(errors).forEach(function (errorId) {\r\n                var error = errors[errorId];\r\n                if (error.exception) {\r\n                    onUnexpectedError(error.exception);\r\n                }\r\n                else if (error.error) {\r\n                    onUnexpectedError(error.error);\r\n                }\r\n                console.log('WARNING: Promise with no error callback:' + error.id);\r\n                console.log(error);\r\n                if (error.exception) {\r\n                    console.log(error.exception.stack);\r\n                }\r\n            });\r\n        }, 0);\r\n    }\r\n}\r\nTPromise.addEventListener('error', promiseErrorHandler);\r\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\r\nvar ErrorHandler = /** @class */ (function () {\r\n    function ErrorHandler() {\r\n        this.listeners = [];\r\n        this.unexpectedErrorHandler = function (e) {\r\n            setTimeout(function () {\r\n                if (e.stack) {\r\n                    throw new Error(e.message + '\\n\\n' + e.stack);\r\n                }\r\n                throw e;\r\n            }, 0);\r\n        };\r\n    }\r\n    ErrorHandler.prototype.emit = function (e) {\r\n        this.listeners.forEach(function (listener) {\r\n            listener(e);\r\n        });\r\n    };\r\n    ErrorHandler.prototype.onUnexpectedError = function (e) {\r\n        this.unexpectedErrorHandler(e);\r\n        this.emit(e);\r\n    };\r\n    // For external errors, we don't want the listeners to be called\r\n    ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\r\n        this.unexpectedErrorHandler(e);\r\n    };\r\n    return ErrorHandler;\r\n}());\r\nexport { ErrorHandler };\r\nexport var errorHandler = new ErrorHandler();\r\nexport function onUnexpectedError(e) {\r\n    // ignore errors from cancelled promises\r\n    if (!isPromiseCanceledError(e)) {\r\n        errorHandler.onUnexpectedError(e);\r\n    }\r\n    return undefined;\r\n}\r\nexport function onUnexpectedExternalError(e) {\r\n    // ignore errors from cancelled promises\r\n    if (!isPromiseCanceledError(e)) {\r\n        errorHandler.onUnexpectedExternalError(e);\r\n    }\r\n    return undefined;\r\n}\r\nexport function transformErrorForSerialization(error) {\r\n    if (error instanceof Error) {\r\n        var name_1 = error.name, message = error.message;\r\n        var stack = error.stacktrace || error.stack;\r\n        return {\r\n            $isError: true,\r\n            name: name_1,\r\n            message: message,\r\n            stack: stack\r\n        };\r\n    }\r\n    // return as is\r\n    return error;\r\n}\r\nvar canceledName = 'Canceled';\r\n/**\r\n * Checks if the given error is a promise in canceled state\r\n */\r\nexport function isPromiseCanceledError(error) {\r\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\r\n}\r\n/**\r\n * Returns an error that signals cancellation.\r\n */\r\nexport function canceled() {\r\n    var error = new Error(canceledName);\r\n    error.name = error.message;\r\n    return error;\r\n}\r\nexport function illegalArgument(name) {\r\n    if (name) {\r\n        return new Error(\"Illegal argument: \" + name);\r\n    }\r\n    else {\r\n        return new Error('Illegal argument');\r\n    }\r\n}\r\nexport function illegalState(name) {\r\n    if (name) {\r\n        return new Error(\"Illegal state: \" + name);\r\n    }\r\n    else {\r\n        return new Error('Illegal state');\r\n    }\r\n}\r\n","export function isDisposable(thing) {\r\n    return typeof thing.dispose === 'function'\r\n        && thing.dispose.length === 0;\r\n}\r\nexport function dispose(first) {\r\n    var rest = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        rest[_i - 1] = arguments[_i];\r\n    }\r\n    if (Array.isArray(first)) {\r\n        first.forEach(function (d) { return d && d.dispose(); });\r\n        return [];\r\n    }\r\n    else if (rest.length === 0) {\r\n        if (first) {\r\n            first.dispose();\r\n            return first;\r\n        }\r\n        return undefined;\r\n    }\r\n    else {\r\n        dispose(first);\r\n        dispose(rest);\r\n        return [];\r\n    }\r\n}\r\nexport function combinedDisposable(disposables) {\r\n    return { dispose: function () { return dispose(disposables); } };\r\n}\r\nexport function toDisposable(fn) {\r\n    return { dispose: function () { fn(); } };\r\n}\r\nvar Disposable = /** @class */ (function () {\r\n    function Disposable() {\r\n        this._toDispose = [];\r\n    }\r\n    Disposable.prototype.dispose = function () {\r\n        this._toDispose = dispose(this._toDispose);\r\n    };\r\n    Disposable.prototype._register = function (t) {\r\n        this._toDispose.push(t);\r\n        return t;\r\n    };\r\n    Disposable.None = Object.freeze({ dispose: function () { } });\r\n    return Disposable;\r\n}());\r\nexport { Disposable };\r\nvar ImmortalReference = /** @class */ (function () {\r\n    function ImmortalReference(object) {\r\n        this.object = object;\r\n    }\r\n    ImmortalReference.prototype.dispose = function () { };\r\n    return ImmortalReference;\r\n}());\r\nexport { ImmortalReference };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function once(fn) {\r\n    var _this = this;\r\n    var didCall = false;\r\n    var result;\r\n    return function () {\r\n        if (didCall) {\r\n            return result;\r\n        }\r\n        didCall = true;\r\n        result = fn.apply(_this, arguments);\r\n        return result;\r\n    };\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexport var FIN = { done: true, value: undefined };\r\nexport var Iterator;\r\n(function (Iterator) {\r\n    var _empty = {\r\n        next: function () {\r\n            return FIN;\r\n        }\r\n    };\r\n    function empty() {\r\n        return _empty;\r\n    }\r\n    Iterator.empty = empty;\r\n    function fromArray(array, index, length) {\r\n        if (index === void 0) { index = 0; }\r\n        if (length === void 0) { length = array.length; }\r\n        return {\r\n            next: function () {\r\n                if (index >= length) {\r\n                    return FIN;\r\n                }\r\n                return { done: false, value: array[index++] };\r\n            }\r\n        };\r\n    }\r\n    Iterator.fromArray = fromArray;\r\n    function from(elements) {\r\n        if (!elements) {\r\n            return Iterator.empty();\r\n        }\r\n        else if (Array.isArray(elements)) {\r\n            return Iterator.fromArray(elements);\r\n        }\r\n        else {\r\n            return elements;\r\n        }\r\n    }\r\n    Iterator.from = from;\r\n    function map(iterator, fn) {\r\n        return {\r\n            next: function () {\r\n                var element = iterator.next();\r\n                if (element.done) {\r\n                    return FIN;\r\n                }\r\n                else {\r\n                    return { done: false, value: fn(element.value) };\r\n                }\r\n            }\r\n        };\r\n    }\r\n    Iterator.map = map;\r\n    function filter(iterator, fn) {\r\n        return {\r\n            next: function () {\r\n                while (true) {\r\n                    var element = iterator.next();\r\n                    if (element.done) {\r\n                        return FIN;\r\n                    }\r\n                    if (fn(element.value)) {\r\n                        return { done: false, value: element.value };\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n    Iterator.filter = filter;\r\n    function forEach(iterator, fn) {\r\n        for (var next = iterator.next(); !next.done; next = iterator.next()) {\r\n            fn(next.value);\r\n        }\r\n    }\r\n    Iterator.forEach = forEach;\r\n    function collect(iterator) {\r\n        var result = [];\r\n        forEach(iterator, function (value) { return result.push(value); });\r\n        return result;\r\n    }\r\n    Iterator.collect = collect;\r\n})(Iterator || (Iterator = {}));\r\nvar ArrayIterator = /** @class */ (function () {\r\n    function ArrayIterator(items, start, end, index) {\r\n        if (start === void 0) { start = 0; }\r\n        if (end === void 0) { end = items.length; }\r\n        if (index === void 0) { index = start - 1; }\r\n        this.items = items;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.index = index;\r\n    }\r\n    ArrayIterator.prototype.next = function () {\r\n        this.index = Math.min(this.index + 1, this.end);\r\n        return this.current();\r\n    };\r\n    ArrayIterator.prototype.current = function () {\r\n        if (this.index === this.start - 1 || this.index === this.end) {\r\n            return null;\r\n        }\r\n        return this.items[this.index];\r\n    };\r\n    return ArrayIterator;\r\n}());\r\nexport { ArrayIterator };\r\nvar ArrayNavigator = /** @class */ (function (_super) {\r\n    __extends(ArrayNavigator, _super);\r\n    function ArrayNavigator(items, start, end, index) {\r\n        if (start === void 0) { start = 0; }\r\n        if (end === void 0) { end = items.length; }\r\n        if (index === void 0) { index = start - 1; }\r\n        return _super.call(this, items, start, end, index) || this;\r\n    }\r\n    ArrayNavigator.prototype.current = function () {\r\n        return _super.prototype.current.call(this);\r\n    };\r\n    ArrayNavigator.prototype.previous = function () {\r\n        this.index = Math.max(this.index - 1, this.start - 1);\r\n        return this.current();\r\n    };\r\n    ArrayNavigator.prototype.first = function () {\r\n        this.index = this.start;\r\n        return this.current();\r\n    };\r\n    ArrayNavigator.prototype.last = function () {\r\n        this.index = this.end - 1;\r\n        return this.current();\r\n    };\r\n    ArrayNavigator.prototype.parent = function () {\r\n        return null;\r\n    };\r\n    return ArrayNavigator;\r\n}(ArrayIterator));\r\nexport { ArrayNavigator };\r\nvar MappedIterator = /** @class */ (function () {\r\n    function MappedIterator(iterator, fn) {\r\n        this.iterator = iterator;\r\n        this.fn = fn;\r\n        // noop\r\n    }\r\n    MappedIterator.prototype.next = function () { return this.fn(this.iterator.next()); };\r\n    return MappedIterator;\r\n}());\r\nexport { MappedIterator };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { onUnexpectedError } from './errors.js';\r\nimport { once as onceFn } from './functional.js';\r\nimport { combinedDisposable, Disposable, toDisposable } from './lifecycle.js';\r\nimport { LinkedList } from './linkedList.js';\r\nexport var Event;\r\n(function (Event) {\r\n    var _disposable = { dispose: function () { } };\r\n    Event.None = function () { return _disposable; };\r\n})(Event || (Event = {}));\r\n/**\r\n * The Emitter can be used to expose an Event to the public\r\n * to fire it from the insides.\r\n * Sample:\r\n    class Document {\r\n\r\n        private _onDidChange = new Emitter<(value:string)=>any>();\r\n\r\n        public onDidChange = this._onDidChange.event;\r\n\r\n        // getter-style\r\n        // get onDidChange(): Event<(value:string)=>any> {\r\n        // \treturn this._onDidChange.event;\r\n        // }\r\n\r\n        private _doIt() {\r\n            //...\r\n            this._onDidChange.fire(value);\r\n        }\r\n    }\r\n */\r\nvar Emitter = /** @class */ (function () {\r\n    function Emitter(_options) {\r\n        if (_options === void 0) { _options = null; }\r\n        this._options = _options;\r\n        this._event = null;\r\n        this._disposed = false;\r\n        this._deliveryQueue = null;\r\n        this._listeners = null;\r\n    }\r\n    Object.defineProperty(Emitter.prototype, \"event\", {\r\n        /**\r\n         * For the public to allow to subscribe\r\n         * to events from this Emitter\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._event) {\r\n                this._event = function (listener, thisArgs, disposables) {\r\n                    if (!_this._listeners) {\r\n                        _this._listeners = new LinkedList();\r\n                    }\r\n                    var firstListener = _this._listeners.isEmpty();\r\n                    if (firstListener && _this._options && _this._options.onFirstListenerAdd) {\r\n                        _this._options.onFirstListenerAdd(_this);\r\n                    }\r\n                    var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\r\n                    if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {\r\n                        _this._options.onFirstListenerDidAdd(_this);\r\n                    }\r\n                    if (_this._options && _this._options.onListenerDidAdd) {\r\n                        _this._options.onListenerDidAdd(_this, listener, thisArgs);\r\n                    }\r\n                    var result;\r\n                    result = {\r\n                        dispose: function () {\r\n                            result.dispose = Emitter._noop;\r\n                            if (!_this._disposed) {\r\n                                remove();\r\n                                if (_this._options && _this._options.onLastListenerRemove) {\r\n                                    var hasListeners = (_this._listeners && !_this._listeners.isEmpty());\r\n                                    if (!hasListeners) {\r\n                                        _this._options.onLastListenerRemove(_this);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    };\r\n                    if (Array.isArray(disposables)) {\r\n                        disposables.push(result);\r\n                    }\r\n                    return result;\r\n                };\r\n            }\r\n            return this._event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    Emitter.prototype.fire = function (event) {\r\n        if (this._listeners) {\r\n            // put all [listener,event]-pairs into delivery queue\r\n            // then emit all event. an inner/nested event might be\r\n            // the driver of this\r\n            if (!this._deliveryQueue) {\r\n                this._deliveryQueue = [];\r\n            }\r\n            for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\r\n                this._deliveryQueue.push([e.value, event]);\r\n            }\r\n            while (this._deliveryQueue.length > 0) {\r\n                var _a = this._deliveryQueue.shift(), listener = _a[0], event_1 = _a[1];\r\n                try {\r\n                    if (typeof listener === 'function') {\r\n                        listener.call(undefined, event_1);\r\n                    }\r\n                    else {\r\n                        listener[0].call(listener[1], event_1);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    onUnexpectedError(e);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Emitter.prototype.dispose = function () {\r\n        if (this._listeners) {\r\n            this._listeners = null;\r\n        }\r\n        if (this._deliveryQueue) {\r\n            this._deliveryQueue.length = 0;\r\n        }\r\n        this._disposed = true;\r\n    };\r\n    Emitter._noop = function () { };\r\n    return Emitter;\r\n}());\r\nexport { Emitter };\r\nvar EventMultiplexer = /** @class */ (function () {\r\n    function EventMultiplexer() {\r\n        var _this = this;\r\n        this.hasListeners = false;\r\n        this.events = [];\r\n        this.emitter = new Emitter({\r\n            onFirstListenerAdd: function () { return _this.onFirstListenerAdd(); },\r\n            onLastListenerRemove: function () { return _this.onLastListenerRemove(); }\r\n        });\r\n    }\r\n    Object.defineProperty(EventMultiplexer.prototype, \"event\", {\r\n        get: function () {\r\n            return this.emitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    EventMultiplexer.prototype.add = function (event) {\r\n        var _this = this;\r\n        var e = { event: event, listener: null };\r\n        this.events.push(e);\r\n        if (this.hasListeners) {\r\n            this.hook(e);\r\n        }\r\n        var dispose = function () {\r\n            if (_this.hasListeners) {\r\n                _this.unhook(e);\r\n            }\r\n            var idx = _this.events.indexOf(e);\r\n            _this.events.splice(idx, 1);\r\n        };\r\n        return toDisposable(onceFn(dispose));\r\n    };\r\n    EventMultiplexer.prototype.onFirstListenerAdd = function () {\r\n        var _this = this;\r\n        this.hasListeners = true;\r\n        this.events.forEach(function (e) { return _this.hook(e); });\r\n    };\r\n    EventMultiplexer.prototype.onLastListenerRemove = function () {\r\n        var _this = this;\r\n        this.hasListeners = false;\r\n        this.events.forEach(function (e) { return _this.unhook(e); });\r\n    };\r\n    EventMultiplexer.prototype.hook = function (e) {\r\n        var _this = this;\r\n        e.listener = e.event(function (r) { return _this.emitter.fire(r); });\r\n    };\r\n    EventMultiplexer.prototype.unhook = function (e) {\r\n        if (e.listener) {\r\n            e.listener.dispose();\r\n        }\r\n        e.listener = null;\r\n    };\r\n    EventMultiplexer.prototype.dispose = function () {\r\n        this.emitter.dispose();\r\n    };\r\n    return EventMultiplexer;\r\n}());\r\nexport { EventMultiplexer };\r\nexport function once(event) {\r\n    return function (listener, thisArgs, disposables) {\r\n        if (thisArgs === void 0) { thisArgs = null; }\r\n        // we need this, in case the event fires during the listener call\r\n        var didFire = false;\r\n        var result = event(function (e) {\r\n            if (didFire) {\r\n                return;\r\n            }\r\n            else if (result) {\r\n                result.dispose();\r\n            }\r\n            else {\r\n                didFire = true;\r\n            }\r\n            return listener.call(thisArgs, e);\r\n        }, null, disposables);\r\n        if (didFire) {\r\n            result.dispose();\r\n        }\r\n        return result;\r\n    };\r\n}\r\nexport function anyEvent() {\r\n    var events = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        events[_i] = arguments[_i];\r\n    }\r\n    return function (listener, thisArgs, disposables) {\r\n        if (thisArgs === void 0) { thisArgs = null; }\r\n        return combinedDisposable(events.map(function (event) { return event(function (e) { return listener.call(thisArgs, e); }, null, disposables); }));\r\n    };\r\n}\r\nexport function debounceEvent(event, merger, delay, leading) {\r\n    if (delay === void 0) { delay = 100; }\r\n    if (leading === void 0) { leading = false; }\r\n    var subscription;\r\n    var output = undefined;\r\n    var handle = undefined;\r\n    var numDebouncedCalls = 0;\r\n    var emitter = new Emitter({\r\n        onFirstListenerAdd: function () {\r\n            subscription = event(function (cur) {\r\n                numDebouncedCalls++;\r\n                output = merger(output, cur);\r\n                if (leading && !handle) {\r\n                    emitter.fire(output);\r\n                }\r\n                clearTimeout(handle);\r\n                handle = setTimeout(function () {\r\n                    var _output = output;\r\n                    output = undefined;\r\n                    handle = undefined;\r\n                    if (!leading || numDebouncedCalls > 1) {\r\n                        emitter.fire(_output);\r\n                    }\r\n                    numDebouncedCalls = 0;\r\n                }, delay);\r\n            });\r\n        },\r\n        onLastListenerRemove: function () {\r\n            subscription.dispose();\r\n        }\r\n    });\r\n    return emitter.event;\r\n}\r\n/**\r\n * The EventDelayer is useful in situations in which you want\r\n * to delay firing your events during some code.\r\n * You can wrap that code and be sure that the event will not\r\n * be fired during that wrap.\r\n *\r\n * ```\r\n * const emitter: Emitter;\r\n * const delayer = new EventDelayer();\r\n * const delayedEvent = delayer.wrapEvent(emitter.event);\r\n *\r\n * delayedEvent(console.log);\r\n *\r\n * delayer.bufferEvents(() => {\r\n *   emitter.fire(); // event will not be fired yet\r\n * });\r\n *\r\n * // event will only be fired at this point\r\n * ```\r\n */\r\nvar EventBufferer = /** @class */ (function () {\r\n    function EventBufferer() {\r\n        this.buffers = [];\r\n    }\r\n    EventBufferer.prototype.wrapEvent = function (event) {\r\n        var _this = this;\r\n        return function (listener, thisArgs, disposables) {\r\n            return event(function (i) {\r\n                var buffer = _this.buffers[_this.buffers.length - 1];\r\n                if (buffer) {\r\n                    buffer.push(function () { return listener.call(thisArgs, i); });\r\n                }\r\n                else {\r\n                    listener.call(thisArgs, i);\r\n                }\r\n            }, void 0, disposables);\r\n        };\r\n    };\r\n    EventBufferer.prototype.bufferEvents = function (fn) {\r\n        var buffer = [];\r\n        this.buffers.push(buffer);\r\n        var r = fn();\r\n        this.buffers.pop();\r\n        buffer.forEach(function (flush) { return flush(); });\r\n        return r;\r\n    };\r\n    return EventBufferer;\r\n}());\r\nexport { EventBufferer };\r\nexport function mapEvent(event, map) {\r\n    return function (listener, thisArgs, disposables) {\r\n        if (thisArgs === void 0) { thisArgs = null; }\r\n        return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\r\n    };\r\n}\r\nexport function filterEvent(event, filter) {\r\n    return function (listener, thisArgs, disposables) {\r\n        if (thisArgs === void 0) { thisArgs = null; }\r\n        return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\r\n    };\r\n}\r\nvar ChainableEvent = /** @class */ (function () {\r\n    function ChainableEvent(_event) {\r\n        this._event = _event;\r\n    }\r\n    Object.defineProperty(ChainableEvent.prototype, \"event\", {\r\n        get: function () { return this._event; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChainableEvent.prototype.map = function (fn) {\r\n        return new ChainableEvent(mapEvent(this._event, fn));\r\n    };\r\n    ChainableEvent.prototype.filter = function (fn) {\r\n        return new ChainableEvent(filterEvent(this._event, fn));\r\n    };\r\n    ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {\r\n        return this._event(listener, thisArgs, disposables);\r\n    };\r\n    return ChainableEvent;\r\n}());\r\nexport function chain(event) {\r\n    return new ChainableEvent(event);\r\n}\r\nvar Relay = /** @class */ (function () {\r\n    function Relay() {\r\n        var _this = this;\r\n        this.listening = false;\r\n        this.inputEvent = Event.None;\r\n        this.inputEventListener = Disposable.None;\r\n        this.emitter = new Emitter({\r\n            onFirstListenerDidAdd: function () {\r\n                _this.listening = true;\r\n                _this.inputEventListener = _this.inputEvent(_this.emitter.fire, _this.emitter);\r\n            },\r\n            onLastListenerRemove: function () {\r\n                _this.listening = false;\r\n                _this.inputEventListener.dispose();\r\n            }\r\n        });\r\n        this.event = this.emitter.event;\r\n    }\r\n    Object.defineProperty(Relay.prototype, \"input\", {\r\n        set: function (event) {\r\n            this.inputEvent = event;\r\n            if (this.listening) {\r\n                this.inputEventListener.dispose();\r\n                this.inputEventListener = event(this.emitter.fire, this.emitter);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Relay.prototype.dispose = function () {\r\n        this.inputEventListener.dispose();\r\n        this.emitter.dispose();\r\n    };\r\n    return Relay;\r\n}());\r\nexport { Relay };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { FIN } from './iterator.js';\r\nvar Node = /** @class */ (function () {\r\n    function Node(element) {\r\n        this.element = element;\r\n    }\r\n    return Node;\r\n}());\r\nvar LinkedList = /** @class */ (function () {\r\n    function LinkedList() {\r\n    }\r\n    LinkedList.prototype.isEmpty = function () {\r\n        return !this._first;\r\n    };\r\n    LinkedList.prototype.unshift = function (element) {\r\n        return this.insert(element, false);\r\n    };\r\n    LinkedList.prototype.push = function (element) {\r\n        return this.insert(element, true);\r\n    };\r\n    LinkedList.prototype.insert = function (element, atTheEnd) {\r\n        var _this = this;\r\n        var newNode = new Node(element);\r\n        if (!this._first) {\r\n            this._first = newNode;\r\n            this._last = newNode;\r\n        }\r\n        else if (atTheEnd) {\r\n            // push\r\n            var oldLast = this._last;\r\n            this._last = newNode;\r\n            newNode.prev = oldLast;\r\n            oldLast.next = newNode;\r\n        }\r\n        else {\r\n            // unshift\r\n            var oldFirst = this._first;\r\n            this._first = newNode;\r\n            newNode.next = oldFirst;\r\n            oldFirst.prev = newNode;\r\n        }\r\n        return function () {\r\n            var candidate = _this._first;\r\n            while (candidate instanceof Node) {\r\n                if (candidate !== newNode) {\r\n                    candidate = candidate.next;\r\n                    continue;\r\n                }\r\n                if (candidate.prev && candidate.next) {\r\n                    // middle\r\n                    var anchor = candidate.prev;\r\n                    anchor.next = candidate.next;\r\n                    candidate.next.prev = anchor;\r\n                }\r\n                else if (!candidate.prev && !candidate.next) {\r\n                    // only node\r\n                    _this._first = undefined;\r\n                    _this._last = undefined;\r\n                }\r\n                else if (!candidate.next) {\r\n                    // last\r\n                    _this._last = _this._last.prev;\r\n                    _this._last.next = undefined;\r\n                }\r\n                else if (!candidate.prev) {\r\n                    // first\r\n                    _this._first = _this._first.next;\r\n                    _this._first.prev = undefined;\r\n                }\r\n                // done\r\n                break;\r\n            }\r\n        };\r\n    };\r\n    LinkedList.prototype.iterator = function () {\r\n        var element;\r\n        var node = this._first;\r\n        return {\r\n            next: function () {\r\n                if (!node) {\r\n                    return FIN;\r\n                }\r\n                if (!element) {\r\n                    element = { done: false, value: node.element };\r\n                }\r\n                else {\r\n                    element.value = node.element;\r\n                }\r\n                node = node.next;\r\n                return element;\r\n            }\r\n        };\r\n    };\r\n    return LinkedList;\r\n}());\r\nexport { LinkedList };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter, Event } from './event.js';\r\nvar shortcutEvent = Object.freeze(function (callback, context) {\r\n    var handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose: function () { clearTimeout(handle); } };\r\n});\r\nexport var CancellationToken;\r\n(function (CancellationToken) {\r\n    function isCancellationToken(thing) {\r\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\r\n            return true;\r\n        }\r\n        if (thing instanceof MutableToken) {\r\n            return true;\r\n        }\r\n        if (!thing || typeof thing !== 'object') {\r\n            return false;\r\n        }\r\n        return typeof thing.isCancellationRequested === 'boolean'\r\n            && typeof thing.onCancellationRequested === 'function';\r\n    }\r\n    CancellationToken.isCancellationToken = isCancellationToken;\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: shortcutEvent\r\n    });\r\n})(CancellationToken || (CancellationToken = {}));\r\nvar MutableToken = /** @class */ (function () {\r\n    function MutableToken() {\r\n        this._isCancelled = false;\r\n        this._emitter = null;\r\n    }\r\n    MutableToken.prototype.cancel = function () {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this.dispose();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\r\n        get: function () {\r\n            return this._isCancelled;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\r\n        get: function () {\r\n            if (this._isCancelled) {\r\n                return shortcutEvent;\r\n            }\r\n            if (!this._emitter) {\r\n                this._emitter = new Emitter();\r\n            }\r\n            return this._emitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MutableToken.prototype.dispose = function () {\r\n        if (this._emitter) {\r\n            this._emitter.dispose();\r\n            this._emitter = null;\r\n        }\r\n    };\r\n    return MutableToken;\r\n}());\r\nvar CancellationTokenSource = /** @class */ (function () {\r\n    function CancellationTokenSource() {\r\n    }\r\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\r\n        get: function () {\r\n            if (!this._token) {\r\n                // be lazy and create the token only when\r\n                // actually needed\r\n                this._token = new MutableToken();\r\n            }\r\n            return this._token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CancellationTokenSource.prototype.cancel = function () {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else if (this._token instanceof MutableToken) {\r\n            // actually cancel\r\n            this._token.cancel();\r\n        }\r\n    };\r\n    CancellationTokenSource.prototype.dispose = function () {\r\n        if (!this._token) {\r\n            // ensure to initialize with an empty token if we had none\r\n            this._token = CancellationToken.None;\r\n        }\r\n        else if (this._token instanceof MutableToken) {\r\n            // actually dispose\r\n            this._token.dispose();\r\n        }\r\n    };\r\n    return CancellationTokenSource;\r\n}());\r\nexport { CancellationTokenSource };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { CancellationTokenSource } from './cancellation.js';\r\nimport * as errors from './errors.js';\r\nimport { Disposable } from './lifecycle.js';\r\nimport { TPromise } from './winjs.base.js';\r\nexport function isThenable(obj) {\r\n    return obj && typeof obj.then === 'function';\r\n}\r\nexport function createCancelablePromise(callback) {\r\n    var source = new CancellationTokenSource();\r\n    var thenable = callback(source.token);\r\n    var promise = new Promise(function (resolve, reject) {\r\n        source.token.onCancellationRequested(function () {\r\n            reject(errors.canceled());\r\n        });\r\n        Promise.resolve(thenable).then(function (value) {\r\n            source.dispose();\r\n            resolve(value);\r\n        }, function (err) {\r\n            source.dispose();\r\n            reject(err);\r\n        });\r\n    });\r\n    return new /** @class */ (function () {\r\n        function class_1() {\r\n        }\r\n        class_1.prototype.cancel = function () {\r\n            source.cancel();\r\n        };\r\n        class_1.prototype.then = function (resolve, reject) {\r\n            return promise.then(resolve, reject);\r\n        };\r\n        class_1.prototype.catch = function (reject) {\r\n            return this.then(undefined, reject);\r\n        };\r\n        return class_1;\r\n    }());\r\n}\r\n/**\r\n * A helper to delay execution of a task that is being requested often.\r\n *\r\n * Following the throttler, now imagine the mail man wants to optimize the number of\r\n * trips proactively. The trip itself can be long, so he decides not to make the trip\r\n * as soon as a letter is submitted. Instead he waits a while, in case more\r\n * letters are submitted. After said waiting period, if no letters were submitted, he\r\n * decides to make the trip. Imagine that N more letters were submitted after the first\r\n * one, all within a short period of time between each other. Even though N+1\r\n * submissions occurred, only 1 delivery was made.\r\n *\r\n * The delayer offers this behavior via the trigger() method, into which both the task\r\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\r\n * the example:\r\n *\r\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\r\n * \t\tconst letters = [];\r\n *\r\n * \t\tfunction letterReceived(l) {\r\n * \t\t\tletters.push(l);\r\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\r\n * \t\t}\r\n */\r\nvar Delayer = /** @class */ (function () {\r\n    function Delayer(defaultDelay) {\r\n        this.defaultDelay = defaultDelay;\r\n        this.timeout = null;\r\n        this.completionPromise = null;\r\n        this.doResolve = null;\r\n        this.task = null;\r\n    }\r\n    Delayer.prototype.trigger = function (task, delay) {\r\n        var _this = this;\r\n        if (delay === void 0) { delay = this.defaultDelay; }\r\n        this.task = task;\r\n        this.cancelTimeout();\r\n        if (!this.completionPromise) {\r\n            this.completionPromise = new TPromise(function (c, e) {\r\n                _this.doResolve = c;\r\n                _this.doReject = e;\r\n            }).then(function () {\r\n                _this.completionPromise = null;\r\n                _this.doResolve = null;\r\n                var task = _this.task;\r\n                _this.task = null;\r\n                return task();\r\n            });\r\n        }\r\n        this.timeout = setTimeout(function () {\r\n            _this.timeout = null;\r\n            _this.doResolve(null);\r\n        }, delay);\r\n        return this.completionPromise;\r\n    };\r\n    Delayer.prototype.cancel = function () {\r\n        this.cancelTimeout();\r\n        if (this.completionPromise) {\r\n            this.doReject(errors.canceled());\r\n            this.completionPromise = null;\r\n        }\r\n    };\r\n    Delayer.prototype.cancelTimeout = function () {\r\n        if (this.timeout !== null) {\r\n            clearTimeout(this.timeout);\r\n            this.timeout = null;\r\n        }\r\n    };\r\n    Delayer.prototype.dispose = function () {\r\n        this.cancelTimeout();\r\n    };\r\n    return Delayer;\r\n}());\r\nexport { Delayer };\r\nexport function timeout(millis, token) {\r\n    if (!token) {\r\n        return createCancelablePromise(function (token) { return timeout(millis, token); });\r\n    }\r\n    return new Promise(function (resolve, reject) {\r\n        var handle = setTimeout(resolve, millis);\r\n        token.onCancellationRequested(function () {\r\n            clearTimeout(handle);\r\n            reject(errors.canceled());\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns a new promise that joins the provided promise. Upon completion of\r\n * the provided promise the provided function will always be called. This\r\n * method is comparable to a try-finally code block.\r\n * @param promise a promise\r\n * @param callback a function that will be call in the success and error case.\r\n */\r\nexport function always(promise, callback) {\r\n    function safeCallback() {\r\n        try {\r\n            callback();\r\n        }\r\n        catch (err) {\r\n            errors.onUnexpectedError(err);\r\n        }\r\n    }\r\n    promise.then(function (_) { return safeCallback(); }, function (_) { return safeCallback(); });\r\n    return Promise.resolve(promise);\r\n}\r\nexport function first(promiseFactories, shouldStop, defaultValue) {\r\n    if (shouldStop === void 0) { shouldStop = function (t) { return !!t; }; }\r\n    if (defaultValue === void 0) { defaultValue = null; }\r\n    var index = 0;\r\n    var len = promiseFactories.length;\r\n    var loop = function () {\r\n        if (index >= len) {\r\n            return Promise.resolve(defaultValue);\r\n        }\r\n        var factory = promiseFactories[index++];\r\n        var promise = Promise.resolve(factory());\r\n        return promise.then(function (result) {\r\n            if (shouldStop(result)) {\r\n                return Promise.resolve(result);\r\n            }\r\n            return loop();\r\n        });\r\n    };\r\n    return loop();\r\n}\r\nvar TimeoutTimer = /** @class */ (function (_super) {\r\n    __extends(TimeoutTimer, _super);\r\n    function TimeoutTimer(runner, timeout) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = -1;\r\n        if (typeof runner === 'function' && typeof timeout === 'number') {\r\n            _this.setIfNotSet(runner, timeout);\r\n        }\r\n        return _this;\r\n    }\r\n    TimeoutTimer.prototype.dispose = function () {\r\n        this.cancel();\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    TimeoutTimer.prototype.cancel = function () {\r\n        if (this._token !== -1) {\r\n            clearTimeout(this._token);\r\n            this._token = -1;\r\n        }\r\n    };\r\n    TimeoutTimer.prototype.cancelAndSet = function (runner, timeout) {\r\n        var _this = this;\r\n        this.cancel();\r\n        this._token = setTimeout(function () {\r\n            _this._token = -1;\r\n            runner();\r\n        }, timeout);\r\n    };\r\n    TimeoutTimer.prototype.setIfNotSet = function (runner, timeout) {\r\n        var _this = this;\r\n        if (this._token !== -1) {\r\n            // timer is already set\r\n            return;\r\n        }\r\n        this._token = setTimeout(function () {\r\n            _this._token = -1;\r\n            runner();\r\n        }, timeout);\r\n    };\r\n    return TimeoutTimer;\r\n}(Disposable));\r\nexport { TimeoutTimer };\r\nvar IntervalTimer = /** @class */ (function (_super) {\r\n    __extends(IntervalTimer, _super);\r\n    function IntervalTimer() {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = -1;\r\n        return _this;\r\n    }\r\n    IntervalTimer.prototype.dispose = function () {\r\n        this.cancel();\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    IntervalTimer.prototype.cancel = function () {\r\n        if (this._token !== -1) {\r\n            clearInterval(this._token);\r\n            this._token = -1;\r\n        }\r\n    };\r\n    IntervalTimer.prototype.cancelAndSet = function (runner, interval) {\r\n        this.cancel();\r\n        this._token = setInterval(function () {\r\n            runner();\r\n        }, interval);\r\n    };\r\n    return IntervalTimer;\r\n}(Disposable));\r\nexport { IntervalTimer };\r\nvar RunOnceScheduler = /** @class */ (function () {\r\n    function RunOnceScheduler(runner, timeout) {\r\n        this.timeoutToken = -1;\r\n        this.runner = runner;\r\n        this.timeout = timeout;\r\n        this.timeoutHandler = this.onTimeout.bind(this);\r\n    }\r\n    /**\r\n     * Dispose RunOnceScheduler\r\n     */\r\n    RunOnceScheduler.prototype.dispose = function () {\r\n        this.cancel();\r\n        this.runner = null;\r\n    };\r\n    /**\r\n     * Cancel current scheduled runner (if any).\r\n     */\r\n    RunOnceScheduler.prototype.cancel = function () {\r\n        if (this.isScheduled()) {\r\n            clearTimeout(this.timeoutToken);\r\n            this.timeoutToken = -1;\r\n        }\r\n    };\r\n    /**\r\n     * Cancel previous runner (if any) & schedule a new runner.\r\n     */\r\n    RunOnceScheduler.prototype.schedule = function (delay) {\r\n        if (delay === void 0) { delay = this.timeout; }\r\n        this.cancel();\r\n        this.timeoutToken = setTimeout(this.timeoutHandler, delay);\r\n    };\r\n    /**\r\n     * Returns true if scheduled.\r\n     */\r\n    RunOnceScheduler.prototype.isScheduled = function () {\r\n        return this.timeoutToken !== -1;\r\n    };\r\n    RunOnceScheduler.prototype.onTimeout = function () {\r\n        this.timeoutToken = -1;\r\n        if (this.runner) {\r\n            this.doRun();\r\n        }\r\n    };\r\n    RunOnceScheduler.prototype.doRun = function () {\r\n        if (this.runner) {\r\n            this.runner();\r\n        }\r\n    };\r\n    return RunOnceScheduler;\r\n}());\r\nexport { RunOnceScheduler };\r\n/**\r\n * Execute the callback the next time the browser is idle\r\n */\r\nexport var runWhenIdle;\r\n(function () {\r\n    if (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\r\n        var dummyIdle_1 = Object.freeze({\r\n            didTimeout: true,\r\n            timeRemaining: function () { return 15; }\r\n        });\r\n        runWhenIdle = function (runner, timeout) {\r\n            if (timeout === void 0) { timeout = 0; }\r\n            var handle = setTimeout(function () { return runner(dummyIdle_1); }, timeout);\r\n            var disposed = false;\r\n            return {\r\n                dispose: function () {\r\n                    if (disposed) {\r\n                        return;\r\n                    }\r\n                    disposed = true;\r\n                    clearTimeout(handle);\r\n                }\r\n            };\r\n        };\r\n    }\r\n    else {\r\n        runWhenIdle = function (runner, timeout) {\r\n            var handle = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout: timeout } : undefined);\r\n            var disposed = false;\r\n            return {\r\n                dispose: function () {\r\n                    if (disposed) {\r\n                        return;\r\n                    }\r\n                    disposed = true;\r\n                    cancelIdleCallback(handle);\r\n                }\r\n            };\r\n        };\r\n    }\r\n})();\r\n/**\r\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\r\n * here: https://philipwalton.com/articles/idle-until-urgent/\r\n */\r\nvar IdleValue = /** @class */ (function () {\r\n    function IdleValue(executor) {\r\n        var _this = this;\r\n        this._executor = function () {\r\n            try {\r\n                _this._value = executor();\r\n            }\r\n            catch (err) {\r\n                _this._error = err;\r\n            }\r\n            finally {\r\n                _this._didRun = true;\r\n            }\r\n        };\r\n        this._handle = runWhenIdle(function () { return _this._executor(); });\r\n    }\r\n    IdleValue.prototype.dispose = function () {\r\n        this._handle.dispose();\r\n    };\r\n    IdleValue.prototype.getValue = function () {\r\n        if (!this._didRun) {\r\n            this._handle.dispose();\r\n            this._executor();\r\n        }\r\n        if (this._error) {\r\n            throw this._error;\r\n        }\r\n        return this._value;\r\n    };\r\n    return IdleValue;\r\n}());\r\nexport { IdleValue };\r\n//#endregion\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Promise as WinJSPromise } from './winjs.base.js';\r\nimport * as platform from './platform.js';\r\nimport { isThenable } from './async.js';\r\nfunction isWinJSPromise(candidate) {\r\n    return isThenable(candidate) && typeof candidate.done === 'function';\r\n}\r\n/**\r\n * A polyfill for the native promises. The implementation is based on\r\n * WinJS promises but tries to gap differences between winjs promises\r\n * and native promises.\r\n */\r\nvar PolyfillPromise = /** @class */ (function () {\r\n    function PolyfillPromise(initOrPromise) {\r\n        if (isWinJSPromise(initOrPromise)) {\r\n            this._winjsPromise = initOrPromise;\r\n        }\r\n        else {\r\n            this._winjsPromise = new WinJSPromise(function (resolve, reject) {\r\n                var initializing = true;\r\n                initOrPromise(function (value) {\r\n                    if (!initializing) {\r\n                        resolve(value);\r\n                    }\r\n                    else {\r\n                        platform.setImmediate(function () { return resolve(value); });\r\n                    }\r\n                }, function (err) {\r\n                    if (!initializing) {\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        platform.setImmediate(function () { return reject(err); });\r\n                    }\r\n                });\r\n                initializing = false;\r\n            });\r\n        }\r\n    }\r\n    PolyfillPromise.all = function (thenables) {\r\n        return new PolyfillPromise(WinJSPromise.join(thenables).then(null, function (values) {\r\n            // WinJSPromise returns a sparse array whereas\r\n            // native promises return the *first* error\r\n            for (var key in values) {\r\n                if (values.hasOwnProperty(key)) {\r\n                    return values[key];\r\n                }\r\n            }\r\n        }));\r\n    };\r\n    PolyfillPromise.race = function (thenables) {\r\n        // WinJSPromise returns `{ key: <index/key>, value: <promise> }`\r\n        // from the `any` call and Promise.race just wants the value\r\n        return new PolyfillPromise(WinJSPromise.any(thenables).then(function (entry) { return entry.value; }, function (err) { return err.value; }));\r\n    };\r\n    PolyfillPromise.resolve = function (value) {\r\n        return new PolyfillPromise(WinJSPromise.wrap(value));\r\n    };\r\n    PolyfillPromise.reject = function (value) {\r\n        return new PolyfillPromise(WinJSPromise.wrapError(value));\r\n    };\r\n    PolyfillPromise.prototype.then = function (onFulfilled, onRejected) {\r\n        var sync = true;\r\n        // To support chaining, we need to return the value of the\r\n        // onFulfilled and onRejected callback.\r\n        // WinJSPromise supports a flat-map style #then, ie. the callbacks\r\n        // passed to WinJSPromise#then can return a Promise.\r\n        var promise = new PolyfillPromise(this._winjsPromise.then(onFulfilled && function (value) {\r\n            if (!sync) {\r\n                return onFulfilled(value);\r\n            }\r\n            else {\r\n                return new WinJSPromise(function (resolve, reject) {\r\n                    platform.setImmediate(function () {\r\n                        var result;\r\n                        try {\r\n                            result = onFulfilled(value);\r\n                        }\r\n                        catch (err2) {\r\n                            reject(err2);\r\n                            return;\r\n                        }\r\n                        resolve(result);\r\n                    });\r\n                });\r\n            }\r\n        }, onRejected && function (err) {\r\n            if (!sync) {\r\n                return onRejected(err);\r\n            }\r\n            else {\r\n                return new WinJSPromise(function (resolve, reject) {\r\n                    platform.setImmediate(function () {\r\n                        var result;\r\n                        try {\r\n                            result = onRejected(err);\r\n                        }\r\n                        catch (err2) {\r\n                            reject(err2);\r\n                            return;\r\n                        }\r\n                        resolve(result);\r\n                    });\r\n                });\r\n            }\r\n        }));\r\n        sync = false;\r\n        return promise;\r\n    };\r\n    PolyfillPromise.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    return PolyfillPromise;\r\n}());\r\nexport { PolyfillPromise };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { transformErrorForSerialization } from '../errors.js';\r\nimport { Disposable } from '../lifecycle.js';\r\nimport { isWeb } from '../platform.js';\r\nimport { PolyfillPromise } from '../winjs.polyfill.promise.js';\r\nvar global = self;\r\n// When missing, polyfill the native promise\r\n// with our winjs-based polyfill\r\nif (typeof global.Promise === 'undefined') {\r\n    global.Promise = PolyfillPromise;\r\n}\r\nvar INITIALIZE = '$initialize';\r\nvar webWorkerWarningLogged = false;\r\nexport function logOnceWebWorkerWarning(err) {\r\n    if (!isWeb) {\r\n        // running tests\r\n        return;\r\n    }\r\n    if (!webWorkerWarningLogged) {\r\n        webWorkerWarningLogged = true;\r\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\r\n    }\r\n    console.warn(err.message);\r\n}\r\nvar SimpleWorkerProtocol = /** @class */ (function () {\r\n    function SimpleWorkerProtocol(handler) {\r\n        this._workerId = -1;\r\n        this._handler = handler;\r\n        this._lastSentReq = 0;\r\n        this._pendingReplies = Object.create(null);\r\n    }\r\n    SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\r\n        this._workerId = workerId;\r\n    };\r\n    SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\r\n        var _this = this;\r\n        var req = String(++this._lastSentReq);\r\n        return new Promise(function (resolve, reject) {\r\n            _this._pendingReplies[req] = {\r\n                resolve: resolve,\r\n                reject: reject\r\n            };\r\n            _this._send({\r\n                vsWorker: _this._workerId,\r\n                req: req,\r\n                method: method,\r\n                args: args\r\n            });\r\n        });\r\n    };\r\n    SimpleWorkerProtocol.prototype.handleMessage = function (serializedMessage) {\r\n        var message;\r\n        try {\r\n            message = JSON.parse(serializedMessage);\r\n        }\r\n        catch (e) {\r\n            // nothing\r\n            return;\r\n        }\r\n        if (!message || !message.vsWorker) {\r\n            return;\r\n        }\r\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\r\n            return;\r\n        }\r\n        this._handleMessage(message);\r\n    };\r\n    SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\r\n        var _this = this;\r\n        if (msg.seq) {\r\n            var replyMessage = msg;\r\n            if (!this._pendingReplies[replyMessage.seq]) {\r\n                console.warn('Got reply to unknown seq');\r\n                return;\r\n            }\r\n            var reply = this._pendingReplies[replyMessage.seq];\r\n            delete this._pendingReplies[replyMessage.seq];\r\n            if (replyMessage.err) {\r\n                var err = replyMessage.err;\r\n                if (replyMessage.err.$isError) {\r\n                    err = new Error();\r\n                    err.name = replyMessage.err.name;\r\n                    err.message = replyMessage.err.message;\r\n                    err.stack = replyMessage.err.stack;\r\n                }\r\n                reply.reject(err);\r\n                return;\r\n            }\r\n            reply.resolve(replyMessage.res);\r\n            return;\r\n        }\r\n        var requestMessage = msg;\r\n        var req = requestMessage.req;\r\n        var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\r\n        result.then(function (r) {\r\n            _this._send({\r\n                vsWorker: _this._workerId,\r\n                seq: req,\r\n                res: r,\r\n                err: undefined\r\n            });\r\n        }, function (e) {\r\n            if (e.detail instanceof Error) {\r\n                // Loading errors have a detail property that points to the actual error\r\n                e.detail = transformErrorForSerialization(e.detail);\r\n            }\r\n            _this._send({\r\n                vsWorker: _this._workerId,\r\n                seq: req,\r\n                res: undefined,\r\n                err: transformErrorForSerialization(e)\r\n            });\r\n        });\r\n    };\r\n    SimpleWorkerProtocol.prototype._send = function (msg) {\r\n        var strMsg = JSON.stringify(msg);\r\n        // console.log('SENDING: ' + strMsg);\r\n        this._handler.sendMessage(strMsg);\r\n    };\r\n    return SimpleWorkerProtocol;\r\n}());\r\n/**\r\n * Main thread side\r\n */\r\nvar SimpleWorkerClient = /** @class */ (function (_super) {\r\n    __extends(SimpleWorkerClient, _super);\r\n    function SimpleWorkerClient(workerFactory, moduleId) {\r\n        var _this = _super.call(this) || this;\r\n        var lazyProxyReject = null;\r\n        _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\r\n            _this._protocol.handleMessage(msg);\r\n        }, function (err) {\r\n            // in Firefox, web workers fail lazily :(\r\n            // we will reject the proxy\r\n            if (lazyProxyReject) {\r\n                lazyProxyReject(err);\r\n            }\r\n        }));\r\n        _this._protocol = new SimpleWorkerProtocol({\r\n            sendMessage: function (msg) {\r\n                _this._worker.postMessage(msg);\r\n            },\r\n            handleMessage: function (method, args) {\r\n                // Intentionally not supporting worker -> main requests\r\n                return Promise.resolve(null);\r\n            }\r\n        });\r\n        _this._protocol.setWorkerId(_this._worker.getId());\r\n        // Gather loader configuration\r\n        var loaderConfiguration = null;\r\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\r\n            // Get the configuration from the Monaco AMD Loader\r\n            loaderConfiguration = self.require.getConfig();\r\n        }\r\n        else if (typeof self.requirejs !== 'undefined') {\r\n            // Get the configuration from requirejs\r\n            loaderConfiguration = self.requirejs.s.contexts._.config;\r\n        }\r\n        // Send initialize message\r\n        _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\r\n            _this._worker.getId(),\r\n            moduleId,\r\n            loaderConfiguration\r\n        ]);\r\n        _this._lazyProxy = new Promise(function (resolve, reject) {\r\n            lazyProxyReject = reject;\r\n            _this._onModuleLoaded.then(function (availableMethods) {\r\n                var proxy = {};\r\n                for (var i = 0; i < availableMethods.length; i++) {\r\n                    proxy[availableMethods[i]] = createProxyMethod(availableMethods[i], proxyMethodRequest);\r\n                }\r\n                resolve(proxy);\r\n            }, function (e) {\r\n                reject(e);\r\n                _this._onError('Worker failed to load ' + moduleId, e);\r\n            });\r\n        });\r\n        // Create proxy to loaded code\r\n        var proxyMethodRequest = function (method, args) {\r\n            return _this._request(method, args);\r\n        };\r\n        var createProxyMethod = function (method, proxyMethodRequest) {\r\n            return function () {\r\n                var args = Array.prototype.slice.call(arguments, 0);\r\n                return proxyMethodRequest(method, args);\r\n            };\r\n        };\r\n        return _this;\r\n    }\r\n    SimpleWorkerClient.prototype.getProxyObject = function () {\r\n        return this._lazyProxy;\r\n    };\r\n    SimpleWorkerClient.prototype._request = function (method, args) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this._onModuleLoaded.then(function () {\r\n                _this._protocol.sendMessage(method, args).then(resolve, reject);\r\n            }, reject);\r\n        });\r\n    };\r\n    SimpleWorkerClient.prototype._onError = function (message, error) {\r\n        console.error(message);\r\n        console.info(error);\r\n    };\r\n    return SimpleWorkerClient;\r\n}(Disposable));\r\nexport { SimpleWorkerClient };\r\n/**\r\n * Worker side\r\n */\r\nvar SimpleWorkerServer = /** @class */ (function () {\r\n    function SimpleWorkerServer(postSerializedMessage, requestHandler) {\r\n        var _this = this;\r\n        this._requestHandler = requestHandler;\r\n        this._protocol = new SimpleWorkerProtocol({\r\n            sendMessage: function (msg) {\r\n                postSerializedMessage(msg);\r\n            },\r\n            handleMessage: function (method, args) { return _this._handleMessage(method, args); }\r\n        });\r\n    }\r\n    SimpleWorkerServer.prototype.onmessage = function (msg) {\r\n        this._protocol.handleMessage(msg);\r\n    };\r\n    SimpleWorkerServer.prototype._handleMessage = function (method, args) {\r\n        if (method === INITIALIZE) {\r\n            return this.initialize(args[0], args[1], args[2]);\r\n        }\r\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\r\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\r\n        }\r\n        try {\r\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n    SimpleWorkerServer.prototype.initialize = function (workerId, moduleId, loaderConfig) {\r\n        var _this = this;\r\n        this._protocol.setWorkerId(workerId);\r\n        if (this._requestHandler) {\r\n            // static request handler\r\n            var methods = [];\r\n            for (var prop in this._requestHandler) {\r\n                if (typeof this._requestHandler[prop] === 'function') {\r\n                    methods.push(prop);\r\n                }\r\n            }\r\n            return Promise.resolve(methods);\r\n        }\r\n        if (loaderConfig) {\r\n            // Remove 'baseUrl', handling it is beyond scope for now\r\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\r\n                delete loaderConfig['baseUrl'];\r\n            }\r\n            if (typeof loaderConfig.paths !== 'undefined') {\r\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\r\n                    delete loaderConfig.paths['vs'];\r\n                }\r\n            }\r\n            // Since this is in a web worker, enable catching errors\r\n            loaderConfig.catchError = true;\r\n            self.require.config(loaderConfig);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            // Use the global require to be sure to get the global config\r\n            self.require([moduleId], function () {\r\n                var result = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    result[_i] = arguments[_i];\r\n                }\r\n                var handlerModule = result[0];\r\n                _this._requestHandler = handlerModule.create();\r\n                if (!_this._requestHandler) {\r\n                    reject(new Error(\"No RequestHandler!\"));\r\n                    return;\r\n                }\r\n                var methods = [];\r\n                for (var prop in _this._requestHandler) {\r\n                    if (typeof _this._requestHandler[prop] === 'function') {\r\n                        methods.push(prop);\r\n                    }\r\n                }\r\n                resolve(methods);\r\n            }, reject);\r\n        });\r\n    };\r\n    return SimpleWorkerServer;\r\n}());\r\nexport { SimpleWorkerServer };\r\n/**\r\n * Called on the worker side\r\n */\r\nexport function create(postMessage) {\r\n    return new SimpleWorkerServer(postMessage, null);\r\n}\r\n","/**\r\n * Returns the last element of an array.\r\n * @param array The array.\r\n * @param n Which element from the end (default is zero).\r\n */\r\nexport function tail(array, n) {\r\n    if (n === void 0) { n = 0; }\r\n    return array[array.length - (1 + n)];\r\n}\r\nexport function tail2(arr) {\r\n    if (arr.length === 0) {\r\n        throw new Error('Invalid tail call');\r\n    }\r\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\r\n}\r\nexport function equals(one, other, itemEquals) {\r\n    if (itemEquals === void 0) { itemEquals = function (a, b) { return a === b; }; }\r\n    if (one === other) {\r\n        return true;\r\n    }\r\n    if (!one || !other) {\r\n        return false;\r\n    }\r\n    if (one.length !== other.length) {\r\n        return false;\r\n    }\r\n    for (var i = 0, len = one.length; i < len; i++) {\r\n        if (!itemEquals(one[i], other[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function binarySearch(array, key, comparator) {\r\n    var low = 0, high = array.length - 1;\r\n    while (low <= high) {\r\n        var mid = ((low + high) / 2) | 0;\r\n        var comp = comparator(array[mid], key);\r\n        if (comp < 0) {\r\n            low = mid + 1;\r\n        }\r\n        else if (comp > 0) {\r\n            high = mid - 1;\r\n        }\r\n        else {\r\n            return mid;\r\n        }\r\n    }\r\n    return -(low + 1);\r\n}\r\n/**\r\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\r\n * are located before all elements where p(x) is true.\r\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\r\n */\r\nexport function findFirstInSorted(array, p) {\r\n    var low = 0, high = array.length;\r\n    if (high === 0) {\r\n        return 0; // no children\r\n    }\r\n    while (low < high) {\r\n        var mid = Math.floor((low + high) / 2);\r\n        if (p(array[mid])) {\r\n            high = mid;\r\n        }\r\n        else {\r\n            low = mid + 1;\r\n        }\r\n    }\r\n    return low;\r\n}\r\n/**\r\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\r\n * so only use this when actually needing stable sort.\r\n */\r\nexport function mergeSort(data, compare) {\r\n    _sort(data, compare, 0, data.length - 1, []);\r\n    return data;\r\n}\r\nfunction _merge(a, compare, lo, mid, hi, aux) {\r\n    var leftIdx = lo, rightIdx = mid + 1;\r\n    for (var i = lo; i <= hi; i++) {\r\n        aux[i] = a[i];\r\n    }\r\n    for (var i = lo; i <= hi; i++) {\r\n        if (leftIdx > mid) {\r\n            // left side consumed\r\n            a[i] = aux[rightIdx++];\r\n        }\r\n        else if (rightIdx > hi) {\r\n            // right side consumed\r\n            a[i] = aux[leftIdx++];\r\n        }\r\n        else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\r\n            // right element is less -> comes first\r\n            a[i] = aux[rightIdx++];\r\n        }\r\n        else {\r\n            // left element comes first (less or equal)\r\n            a[i] = aux[leftIdx++];\r\n        }\r\n    }\r\n}\r\nfunction _sort(a, compare, lo, hi, aux) {\r\n    if (hi <= lo) {\r\n        return;\r\n    }\r\n    var mid = lo + ((hi - lo) / 2) | 0;\r\n    _sort(a, compare, lo, mid, aux);\r\n    _sort(a, compare, mid + 1, hi, aux);\r\n    if (compare(a[mid], a[mid + 1]) <= 0) {\r\n        // left and right are sorted and if the last-left element is less\r\n        // or equals than the first-right element there is nothing else\r\n        // to do\r\n        return;\r\n    }\r\n    _merge(a, compare, lo, mid, hi, aux);\r\n}\r\nexport function groupBy(data, compare) {\r\n    var result = [];\r\n    var currentGroup = undefined;\r\n    for (var _i = 0, _a = mergeSort(data.slice(0), compare); _i < _a.length; _i++) {\r\n        var element = _a[_i];\r\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\r\n            currentGroup = [element];\r\n            result.push(currentGroup);\r\n        }\r\n        else {\r\n            currentGroup.push(element);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @returns a new array with all falsy values removed. The original array IS NOT modified.\r\n */\r\nexport function coalesce(array) {\r\n    if (!array) {\r\n        return array;\r\n    }\r\n    return array.filter(function (e) { return !!e; });\r\n}\r\n/**\r\n * @returns {{false}} if the provided object is an array\r\n * \tand not empty.\r\n */\r\nexport function isFalsyOrEmpty(obj) {\r\n    return !Array.isArray(obj) || obj.length === 0;\r\n}\r\n/**\r\n * Removes duplicates from the given array. The optional keyFn allows to specify\r\n * how elements are checked for equalness by returning a unique string for each.\r\n */\r\nexport function distinct(array, keyFn) {\r\n    if (!keyFn) {\r\n        return array.filter(function (element, position) {\r\n            return array.indexOf(element) === position;\r\n        });\r\n    }\r\n    var seen = Object.create(null);\r\n    return array.filter(function (elem) {\r\n        var key = keyFn(elem);\r\n        if (seen[key]) {\r\n            return false;\r\n        }\r\n        seen[key] = true;\r\n        return true;\r\n    });\r\n}\r\nexport function firstIndex(array, fn) {\r\n    for (var i = 0; i < array.length; i++) {\r\n        var element = array[i];\r\n        if (fn(element)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function first(array, fn, notFoundValue) {\r\n    if (notFoundValue === void 0) { notFoundValue = null; }\r\n    var index = firstIndex(array, fn);\r\n    return index < 0 ? notFoundValue : array[index];\r\n}\r\nexport function flatten(arr) {\r\n    var _a;\r\n    return (_a = []).concat.apply(_a, arr);\r\n}\r\nexport function range(arg, to) {\r\n    var from = typeof to === 'number' ? arg : 0;\r\n    if (typeof to === 'number') {\r\n        from = arg;\r\n    }\r\n    else {\r\n        from = 0;\r\n        to = arg;\r\n    }\r\n    var result = [];\r\n    if (from <= to) {\r\n        for (var i = from; i < to; i++) {\r\n            result.push(i);\r\n        }\r\n    }\r\n    else {\r\n        for (var i = from; i > to; i--) {\r\n            result.push(i);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Insert `insertArr` inside `target` at `insertIndex`.\r\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\r\n */\r\nexport function arrayInsert(target, insertIndex, insertArr) {\r\n    var before = target.slice(0, insertIndex);\r\n    var after = target.slice(insertIndex);\r\n    return before.concat(insertArr, after);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/**\r\n * Represents information about a specific difference between two sequences.\r\n */\r\nvar DiffChange = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new DiffChange with the given sequence information\r\n     * and content.\r\n     */\r\n    function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\r\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\r\n        this.originalStart = originalStart;\r\n        this.originalLength = originalLength;\r\n        this.modifiedStart = modifiedStart;\r\n        this.modifiedLength = modifiedLength;\r\n    }\r\n    /**\r\n     * The end point (exclusive) of the change in the original sequence.\r\n     */\r\n    DiffChange.prototype.getOriginalEnd = function () {\r\n        return this.originalStart + this.originalLength;\r\n    };\r\n    /**\r\n     * The end point (exclusive) of the change in the modified sequence.\r\n     */\r\n    DiffChange.prototype.getModifiedEnd = function () {\r\n        return this.modifiedStart + this.modifiedLength;\r\n    };\r\n    return DiffChange;\r\n}());\r\nexport { DiffChange };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { DiffChange } from './diffChange.js';\r\nfunction createStringSequence(a) {\r\n    return {\r\n        getLength: function () { return a.length; },\r\n        getElementAtIndex: function (pos) { return a.charCodeAt(pos); }\r\n    };\r\n}\r\nexport function stringDiff(original, modified, pretty) {\r\n    return new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\r\n}\r\n//\r\n// The code below has been ported from a C# implementation in VS\r\n//\r\nvar Debug = /** @class */ (function () {\r\n    function Debug() {\r\n    }\r\n    Debug.Assert = function (condition, message) {\r\n        if (!condition) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n    return Debug;\r\n}());\r\nexport { Debug };\r\nvar MyArray = /** @class */ (function () {\r\n    function MyArray() {\r\n    }\r\n    /**\r\n     * Copies a range of elements from an Array starting at the specified source index and pastes\r\n     * them to another Array starting at the specified destination index. The length and the indexes\r\n     * are specified as 64-bit integers.\r\n     * sourceArray:\r\n     *\t\tThe Array that contains the data to copy.\r\n     * sourceIndex:\r\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\r\n     * destinationArray:\r\n     *\t\tThe Array that receives the data.\r\n     * destinationIndex:\r\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\r\n     * length:\r\n     *\t\tA 64-bit integer that represents the number of elements to copy.\r\n     */\r\n    MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\r\n        for (var i = 0; i < length; i++) {\r\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\r\n        }\r\n    };\r\n    return MyArray;\r\n}());\r\nexport { MyArray };\r\n//*****************************************************************************\r\n// LcsDiff.cs\r\n//\r\n// An implementation of the difference algorithm described in\r\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\r\n//\r\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\r\n//*****************************************************************************\r\n// Our total memory usage for storing history is (worst-case):\r\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\r\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\r\nvar MaxDifferencesHistory = 1447;\r\n//let MaxDifferencesHistory = 100;\r\n/**\r\n * A utility class which helps to create the set of DiffChanges from\r\n * a difference operation. This class accepts original DiffElements and\r\n * modified DiffElements that are involved in a particular change. The\r\n * MarktNextChange() method can be called to mark the separation between\r\n * distinct changes. At the end, the Changes property can be called to retrieve\r\n * the constructed changes.\r\n */\r\nvar DiffChangeHelper = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\r\n     */\r\n    function DiffChangeHelper() {\r\n        this.m_changes = [];\r\n        this.m_originalStart = Number.MAX_VALUE;\r\n        this.m_modifiedStart = Number.MAX_VALUE;\r\n        this.m_originalCount = 0;\r\n        this.m_modifiedCount = 0;\r\n    }\r\n    /**\r\n     * Marks the beginning of the next change in the set of differences.\r\n     */\r\n    DiffChangeHelper.prototype.MarkNextChange = function () {\r\n        // Only add to the list if there is something to add\r\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\r\n            // Add the new change to our list\r\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\r\n        }\r\n        // Reset for the next change\r\n        this.m_originalCount = 0;\r\n        this.m_modifiedCount = 0;\r\n        this.m_originalStart = Number.MAX_VALUE;\r\n        this.m_modifiedStart = Number.MAX_VALUE;\r\n    };\r\n    /**\r\n     * Adds the original element at the given position to the elements\r\n     * affected by the current change. The modified index gives context\r\n     * to the change position with respect to the original sequence.\r\n     * @param originalIndex The index of the original element to add.\r\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\r\n     */\r\n    DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\r\n        // The 'true' start index is the smallest of the ones we've seen\r\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\r\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\r\n        this.m_originalCount++;\r\n    };\r\n    /**\r\n     * Adds the modified element at the given position to the elements\r\n     * affected by the current change. The original index gives context\r\n     * to the change position with respect to the modified sequence.\r\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\r\n     * @param modifiedIndex The index of the modified element to add.\r\n     */\r\n    DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\r\n        // The 'true' start index is the smallest of the ones we've seen\r\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\r\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\r\n        this.m_modifiedCount++;\r\n    };\r\n    /**\r\n     * Retrieves all of the changes marked by the class.\r\n     */\r\n    DiffChangeHelper.prototype.getChanges = function () {\r\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\r\n            // Finish up on whatever is left\r\n            this.MarkNextChange();\r\n        }\r\n        return this.m_changes;\r\n    };\r\n    /**\r\n     * Retrieves all of the changes marked by the class in the reverse order\r\n     */\r\n    DiffChangeHelper.prototype.getReverseChanges = function () {\r\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\r\n            // Finish up on whatever is left\r\n            this.MarkNextChange();\r\n        }\r\n        this.m_changes.reverse();\r\n        return this.m_changes;\r\n    };\r\n    return DiffChangeHelper;\r\n}());\r\n/**\r\n * An implementation of the difference algorithm described in\r\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\r\n */\r\nvar LcsDiff = /** @class */ (function () {\r\n    /**\r\n     * Constructs the DiffFinder\r\n     */\r\n    function LcsDiff(originalSequence, newSequence, continueProcessingPredicate) {\r\n        if (continueProcessingPredicate === void 0) { continueProcessingPredicate = null; }\r\n        this.OriginalSequence = originalSequence;\r\n        this.ModifiedSequence = newSequence;\r\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\r\n        this.m_forwardHistory = [];\r\n        this.m_reverseHistory = [];\r\n    }\r\n    LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\r\n        return (this.OriginalSequence.getElementAtIndex(originalIndex) === this.ModifiedSequence.getElementAtIndex(newIndex));\r\n    };\r\n    LcsDiff.prototype.OriginalElementsAreEqual = function (index1, index2) {\r\n        return (this.OriginalSequence.getElementAtIndex(index1) === this.OriginalSequence.getElementAtIndex(index2));\r\n    };\r\n    LcsDiff.prototype.ModifiedElementsAreEqual = function (index1, index2) {\r\n        return (this.ModifiedSequence.getElementAtIndex(index1) === this.ModifiedSequence.getElementAtIndex(index2));\r\n    };\r\n    LcsDiff.prototype.ComputeDiff = function (pretty) {\r\n        return this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\r\n    };\r\n    /**\r\n     * Computes the differences between the original and modified input\r\n     * sequences on the bounded range.\r\n     * @returns An array of the differences between the two input sequences.\r\n     */\r\n    LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\r\n        var quitEarlyArr = [false];\r\n        var changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\r\n        if (pretty) {\r\n            // We have to clean up the computed diff to be more intuitive\r\n            // but it turns out this cannot be done correctly until the entire set\r\n            // of diffs have been computed\r\n            return this.PrettifyChanges(changes);\r\n        }\r\n        return changes;\r\n    };\r\n    /**\r\n     * Private helper method which computes the differences on the bounded range\r\n     * recursively.\r\n     * @returns An array of the differences between the two input sequences.\r\n     */\r\n    LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\r\n        quitEarlyArr[0] = false;\r\n        // Find the start of the differences\r\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\r\n            originalStart++;\r\n            modifiedStart++;\r\n        }\r\n        // Find the end of the differences\r\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\r\n            originalEnd--;\r\n            modifiedEnd--;\r\n        }\r\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\r\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\r\n            var changes = void 0;\r\n            if (modifiedStart <= modifiedEnd) {\r\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\r\n                // All insertions\r\n                changes = [\r\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\r\n                ];\r\n            }\r\n            else if (originalStart <= originalEnd) {\r\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\r\n                // All deletions\r\n                changes = [\r\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\r\n                ];\r\n            }\r\n            else {\r\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\r\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\r\n                // Identical sequences - No differences\r\n                changes = [];\r\n            }\r\n            return changes;\r\n        }\r\n        // This problem can be solved using the Divide-And-Conquer technique.\r\n        var midOriginalArr = [0], midModifiedArr = [0];\r\n        var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\r\n        var midOriginal = midOriginalArr[0];\r\n        var midModified = midModifiedArr[0];\r\n        if (result !== null) {\r\n            // Result is not-null when there was enough memory to compute the changes while\r\n            // searching for the recursion point\r\n            return result;\r\n        }\r\n        else if (!quitEarlyArr[0]) {\r\n            // We can break the problem down recursively by finding the changes in the\r\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\r\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\r\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\r\n            var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\r\n            var rightChanges = [];\r\n            if (!quitEarlyArr[0]) {\r\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\r\n            }\r\n            else {\r\n                // We did't have time to finish the first half, so we don't have time to compute this half.\r\n                // Consider the entire rest of the sequence different.\r\n                rightChanges = [\r\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\r\n                ];\r\n            }\r\n            return this.ConcatenateChanges(leftChanges, rightChanges);\r\n        }\r\n        // If we hit here, we quit early, and so can't return anything meaningful\r\n        return [\r\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\r\n        ];\r\n    };\r\n    LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\r\n        var forwardChanges = null, reverseChanges = null;\r\n        // First, walk backward through the forward diagonals history\r\n        var changeHelper = new DiffChangeHelper();\r\n        var diagonalMin = diagonalForwardStart;\r\n        var diagonalMax = diagonalForwardEnd;\r\n        var diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\r\n        var lastOriginalIndex = Number.MIN_VALUE;\r\n        var historyIndex = this.m_forwardHistory.length - 1;\r\n        var diagonal;\r\n        do {\r\n            // Get the diagonal index from the relative diagonal number\r\n            diagonal = diagonalRelative + diagonalForwardBase;\r\n            // Figure out where we came from\r\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\r\n                // Vertical line (the element is an insert)\r\n                originalIndex = forwardPoints[diagonal + 1];\r\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\r\n                if (originalIndex < lastOriginalIndex) {\r\n                    changeHelper.MarkNextChange();\r\n                }\r\n                lastOriginalIndex = originalIndex;\r\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\r\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\r\n            }\r\n            else {\r\n                // Horizontal line (the element is a deletion)\r\n                originalIndex = forwardPoints[diagonal - 1] + 1;\r\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\r\n                if (originalIndex < lastOriginalIndex) {\r\n                    changeHelper.MarkNextChange();\r\n                }\r\n                lastOriginalIndex = originalIndex - 1;\r\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\r\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\r\n            }\r\n            if (historyIndex >= 0) {\r\n                forwardPoints = this.m_forwardHistory[historyIndex];\r\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\r\n                diagonalMin = 1;\r\n                diagonalMax = forwardPoints.length - 1;\r\n            }\r\n        } while (--historyIndex >= -1);\r\n        // Ironically, we get the forward changes as the reverse of the\r\n        // order we added them since we technically added them backwards\r\n        forwardChanges = changeHelper.getReverseChanges();\r\n        if (quitEarlyArr[0]) {\r\n            // TODO: Calculate a partial from the reverse diagonals.\r\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\r\n            var originalStartPoint = midOriginalArr[0] + 1;\r\n            var modifiedStartPoint = midModifiedArr[0] + 1;\r\n            if (forwardChanges !== null && forwardChanges.length > 0) {\r\n                var lastForwardChange = forwardChanges[forwardChanges.length - 1];\r\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\r\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\r\n            }\r\n            reverseChanges = [\r\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\r\n            ];\r\n        }\r\n        else {\r\n            // Now walk backward through the reverse diagonals history\r\n            changeHelper = new DiffChangeHelper();\r\n            diagonalMin = diagonalReverseStart;\r\n            diagonalMax = diagonalReverseEnd;\r\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\r\n            lastOriginalIndex = Number.MAX_VALUE;\r\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\r\n            do {\r\n                // Get the diagonal index from the relative diagonal number\r\n                diagonal = diagonalRelative + diagonalReverseBase;\r\n                // Figure out where we came from\r\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\r\n                    // Horizontal line (the element is a deletion))\r\n                    originalIndex = reversePoints[diagonal + 1] - 1;\r\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\r\n                    if (originalIndex > lastOriginalIndex) {\r\n                        changeHelper.MarkNextChange();\r\n                    }\r\n                    lastOriginalIndex = originalIndex + 1;\r\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\r\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\r\n                }\r\n                else {\r\n                    // Vertical line (the element is an insertion)\r\n                    originalIndex = reversePoints[diagonal - 1];\r\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\r\n                    if (originalIndex > lastOriginalIndex) {\r\n                        changeHelper.MarkNextChange();\r\n                    }\r\n                    lastOriginalIndex = originalIndex;\r\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\r\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\r\n                }\r\n                if (historyIndex >= 0) {\r\n                    reversePoints = this.m_reverseHistory[historyIndex];\r\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\r\n                    diagonalMin = 1;\r\n                    diagonalMax = reversePoints.length - 1;\r\n                }\r\n            } while (--historyIndex >= -1);\r\n            // There are cases where the reverse history will find diffs that\r\n            // are correct, but not intuitive, so we need shift them.\r\n            reverseChanges = changeHelper.getChanges();\r\n        }\r\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\r\n    };\r\n    /**\r\n     * Given the range to compute the diff on, this method finds the point:\r\n     * (midOriginal, midModified)\r\n     * that exists in the middle of the LCS of the two sequences and\r\n     * is the point at which the LCS problem may be broken down recursively.\r\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\r\n     * point is calculated and the full trace is available in memory, then this method\r\n     * will return the change list.\r\n     * @param originalStart The start bound of the original sequence range\r\n     * @param originalEnd The end bound of the original sequence range\r\n     * @param modifiedStart The start bound of the modified sequence range\r\n     * @param modifiedEnd The end bound of the modified sequence range\r\n     * @param midOriginal The middle point of the original sequence range\r\n     * @param midModified The middle point of the modified sequence range\r\n     * @returns The diff changes, if available, otherwise null\r\n     */\r\n    LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\r\n        var originalIndex = 0, modifiedIndex = 0;\r\n        var diagonalForwardStart = 0, diagonalForwardEnd = 0;\r\n        var diagonalReverseStart = 0, diagonalReverseEnd = 0;\r\n        var numDifferences;\r\n        // To traverse the edit graph and produce the proper LCS, our actual\r\n        // start position is just outside the given boundary\r\n        originalStart--;\r\n        modifiedStart--;\r\n        // We set these up to make the compiler happy, but they will\r\n        // be replaced before we return with the actual recursion point\r\n        midOriginalArr[0] = 0;\r\n        midModifiedArr[0] = 0;\r\n        // Clear out the history\r\n        this.m_forwardHistory = [];\r\n        this.m_reverseHistory = [];\r\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\r\n        // The integer value in the cell represents the originalIndex of the furthest\r\n        // reaching point found so far that ends in that diagonal.\r\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\r\n        var maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\r\n        var numDiagonals = maxDifferences + 1;\r\n        var forwardPoints = new Array(numDiagonals);\r\n        var reversePoints = new Array(numDiagonals);\r\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\r\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\r\n        var diagonalForwardBase = (modifiedEnd - modifiedStart);\r\n        var diagonalReverseBase = (originalEnd - originalStart);\r\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\r\n        //    diagonal number (relative to diagonalForwardBase)\r\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\r\n        //    diagonal number (relative to diagonalReverseBase)\r\n        var diagonalForwardOffset = (originalStart - modifiedStart);\r\n        var diagonalReverseOffset = (originalEnd - modifiedEnd);\r\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\r\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\r\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\r\n        var delta = diagonalReverseBase - diagonalForwardBase;\r\n        var deltaIsEven = (delta % 2 === 0);\r\n        // Here we set up the start and end points as the furthest points found so far\r\n        // in both the forward and reverse directions, respectively\r\n        forwardPoints[diagonalForwardBase] = originalStart;\r\n        reversePoints[diagonalReverseBase] = originalEnd;\r\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\r\n        quitEarlyArr[0] = false;\r\n        // A couple of points:\r\n        // --With this method, we iterate on the number of differences between the two sequences.\r\n        //   The more differences there actually are, the longer this will take.\r\n        // --Also, as the number of differences increases, we have to search on diagonals further\r\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\r\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\r\n        //   is even and odd diagonals only when numDifferences is odd.\r\n        var diagonal, tempOriginalIndex;\r\n        for (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\r\n            var furthestOriginalIndex = 0;\r\n            var furthestModifiedIndex = 0;\r\n            // Run the algorithm in the forward direction\r\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\r\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\r\n            for (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\r\n                // STEP 1: We extend the furthest reaching point in the present diagonal\r\n                // by looking at the diagonals above and below and picking the one whose point\r\n                // is further away from the start point (originalStart, modifiedStart)\r\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\r\n                    originalIndex = forwardPoints[diagonal + 1];\r\n                }\r\n                else {\r\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\r\n                }\r\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\r\n                // Save the current originalIndex so we can test for false overlap in step 3\r\n                tempOriginalIndex = originalIndex;\r\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\r\n                // so long as the elements are equal.\r\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\r\n                    originalIndex++;\r\n                    modifiedIndex++;\r\n                }\r\n                forwardPoints[diagonal] = originalIndex;\r\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\r\n                    furthestOriginalIndex = originalIndex;\r\n                    furthestModifiedIndex = modifiedIndex;\r\n                }\r\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\r\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\r\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\r\n                // then check for overlap.\r\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\r\n                    if (originalIndex >= reversePoints[diagonal]) {\r\n                        midOriginalArr[0] = originalIndex;\r\n                        midModifiedArr[0] = modifiedIndex;\r\n                        if (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\r\n                            // BINGO! We overlapped, and we have the full trace in memory!\r\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\r\n                        }\r\n                        else {\r\n                            // Either false overlap, or we didn't have enough memory for the full trace\r\n                            // Just return the recursion point\r\n                            return null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Check to see if we should be quitting early, before moving on to the next iteration.\r\n            var matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\r\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\r\n                // We can't finish, so skip ahead to generating a result from what we have.\r\n                quitEarlyArr[0] = true;\r\n                // Use the furthest distance we got in the forward direction.\r\n                midOriginalArr[0] = furthestOriginalIndex;\r\n                midModifiedArr[0] = furthestModifiedIndex;\r\n                if (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\r\n                    // Enough of the history is in memory to walk it backwards\r\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\r\n                }\r\n                else {\r\n                    // We didn't actually remember enough of the history.\r\n                    //Since we are quiting the diff early, we need to shift back the originalStart and modified start\r\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\r\n                    originalStart++;\r\n                    modifiedStart++;\r\n                    return [\r\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\r\n                    ];\r\n                }\r\n            }\r\n            // Run the algorithm in the reverse direction\r\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\r\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\r\n            for (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\r\n                // STEP 1: We extend the furthest reaching point in the present diagonal\r\n                // by looking at the diagonals above and below and picking the one whose point\r\n                // is further away from the start point (originalEnd, modifiedEnd)\r\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\r\n                    originalIndex = reversePoints[diagonal + 1] - 1;\r\n                }\r\n                else {\r\n                    originalIndex = reversePoints[diagonal - 1];\r\n                }\r\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\r\n                // Save the current originalIndex so we can test for false overlap\r\n                tempOriginalIndex = originalIndex;\r\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\r\n                // as long as the elements are equal.\r\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\r\n                    originalIndex--;\r\n                    modifiedIndex--;\r\n                }\r\n                reversePoints[diagonal] = originalIndex;\r\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\r\n                // and diagonal is in the range of forward diagonals computed for numDifferences\r\n                // then check for overlap.\r\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\r\n                    if (originalIndex <= forwardPoints[diagonal]) {\r\n                        midOriginalArr[0] = originalIndex;\r\n                        midModifiedArr[0] = modifiedIndex;\r\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\r\n                            // BINGO! We overlapped, and we have the full trace in memory!\r\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\r\n                        }\r\n                        else {\r\n                            // Either false overlap, or we didn't have enough memory for the full trace\r\n                            // Just return the recursion point\r\n                            return null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Save current vectors to history before the next iteration\r\n            if (numDifferences <= MaxDifferencesHistory) {\r\n                // We are allocating space for one extra int, which we fill with\r\n                // the index of the diagonal base index\r\n                var temp = new Array(diagonalForwardEnd - diagonalForwardStart + 2);\r\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\r\n                MyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\r\n                this.m_forwardHistory.push(temp);\r\n                temp = new Array(diagonalReverseEnd - diagonalReverseStart + 2);\r\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\r\n                MyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\r\n                this.m_reverseHistory.push(temp);\r\n            }\r\n        }\r\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\r\n        // NOTE: This part is a bit messy\r\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\r\n    };\r\n    /**\r\n     * Shifts the given changes to provide a more intuitive diff.\r\n     * While the first element in a diff matches the first element after the diff,\r\n     * we shift the diff down.\r\n     *\r\n     * @param changes The list of changes to shift\r\n     * @returns The shifted changes\r\n     */\r\n    LcsDiff.prototype.PrettifyChanges = function (changes) {\r\n        // Shift all the changes down first\r\n        for (var i = 0; i < changes.length; i++) {\r\n            var change = changes[i];\r\n            var originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\r\n            var modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\r\n            var checkOriginal = change.originalLength > 0;\r\n            var checkModified = change.modifiedLength > 0;\r\n            while (change.originalStart + change.originalLength < originalStop &&\r\n                change.modifiedStart + change.modifiedLength < modifiedStop &&\r\n                (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\r\n                (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\r\n                change.originalStart++;\r\n                change.modifiedStart++;\r\n            }\r\n            var mergedChangeArr = [null];\r\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\r\n                changes[i] = mergedChangeArr[0];\r\n                changes.splice(i + 1, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n        }\r\n        // Shift changes back up until we hit empty or whitespace-only lines\r\n        for (var i = changes.length - 1; i >= 0; i--) {\r\n            var change = changes[i];\r\n            var originalStop = 0;\r\n            var modifiedStop = 0;\r\n            if (i > 0) {\r\n                var prevChange = changes[i - 1];\r\n                if (prevChange.originalLength > 0) {\r\n                    originalStop = prevChange.originalStart + prevChange.originalLength;\r\n                }\r\n                if (prevChange.modifiedLength > 0) {\r\n                    modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\r\n                }\r\n            }\r\n            var checkOriginal = change.originalLength > 0;\r\n            var checkModified = change.modifiedLength > 0;\r\n            var bestDelta = 0;\r\n            var bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\r\n            for (var delta = 1;; delta++) {\r\n                var originalStart = change.originalStart - delta;\r\n                var modifiedStart = change.modifiedStart - delta;\r\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\r\n                    break;\r\n                }\r\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\r\n                    break;\r\n                }\r\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\r\n                    break;\r\n                }\r\n                var score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\r\n                if (score > bestScore) {\r\n                    bestScore = score;\r\n                    bestDelta = delta;\r\n                }\r\n            }\r\n            change.originalStart -= bestDelta;\r\n            change.modifiedStart -= bestDelta;\r\n        }\r\n        return changes;\r\n    };\r\n    LcsDiff.prototype._OriginalIsBoundary = function (index) {\r\n        if (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\r\n            return true;\r\n        }\r\n        var element = this.OriginalSequence.getElementAtIndex(index);\r\n        return (typeof element === 'string' && /^\\s*$/.test(element));\r\n    };\r\n    LcsDiff.prototype._OriginalRegionIsBoundary = function (originalStart, originalLength) {\r\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\r\n            return true;\r\n        }\r\n        if (originalLength > 0) {\r\n            var originalEnd = originalStart + originalLength;\r\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    LcsDiff.prototype._ModifiedIsBoundary = function (index) {\r\n        if (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\r\n            return true;\r\n        }\r\n        var element = this.ModifiedSequence.getElementAtIndex(index);\r\n        return (typeof element === 'string' && /^\\s*$/.test(element));\r\n    };\r\n    LcsDiff.prototype._ModifiedRegionIsBoundary = function (modifiedStart, modifiedLength) {\r\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\r\n            return true;\r\n        }\r\n        if (modifiedLength > 0) {\r\n            var modifiedEnd = modifiedStart + modifiedLength;\r\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    LcsDiff.prototype._boundaryScore = function (originalStart, originalLength, modifiedStart, modifiedLength) {\r\n        var originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\r\n        var modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\r\n        return (originalScore + modifiedScore);\r\n    };\r\n    /**\r\n     * Concatenates the two input DiffChange lists and returns the resulting\r\n     * list.\r\n     * @param The left changes\r\n     * @param The right changes\r\n     * @returns The concatenated list\r\n     */\r\n    LcsDiff.prototype.ConcatenateChanges = function (left, right) {\r\n        var mergedChangeArr = [];\r\n        if (left.length === 0 || right.length === 0) {\r\n            return (right.length > 0) ? right : left;\r\n        }\r\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\r\n            // Since we break the problem down recursively, it is possible that we\r\n            // might recurse in the middle of a change thereby splitting it into\r\n            // two changes. Here in the combining stage, we detect and fuse those\r\n            // changes back together\r\n            var result = new Array(left.length + right.length - 1);\r\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\r\n            result[left.length - 1] = mergedChangeArr[0];\r\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\r\n            return result;\r\n        }\r\n        else {\r\n            var result = new Array(left.length + right.length);\r\n            MyArray.Copy(left, 0, result, 0, left.length);\r\n            MyArray.Copy(right, 0, result, left.length, right.length);\r\n            return result;\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if the two changes overlap and can be merged into a single\r\n     * change\r\n     * @param left The left change\r\n     * @param right The right change\r\n     * @param mergedChange The merged change if the two overlap, null otherwise\r\n     * @returns True if the two changes overlap\r\n     */\r\n    LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\r\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\r\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\r\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\r\n            var originalStart = left.originalStart;\r\n            var originalLength = left.originalLength;\r\n            var modifiedStart = left.modifiedStart;\r\n            var modifiedLength = left.modifiedLength;\r\n            if (left.originalStart + left.originalLength >= right.originalStart) {\r\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\r\n            }\r\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\r\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\r\n            }\r\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\r\n            return true;\r\n        }\r\n        else {\r\n            mergedChangeArr[0] = null;\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Helper method used to clip a diagonal index to the range of valid\r\n     * diagonals. This also decides whether or not the diagonal index,\r\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\r\n     * one inside the boundary depending on the Even/Odd status of the boundary\r\n     * and numDifferences.\r\n     * @param diagonal The index of the diagonal to clip.\r\n     * @param numDifferences The current number of differences being iterated upon.\r\n     * @param diagonalBaseIndex The base reference diagonal.\r\n     * @param numDiagonals The total number of diagonals.\r\n     * @returns The clipped diagonal index.\r\n     */\r\n    LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\r\n        if (diagonal >= 0 && diagonal < numDiagonals) {\r\n            // Nothing to clip, its in range\r\n            return diagonal;\r\n        }\r\n        // diagonalsBelow: The number of diagonals below the reference diagonal\r\n        // diagonalsAbove: The number of diagonals above the reference diagonal\r\n        var diagonalsBelow = diagonalBaseIndex;\r\n        var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\r\n        var diffEven = (numDifferences % 2 === 0);\r\n        if (diagonal < 0) {\r\n            var lowerBoundEven = (diagonalsBelow % 2 === 0);\r\n            return (diffEven === lowerBoundEven) ? 0 : 1;\r\n        }\r\n        else {\r\n            var upperBoundEven = (diagonalsAbove % 2 === 0);\r\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\r\n        }\r\n    };\r\n    return LcsDiff;\r\n}());\r\nexport { LcsDiff };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar _a;\r\nimport { isWindows } from './platform.js';\r\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\r\nvar _singleSlashStart = /^\\//;\r\nvar _doubleSlashStart = /^\\/\\//;\r\nvar _throwOnMissingSchema = true;\r\nfunction _validateUri(ret) {\r\n    // scheme, must be set\r\n    if (!ret.scheme) {\r\n        if (_throwOnMissingSchema) {\r\n            throw new Error(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\r\n        }\r\n        else {\r\n            console.warn(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\r\n        }\r\n    }\r\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\r\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\r\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\r\n        throw new Error('[UriError]: Scheme contains illegal characters.');\r\n    }\r\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\r\n    // If a URI contains an authority component, then the path component\r\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\r\n    // does not contain an authority component, then the path cannot begin\r\n    // with two slash characters (\"//\").\r\n    if (ret.path) {\r\n        if (ret.authority) {\r\n            if (!_singleSlashStart.test(ret.path)) {\r\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\r\n            }\r\n        }\r\n        else {\r\n            if (_doubleSlashStart.test(ret.path)) {\r\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\r\n            }\r\n        }\r\n    }\r\n}\r\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\r\nfunction _referenceResolution(scheme, path) {\r\n    // the slash-character is our 'default base' as we don't\r\n    // support constructing URIs relative to other URIs. This\r\n    // also means that we alter and potentially break paths.\r\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\r\n    switch (scheme) {\r\n        case 'https':\r\n        case 'http':\r\n        case 'file':\r\n            if (!path) {\r\n                path = _slash;\r\n            }\r\n            else if (path[0] !== _slash) {\r\n                path = _slash + path;\r\n            }\r\n            break;\r\n    }\r\n    return path;\r\n}\r\nvar _empty = '';\r\nvar _slash = '/';\r\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\r\n/**\r\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\r\n * This class is a simple parser which creates the basic component parts\r\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\r\n * and encoding.\r\n *\r\n *       foo://example.com:8042/over/there?name=ferret#nose\r\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\r\n *        |           |            |            |        |\r\n *     scheme     authority       path        query   fragment\r\n *        |   _____________________|__\r\n *       / \\ /                        \\\r\n *       urn:example:animal:ferret:nose\r\n */\r\nvar URI = /** @class */ (function () {\r\n    /**\r\n     * @internal\r\n     */\r\n    function URI(schemeOrData, authority, path, query, fragment) {\r\n        if (typeof schemeOrData === 'object') {\r\n            this.scheme = schemeOrData.scheme || _empty;\r\n            this.authority = schemeOrData.authority || _empty;\r\n            this.path = schemeOrData.path || _empty;\r\n            this.query = schemeOrData.query || _empty;\r\n            this.fragment = schemeOrData.fragment || _empty;\r\n            // no validation because it's this URI\r\n            // that creates uri components.\r\n            // _validateUri(this);\r\n        }\r\n        else {\r\n            this.scheme = schemeOrData || _empty;\r\n            this.authority = authority || _empty;\r\n            this.path = _referenceResolution(this.scheme, path || _empty);\r\n            this.query = query || _empty;\r\n            this.fragment = fragment || _empty;\r\n            _validateUri(this);\r\n        }\r\n    }\r\n    URI.isUri = function (thing) {\r\n        if (thing instanceof URI) {\r\n            return true;\r\n        }\r\n        if (!thing) {\r\n            return false;\r\n        }\r\n        return typeof thing.authority === 'string'\r\n            && typeof thing.fragment === 'string'\r\n            && typeof thing.path === 'string'\r\n            && typeof thing.query === 'string'\r\n            && typeof thing.scheme === 'string';\r\n    };\r\n    Object.defineProperty(URI.prototype, \"fsPath\", {\r\n        // ---- filesystem path -----------------------\r\n        /**\r\n         * Returns a string representing the corresponding file system path of this URI.\r\n         * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\r\n         * platform specific path separator.\r\n         *\r\n         * * Will *not* validate the path for invalid characters and semantics.\r\n         * * Will *not* look at the scheme of this URI.\r\n         * * The result shall *not* be used for display purposes but for accessing a file on disk.\r\n         *\r\n         *\r\n         * The *difference* to `URI#path` is the use of the platform specific separator and the handling\r\n         * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\r\n         *\r\n         * ```ts\r\n            const u = URI.parse('file://server/c$/folder/file.txt')\r\n            u.authority === 'server'\r\n            u.path === '/shares/c$/file.txt'\r\n            u.fsPath === '\\\\server\\c$\\folder\\file.txt'\r\n        ```\r\n         *\r\n         * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\r\n         * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\r\n         * with URIs that represent files on disk (`file` scheme).\r\n         */\r\n        get: function () {\r\n            // if (this.scheme !== 'file') {\r\n            // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\r\n            // }\r\n            return _makeFsPath(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // ---- modify to new -------------------------\r\n    URI.prototype.with = function (change) {\r\n        if (!change) {\r\n            return this;\r\n        }\r\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\r\n        if (scheme === void 0) {\r\n            scheme = this.scheme;\r\n        }\r\n        else if (scheme === null) {\r\n            scheme = _empty;\r\n        }\r\n        if (authority === void 0) {\r\n            authority = this.authority;\r\n        }\r\n        else if (authority === null) {\r\n            authority = _empty;\r\n        }\r\n        if (path === void 0) {\r\n            path = this.path;\r\n        }\r\n        else if (path === null) {\r\n            path = _empty;\r\n        }\r\n        if (query === void 0) {\r\n            query = this.query;\r\n        }\r\n        else if (query === null) {\r\n            query = _empty;\r\n        }\r\n        if (fragment === void 0) {\r\n            fragment = this.fragment;\r\n        }\r\n        else if (fragment === null) {\r\n            fragment = _empty;\r\n        }\r\n        if (scheme === this.scheme\r\n            && authority === this.authority\r\n            && path === this.path\r\n            && query === this.query\r\n            && fragment === this.fragment) {\r\n            return this;\r\n        }\r\n        return new _URI(scheme, authority, path, query, fragment);\r\n    };\r\n    // ---- parse & validate ------------------------\r\n    /**\r\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\r\n     * `file:///usr/home`, or `scheme:with/path`.\r\n     *\r\n     * @param value A string which represents an URI (see `URI#toString`).\r\n     */\r\n    URI.parse = function (value) {\r\n        var match = _regexp.exec(value);\r\n        if (!match) {\r\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\r\n        }\r\n        return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty));\r\n    };\r\n    /**\r\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\r\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\r\n     *\r\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\r\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\r\n     * `URI.parse('file://' + path)` because the path might contain characters that are\r\n     * interpreted (# and ?). See the following sample:\r\n     * ```ts\r\n    const good = URI.file('/coding/c#/project1');\r\n    good.scheme === 'file';\r\n    good.path === '/coding/c#/project1';\r\n    good.fragment === '';\r\n    const bad = URI.parse('file://' + '/coding/c#/project1');\r\n    bad.scheme === 'file';\r\n    bad.path === '/coding/c'; // path is now broken\r\n    bad.fragment === '/project1';\r\n    ```\r\n     *\r\n     * @param path A file system path (see `URI#fsPath`)\r\n     */\r\n    URI.file = function (path) {\r\n        var authority = _empty;\r\n        // normalize to fwd-slashes on windows,\r\n        // on other systems bwd-slashes are valid\r\n        // filename character, eg /f\\oo/ba\\r.txt\r\n        if (isWindows) {\r\n            path = path.replace(/\\\\/g, _slash);\r\n        }\r\n        // check for authority as used in UNC shares\r\n        // or use the path as given\r\n        if (path[0] === _slash && path[1] === _slash) {\r\n            var idx = path.indexOf(_slash, 2);\r\n            if (idx === -1) {\r\n                authority = path.substring(2);\r\n                path = _slash;\r\n            }\r\n            else {\r\n                authority = path.substring(2, idx);\r\n                path = path.substring(idx) || _slash;\r\n            }\r\n        }\r\n        return new _URI('file', authority, path, _empty, _empty);\r\n    };\r\n    URI.from = function (components) {\r\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\r\n    };\r\n    // ---- printing/externalize ---------------------------\r\n    /**\r\n     * Creates a string presentation for this URI. It's guaranteed that calling\r\n     * `URI.parse` with the result of this function creates an URI which is equal\r\n     * to this URI.\r\n     *\r\n     * * The result shall *not* be used for display purposes but for externalization or transport.\r\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\r\n     * ignore the scheme-specific encoding rules.\r\n     *\r\n     * @param skipEncoding Do not encode the result, default is `false`\r\n     */\r\n    URI.prototype.toString = function (skipEncoding) {\r\n        if (skipEncoding === void 0) { skipEncoding = false; }\r\n        return _asFormatted(this, skipEncoding);\r\n    };\r\n    URI.prototype.toJSON = function () {\r\n        return this;\r\n    };\r\n    URI.revive = function (data) {\r\n        if (!data) {\r\n            return data;\r\n        }\r\n        else if (data instanceof URI) {\r\n            return data;\r\n        }\r\n        else {\r\n            var result = new _URI(data);\r\n            result._fsPath = data.fsPath;\r\n            result._formatted = data.external;\r\n            return result;\r\n        }\r\n    };\r\n    return URI;\r\n}());\r\nexport { URI };\r\n// tslint:disable-next-line:class-name\r\nvar _URI = /** @class */ (function (_super) {\r\n    __extends(_URI, _super);\r\n    function _URI() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._formatted = null;\r\n        _this._fsPath = null;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\r\n        get: function () {\r\n            if (!this._fsPath) {\r\n                this._fsPath = _makeFsPath(this);\r\n            }\r\n            return this._fsPath;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    _URI.prototype.toString = function (skipEncoding) {\r\n        if (skipEncoding === void 0) { skipEncoding = false; }\r\n        if (!skipEncoding) {\r\n            if (!this._formatted) {\r\n                this._formatted = _asFormatted(this, false);\r\n            }\r\n            return this._formatted;\r\n        }\r\n        else {\r\n            // we don't cache that\r\n            return _asFormatted(this, true);\r\n        }\r\n    };\r\n    _URI.prototype.toJSON = function () {\r\n        var res = {\r\n            $mid: 1\r\n        };\r\n        // cached state\r\n        if (this._fsPath) {\r\n            res.fsPath = this._fsPath;\r\n        }\r\n        if (this._formatted) {\r\n            res.external = this._formatted;\r\n        }\r\n        // uri components\r\n        if (this.path) {\r\n            res.path = this.path;\r\n        }\r\n        if (this.scheme) {\r\n            res.scheme = this.scheme;\r\n        }\r\n        if (this.authority) {\r\n            res.authority = this.authority;\r\n        }\r\n        if (this.query) {\r\n            res.query = this.query;\r\n        }\r\n        if (this.fragment) {\r\n            res.fragment = this.fragment;\r\n        }\r\n        return res;\r\n    };\r\n    return _URI;\r\n}(URI));\r\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\r\nvar encodeTable = (_a = {},\r\n    _a[58 /* Colon */] = '%3A',\r\n    _a[47 /* Slash */] = '%2F',\r\n    _a[63 /* QuestionMark */] = '%3F',\r\n    _a[35 /* Hash */] = '%23',\r\n    _a[91 /* OpenSquareBracket */] = '%5B',\r\n    _a[93 /* CloseSquareBracket */] = '%5D',\r\n    _a[64 /* AtSign */] = '%40',\r\n    _a[33 /* ExclamationMark */] = '%21',\r\n    _a[36 /* DollarSign */] = '%24',\r\n    _a[38 /* Ampersand */] = '%26',\r\n    _a[39 /* SingleQuote */] = '%27',\r\n    _a[40 /* OpenParen */] = '%28',\r\n    _a[41 /* CloseParen */] = '%29',\r\n    _a[42 /* Asterisk */] = '%2A',\r\n    _a[43 /* Plus */] = '%2B',\r\n    _a[44 /* Comma */] = '%2C',\r\n    _a[59 /* Semicolon */] = '%3B',\r\n    _a[61 /* Equals */] = '%3D',\r\n    _a[32 /* Space */] = '%20',\r\n    _a);\r\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\r\n    var res = undefined;\r\n    var nativeEncodePos = -1;\r\n    for (var pos = 0; pos < uriComponent.length; pos++) {\r\n        var code = uriComponent.charCodeAt(pos);\r\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\r\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\r\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\r\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\r\n            || code === 45 /* Dash */\r\n            || code === 46 /* Period */\r\n            || code === 95 /* Underline */\r\n            || code === 126 /* Tilde */\r\n            || (allowSlash && code === 47 /* Slash */)) {\r\n            // check if we are delaying native encode\r\n            if (nativeEncodePos !== -1) {\r\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\r\n                nativeEncodePos = -1;\r\n            }\r\n            // check if we write into a new string (by default we try to return the param)\r\n            if (res !== undefined) {\r\n                res += uriComponent.charAt(pos);\r\n            }\r\n        }\r\n        else {\r\n            // encoding needed, we need to allocate a new string\r\n            if (res === undefined) {\r\n                res = uriComponent.substr(0, pos);\r\n            }\r\n            // check with default table first\r\n            var escaped = encodeTable[code];\r\n            if (escaped !== undefined) {\r\n                // check if we are delaying native encode\r\n                if (nativeEncodePos !== -1) {\r\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\r\n                    nativeEncodePos = -1;\r\n                }\r\n                // append escaped variant to result\r\n                res += escaped;\r\n            }\r\n            else if (nativeEncodePos === -1) {\r\n                // use native encode only when needed\r\n                nativeEncodePos = pos;\r\n            }\r\n        }\r\n    }\r\n    if (nativeEncodePos !== -1) {\r\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\r\n    }\r\n    return res !== undefined ? res : uriComponent;\r\n}\r\nfunction encodeURIComponentMinimal(path) {\r\n    var res = undefined;\r\n    for (var pos = 0; pos < path.length; pos++) {\r\n        var code = path.charCodeAt(pos);\r\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\r\n            if (res === undefined) {\r\n                res = path.substr(0, pos);\r\n            }\r\n            res += encodeTable[code];\r\n        }\r\n        else {\r\n            if (res !== undefined) {\r\n                res += path[pos];\r\n            }\r\n        }\r\n    }\r\n    return res !== undefined ? res : path;\r\n}\r\n/**\r\n * Compute `fsPath` for the given uri\r\n * @param uri\r\n */\r\nfunction _makeFsPath(uri) {\r\n    var value;\r\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\r\n        // unc path: file://shares/c$/far/boo\r\n        value = \"//\" + uri.authority + uri.path;\r\n    }\r\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\r\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\r\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\r\n        // windows drive letter: file:///c:/far/boo\r\n        value = uri.path[1].toLowerCase() + uri.path.substr(2);\r\n    }\r\n    else {\r\n        // other path\r\n        value = uri.path;\r\n    }\r\n    if (isWindows) {\r\n        value = value.replace(/\\//g, '\\\\');\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Create the external version of a uri\r\n */\r\nfunction _asFormatted(uri, skipEncoding) {\r\n    var encoder = !skipEncoding\r\n        ? encodeURIComponentFast\r\n        : encodeURIComponentMinimal;\r\n    var res = '';\r\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\r\n    if (scheme) {\r\n        res += scheme;\r\n        res += ':';\r\n    }\r\n    if (authority || scheme === 'file') {\r\n        res += _slash;\r\n        res += _slash;\r\n    }\r\n    if (authority) {\r\n        var idx = authority.indexOf('@');\r\n        if (idx !== -1) {\r\n            // <user>@<auth>\r\n            var userinfo = authority.substr(0, idx);\r\n            authority = authority.substr(idx + 1);\r\n            idx = userinfo.indexOf(':');\r\n            if (idx === -1) {\r\n                res += encoder(userinfo, false);\r\n            }\r\n            else {\r\n                // <user>:<pass>@<auth>\r\n                res += encoder(userinfo.substr(0, idx), false);\r\n                res += ':';\r\n                res += encoder(userinfo.substr(idx + 1), false);\r\n            }\r\n            res += '@';\r\n        }\r\n        authority = authority.toLowerCase();\r\n        idx = authority.indexOf(':');\r\n        if (idx === -1) {\r\n            res += encoder(authority, false);\r\n        }\r\n        else {\r\n            // <auth>:<port>\r\n            res += encoder(authority.substr(0, idx), false);\r\n            res += authority.substr(idx);\r\n        }\r\n    }\r\n    if (path) {\r\n        // lower-case windows drive letters in /C:/fff or C:/fff\r\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\r\n            var code = path.charCodeAt(1);\r\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\r\n                path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\r\n            }\r\n        }\r\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\r\n            var code = path.charCodeAt(0);\r\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\r\n                path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\r\n            }\r\n        }\r\n        // encode the rest of the path\r\n        res += encoder(path, true);\r\n    }\r\n    if (query) {\r\n        res += '?';\r\n        res += encoder(query, false);\r\n    }\r\n    if (fragment) {\r\n        res += '#';\r\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\r\n    }\r\n    return res;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/**\r\n * A position in the editor.\r\n */\r\nvar Position = /** @class */ (function () {\r\n    function Position(lineNumber, column) {\r\n        this.lineNumber = lineNumber;\r\n        this.column = column;\r\n    }\r\n    /**\r\n     * Create a new postion from this position.\r\n     *\r\n     * @param newLineNumber new line number\r\n     * @param newColumn new column\r\n     */\r\n    Position.prototype.with = function (newLineNumber, newColumn) {\r\n        if (newLineNumber === void 0) { newLineNumber = this.lineNumber; }\r\n        if (newColumn === void 0) { newColumn = this.column; }\r\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\r\n            return this;\r\n        }\r\n        else {\r\n            return new Position(newLineNumber, newColumn);\r\n        }\r\n    };\r\n    /**\r\n     * Derive a new position from this position.\r\n     *\r\n     * @param deltaLineNumber line number delta\r\n     * @param deltaColumn column delta\r\n     */\r\n    Position.prototype.delta = function (deltaLineNumber, deltaColumn) {\r\n        if (deltaLineNumber === void 0) { deltaLineNumber = 0; }\r\n        if (deltaColumn === void 0) { deltaColumn = 0; }\r\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\r\n    };\r\n    /**\r\n     * Test if this position equals other position\r\n     */\r\n    Position.prototype.equals = function (other) {\r\n        return Position.equals(this, other);\r\n    };\r\n    /**\r\n     * Test if position `a` equals position `b`\r\n     */\r\n    Position.equals = function (a, b) {\r\n        if (!a && !b) {\r\n            return true;\r\n        }\r\n        return (!!a &&\r\n            !!b &&\r\n            a.lineNumber === b.lineNumber &&\r\n            a.column === b.column);\r\n    };\r\n    /**\r\n     * Test if this position is before other position.\r\n     * If the two positions are equal, the result will be false.\r\n     */\r\n    Position.prototype.isBefore = function (other) {\r\n        return Position.isBefore(this, other);\r\n    };\r\n    /**\r\n     * Test if position `a` is before position `b`.\r\n     * If the two positions are equal, the result will be false.\r\n     */\r\n    Position.isBefore = function (a, b) {\r\n        if (a.lineNumber < b.lineNumber) {\r\n            return true;\r\n        }\r\n        if (b.lineNumber < a.lineNumber) {\r\n            return false;\r\n        }\r\n        return a.column < b.column;\r\n    };\r\n    /**\r\n     * Test if this position is before other position.\r\n     * If the two positions are equal, the result will be true.\r\n     */\r\n    Position.prototype.isBeforeOrEqual = function (other) {\r\n        return Position.isBeforeOrEqual(this, other);\r\n    };\r\n    /**\r\n     * Test if position `a` is before position `b`.\r\n     * If the two positions are equal, the result will be true.\r\n     */\r\n    Position.isBeforeOrEqual = function (a, b) {\r\n        if (a.lineNumber < b.lineNumber) {\r\n            return true;\r\n        }\r\n        if (b.lineNumber < a.lineNumber) {\r\n            return false;\r\n        }\r\n        return a.column <= b.column;\r\n    };\r\n    /**\r\n     * A function that compares positions, useful for sorting\r\n     */\r\n    Position.compare = function (a, b) {\r\n        var aLineNumber = a.lineNumber | 0;\r\n        var bLineNumber = b.lineNumber | 0;\r\n        if (aLineNumber === bLineNumber) {\r\n            var aColumn = a.column | 0;\r\n            var bColumn = b.column | 0;\r\n            return aColumn - bColumn;\r\n        }\r\n        return aLineNumber - bLineNumber;\r\n    };\r\n    /**\r\n     * Clone this position.\r\n     */\r\n    Position.prototype.clone = function () {\r\n        return new Position(this.lineNumber, this.column);\r\n    };\r\n    /**\r\n     * Convert to a human-readable representation.\r\n     */\r\n    Position.prototype.toString = function () {\r\n        return '(' + this.lineNumber + ',' + this.column + ')';\r\n    };\r\n    // ---\r\n    /**\r\n     * Create a `Position` from an `IPosition`.\r\n     */\r\n    Position.lift = function (pos) {\r\n        return new Position(pos.lineNumber, pos.column);\r\n    };\r\n    /**\r\n     * Test if `obj` is an `IPosition`.\r\n     */\r\n    Position.isIPosition = function (obj) {\r\n        return (obj\r\n            && (typeof obj.lineNumber === 'number')\r\n            && (typeof obj.column === 'number'));\r\n    };\r\n    return Position;\r\n}());\r\nexport { Position };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Position } from './position.js';\r\n/**\r\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\r\n */\r\nvar Range = /** @class */ (function () {\r\n    function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\r\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\r\n            this.startLineNumber = endLineNumber;\r\n            this.startColumn = endColumn;\r\n            this.endLineNumber = startLineNumber;\r\n            this.endColumn = startColumn;\r\n        }\r\n        else {\r\n            this.startLineNumber = startLineNumber;\r\n            this.startColumn = startColumn;\r\n            this.endLineNumber = endLineNumber;\r\n            this.endColumn = endColumn;\r\n        }\r\n    }\r\n    /**\r\n     * Test if this range is empty.\r\n     */\r\n    Range.prototype.isEmpty = function () {\r\n        return Range.isEmpty(this);\r\n    };\r\n    /**\r\n     * Test if `range` is empty.\r\n     */\r\n    Range.isEmpty = function (range) {\r\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\r\n    };\r\n    /**\r\n     * Test if position is in this range. If the position is at the edges, will return true.\r\n     */\r\n    Range.prototype.containsPosition = function (position) {\r\n        return Range.containsPosition(this, position);\r\n    };\r\n    /**\r\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\r\n     */\r\n    Range.containsPosition = function (range, position) {\r\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\r\n            return false;\r\n        }\r\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\r\n            return false;\r\n        }\r\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Test if range is in this range. If the range is equal to this range, will return true.\r\n     */\r\n    Range.prototype.containsRange = function (range) {\r\n        return Range.containsRange(this, range);\r\n    };\r\n    /**\r\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\r\n     */\r\n    Range.containsRange = function (range, otherRange) {\r\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\r\n            return false;\r\n        }\r\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\r\n            return false;\r\n        }\r\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\r\n            return false;\r\n        }\r\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * A reunion of the two ranges.\r\n     * The smallest position will be used as the start point, and the largest one as the end point.\r\n     */\r\n    Range.prototype.plusRange = function (range) {\r\n        return Range.plusRange(this, range);\r\n    };\r\n    /**\r\n     * A reunion of the two ranges.\r\n     * The smallest position will be used as the start point, and the largest one as the end point.\r\n     */\r\n    Range.plusRange = function (a, b) {\r\n        var startLineNumber;\r\n        var startColumn;\r\n        var endLineNumber;\r\n        var endColumn;\r\n        if (b.startLineNumber < a.startLineNumber) {\r\n            startLineNumber = b.startLineNumber;\r\n            startColumn = b.startColumn;\r\n        }\r\n        else if (b.startLineNumber === a.startLineNumber) {\r\n            startLineNumber = b.startLineNumber;\r\n            startColumn = Math.min(b.startColumn, a.startColumn);\r\n        }\r\n        else {\r\n            startLineNumber = a.startLineNumber;\r\n            startColumn = a.startColumn;\r\n        }\r\n        if (b.endLineNumber > a.endLineNumber) {\r\n            endLineNumber = b.endLineNumber;\r\n            endColumn = b.endColumn;\r\n        }\r\n        else if (b.endLineNumber === a.endLineNumber) {\r\n            endLineNumber = b.endLineNumber;\r\n            endColumn = Math.max(b.endColumn, a.endColumn);\r\n        }\r\n        else {\r\n            endLineNumber = a.endLineNumber;\r\n            endColumn = a.endColumn;\r\n        }\r\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\r\n    };\r\n    /**\r\n     * A intersection of the two ranges.\r\n     */\r\n    Range.prototype.intersectRanges = function (range) {\r\n        return Range.intersectRanges(this, range);\r\n    };\r\n    /**\r\n     * A intersection of the two ranges.\r\n     */\r\n    Range.intersectRanges = function (a, b) {\r\n        var resultStartLineNumber = a.startLineNumber;\r\n        var resultStartColumn = a.startColumn;\r\n        var resultEndLineNumber = a.endLineNumber;\r\n        var resultEndColumn = a.endColumn;\r\n        var otherStartLineNumber = b.startLineNumber;\r\n        var otherStartColumn = b.startColumn;\r\n        var otherEndLineNumber = b.endLineNumber;\r\n        var otherEndColumn = b.endColumn;\r\n        if (resultStartLineNumber < otherStartLineNumber) {\r\n            resultStartLineNumber = otherStartLineNumber;\r\n            resultStartColumn = otherStartColumn;\r\n        }\r\n        else if (resultStartLineNumber === otherStartLineNumber) {\r\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\r\n        }\r\n        if (resultEndLineNumber > otherEndLineNumber) {\r\n            resultEndLineNumber = otherEndLineNumber;\r\n            resultEndColumn = otherEndColumn;\r\n        }\r\n        else if (resultEndLineNumber === otherEndLineNumber) {\r\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\r\n        }\r\n        // Check if selection is now empty\r\n        if (resultStartLineNumber > resultEndLineNumber) {\r\n            return null;\r\n        }\r\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\r\n            return null;\r\n        }\r\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\r\n    };\r\n    /**\r\n     * Test if this range equals other.\r\n     */\r\n    Range.prototype.equalsRange = function (other) {\r\n        return Range.equalsRange(this, other);\r\n    };\r\n    /**\r\n     * Test if range `a` equals `b`.\r\n     */\r\n    Range.equalsRange = function (a, b) {\r\n        return (!!a &&\r\n            !!b &&\r\n            a.startLineNumber === b.startLineNumber &&\r\n            a.startColumn === b.startColumn &&\r\n            a.endLineNumber === b.endLineNumber &&\r\n            a.endColumn === b.endColumn);\r\n    };\r\n    /**\r\n     * Return the end position (which will be after or equal to the start position)\r\n     */\r\n    Range.prototype.getEndPosition = function () {\r\n        return new Position(this.endLineNumber, this.endColumn);\r\n    };\r\n    /**\r\n     * Return the start position (which will be before or equal to the end position)\r\n     */\r\n    Range.prototype.getStartPosition = function () {\r\n        return new Position(this.startLineNumber, this.startColumn);\r\n    };\r\n    /**\r\n     * Transform to a user presentable string representation.\r\n     */\r\n    Range.prototype.toString = function () {\r\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\r\n    };\r\n    /**\r\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\r\n     */\r\n    Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\r\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\r\n    };\r\n    /**\r\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\r\n     */\r\n    Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\r\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\r\n    };\r\n    /**\r\n     * Create a new empty range using this range's start position.\r\n     */\r\n    Range.prototype.collapseToStart = function () {\r\n        return Range.collapseToStart(this);\r\n    };\r\n    /**\r\n     * Create a new empty range using this range's start position.\r\n     */\r\n    Range.collapseToStart = function (range) {\r\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\r\n    };\r\n    // ---\r\n    Range.fromPositions = function (start, end) {\r\n        if (end === void 0) { end = start; }\r\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\r\n    };\r\n    Range.lift = function (range) {\r\n        if (!range) {\r\n            return null;\r\n        }\r\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\r\n    };\r\n    /**\r\n     * Test if `obj` is an `IRange`.\r\n     */\r\n    Range.isIRange = function (obj) {\r\n        return (obj\r\n            && (typeof obj.startLineNumber === 'number')\r\n            && (typeof obj.startColumn === 'number')\r\n            && (typeof obj.endLineNumber === 'number')\r\n            && (typeof obj.endColumn === 'number'));\r\n    };\r\n    /**\r\n     * Test if the two ranges are touching in any way.\r\n     */\r\n    Range.areIntersectingOrTouching = function (a, b) {\r\n        // Check if `a` is before `b`\r\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\r\n            return false;\r\n        }\r\n        // Check if `b` is before `a`\r\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\r\n            return false;\r\n        }\r\n        // These ranges must intersect\r\n        return true;\r\n    };\r\n    /**\r\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\r\n     */\r\n    Range.areIntersecting = function (a, b) {\r\n        // Check if `a` is before `b`\r\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\r\n            return false;\r\n        }\r\n        // Check if `b` is before `a`\r\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\r\n            return false;\r\n        }\r\n        // These ranges must intersect\r\n        return true;\r\n    };\r\n    /**\r\n     * A function that compares ranges, useful for sorting ranges\r\n     * It will first compare ranges on the startPosition and then on the endPosition\r\n     */\r\n    Range.compareRangesUsingStarts = function (a, b) {\r\n        if (a && b) {\r\n            var aStartLineNumber = a.startLineNumber | 0;\r\n            var bStartLineNumber = b.startLineNumber | 0;\r\n            if (aStartLineNumber === bStartLineNumber) {\r\n                var aStartColumn = a.startColumn | 0;\r\n                var bStartColumn = b.startColumn | 0;\r\n                if (aStartColumn === bStartColumn) {\r\n                    var aEndLineNumber = a.endLineNumber | 0;\r\n                    var bEndLineNumber = b.endLineNumber | 0;\r\n                    if (aEndLineNumber === bEndLineNumber) {\r\n                        var aEndColumn = a.endColumn | 0;\r\n                        var bEndColumn = b.endColumn | 0;\r\n                        return aEndColumn - bEndColumn;\r\n                    }\r\n                    return aEndLineNumber - bEndLineNumber;\r\n                }\r\n                return aStartColumn - bStartColumn;\r\n            }\r\n            return aStartLineNumber - bStartLineNumber;\r\n        }\r\n        var aExists = (a ? 1 : 0);\r\n        var bExists = (b ? 1 : 0);\r\n        return aExists - bExists;\r\n    };\r\n    /**\r\n     * A function that compares ranges, useful for sorting ranges\r\n     * It will first compare ranges on the endPosition and then on the startPosition\r\n     */\r\n    Range.compareRangesUsingEnds = function (a, b) {\r\n        if (a.endLineNumber === b.endLineNumber) {\r\n            if (a.endColumn === b.endColumn) {\r\n                if (a.startLineNumber === b.startLineNumber) {\r\n                    return a.startColumn - b.startColumn;\r\n                }\r\n                return a.startLineNumber - b.startLineNumber;\r\n            }\r\n            return a.endColumn - b.endColumn;\r\n        }\r\n        return a.endLineNumber - b.endLineNumber;\r\n    };\r\n    /**\r\n     * Test if the range spans multiple lines.\r\n     */\r\n    Range.spansMultipleLines = function (range) {\r\n        return range.endLineNumber > range.startLineNumber;\r\n    };\r\n    return Range;\r\n}());\r\nexport { Range };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/**\r\n * The empty string.\r\n */\r\nexport var empty = '';\r\nexport function isFalsyOrWhitespace(str) {\r\n    if (!str || typeof str !== 'string') {\r\n        return true;\r\n    }\r\n    return str.trim().length === 0;\r\n}\r\n/**\r\n * @returns the provided number with the given number of preceding zeros.\r\n */\r\nexport function pad(n, l, char) {\r\n    if (char === void 0) { char = '0'; }\r\n    var str = '' + n;\r\n    var r = [str];\r\n    for (var i = str.length; i < l; i++) {\r\n        r.push(char);\r\n    }\r\n    return r.reverse().join('');\r\n}\r\nvar _formatRegexp = /{(\\d+)}/g;\r\n/**\r\n * Helper to produce a string with a variable number of arguments. Insert variable segments\r\n * into the string using the {n} notation where N is the index of the argument following the string.\r\n * @param value string to which formatting is applied\r\n * @param args replacements for {n}-entries\r\n */\r\nexport function format(value) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    if (args.length === 0) {\r\n        return value;\r\n    }\r\n    return value.replace(_formatRegexp, function (match, group) {\r\n        var idx = parseInt(group, 10);\r\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\r\n            match :\r\n            args[idx];\r\n    });\r\n}\r\n/**\r\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\r\n * being used e.g. in HTMLElement.innerHTML.\r\n */\r\nexport function escape(html) {\r\n    return html.replace(/[<|>|&]/g, function (match) {\r\n        switch (match) {\r\n            case '<': return '&lt;';\r\n            case '>': return '&gt;';\r\n            case '&': return '&amp;';\r\n            default: return match;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Escapes regular expression characters in a given string\r\n */\r\nexport function escapeRegExpCharacters(value) {\r\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\r\n}\r\n/**\r\n * Removes all occurrences of needle from the beginning and end of haystack.\r\n * @param haystack string to trim\r\n * @param needle the thing to trim (default is a blank)\r\n */\r\nexport function trim(haystack, needle) {\r\n    if (needle === void 0) { needle = ' '; }\r\n    var trimmed = ltrim(haystack, needle);\r\n    return rtrim(trimmed, needle);\r\n}\r\n/**\r\n * Removes all occurrences of needle from the beginning of haystack.\r\n * @param haystack string to trim\r\n * @param needle the thing to trim\r\n */\r\nexport function ltrim(haystack, needle) {\r\n    if (!haystack || !needle) {\r\n        return haystack;\r\n    }\r\n    var needleLen = needle.length;\r\n    if (needleLen === 0 || haystack.length === 0) {\r\n        return haystack;\r\n    }\r\n    var offset = 0;\r\n    while (haystack.indexOf(needle, offset) === offset) {\r\n        offset = offset + needleLen;\r\n    }\r\n    return haystack.substring(offset);\r\n}\r\n/**\r\n * Removes all occurrences of needle from the end of haystack.\r\n * @param haystack string to trim\r\n * @param needle the thing to trim\r\n */\r\nexport function rtrim(haystack, needle) {\r\n    if (!haystack || !needle) {\r\n        return haystack;\r\n    }\r\n    var needleLen = needle.length, haystackLen = haystack.length;\r\n    if (needleLen === 0 || haystackLen === 0) {\r\n        return haystack;\r\n    }\r\n    var offset = haystackLen, idx = -1;\r\n    while (true) {\r\n        idx = haystack.lastIndexOf(needle, offset - 1);\r\n        if (idx === -1 || idx + needleLen !== offset) {\r\n            break;\r\n        }\r\n        if (idx === 0) {\r\n            return '';\r\n        }\r\n        offset = idx;\r\n    }\r\n    return haystack.substring(0, offset);\r\n}\r\nexport function convertSimple2RegExpPattern(pattern) {\r\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\r\n}\r\n/**\r\n * Determines if haystack starts with needle.\r\n */\r\nexport function startsWith(haystack, needle) {\r\n    if (haystack.length < needle.length) {\r\n        return false;\r\n    }\r\n    if (haystack === needle) {\r\n        return true;\r\n    }\r\n    for (var i = 0; i < needle.length; i++) {\r\n        if (haystack[i] !== needle[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Determines if haystack ends with needle.\r\n */\r\nexport function endsWith(haystack, needle) {\r\n    var diff = haystack.length - needle.length;\r\n    if (diff > 0) {\r\n        return haystack.indexOf(needle, diff) === diff;\r\n    }\r\n    else if (diff === 0) {\r\n        return haystack === needle;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexport function createRegExp(searchString, isRegex, options) {\r\n    if (options === void 0) { options = {}; }\r\n    if (!searchString) {\r\n        throw new Error('Cannot create regex from empty string');\r\n    }\r\n    if (!isRegex) {\r\n        searchString = escapeRegExpCharacters(searchString);\r\n    }\r\n    if (options.wholeWord) {\r\n        if (!/\\B/.test(searchString.charAt(0))) {\r\n            searchString = '\\\\b' + searchString;\r\n        }\r\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\r\n            searchString = searchString + '\\\\b';\r\n        }\r\n    }\r\n    var modifiers = '';\r\n    if (options.global) {\r\n        modifiers += 'g';\r\n    }\r\n    if (!options.matchCase) {\r\n        modifiers += 'i';\r\n    }\r\n    if (options.multiline) {\r\n        modifiers += 'm';\r\n    }\r\n    return new RegExp(searchString, modifiers);\r\n}\r\nexport function regExpLeadsToEndlessLoop(regexp) {\r\n    // Exit early if it's one of these special cases which are meant to match\r\n    // against an empty string\r\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\r\n        return false;\r\n    }\r\n    // We check against an empty string. If the regular expression doesn't advance\r\n    // (e.g. ends in an endless loop) it will match an empty string.\r\n    var match = regexp.exec('');\r\n    return !!(match && regexp.lastIndex === 0);\r\n}\r\n/**\r\n * Returns first index of the string that is not whitespace.\r\n * If string is empty or contains only whitespaces, returns -1\r\n */\r\nexport function firstNonWhitespaceIndex(str) {\r\n    for (var i = 0, len = str.length; i < len; i++) {\r\n        var chCode = str.charCodeAt(i);\r\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Returns the leading whitespace of the string.\r\n * If the string contains only whitespaces, returns entire string\r\n */\r\nexport function getLeadingWhitespace(str, start, end) {\r\n    if (start === void 0) { start = 0; }\r\n    if (end === void 0) { end = str.length; }\r\n    for (var i = start; i < end; i++) {\r\n        var chCode = str.charCodeAt(i);\r\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\r\n            return str.substring(start, i);\r\n        }\r\n    }\r\n    return str.substring(start, end);\r\n}\r\n/**\r\n * Returns last index of the string that is not whitespace.\r\n * If string is empty or contains only whitespaces, returns -1\r\n */\r\nexport function lastNonWhitespaceIndex(str, startIndex) {\r\n    if (startIndex === void 0) { startIndex = str.length - 1; }\r\n    for (var i = startIndex; i >= 0; i--) {\r\n        var chCode = str.charCodeAt(i);\r\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function compare(a, b) {\r\n    if (a < b) {\r\n        return -1;\r\n    }\r\n    else if (a > b) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\nexport function isLowerAsciiLetter(code) {\r\n    return code >= 97 /* a */ && code <= 122 /* z */;\r\n}\r\nexport function isUpperAsciiLetter(code) {\r\n    return code >= 65 /* A */ && code <= 90 /* Z */;\r\n}\r\nfunction isAsciiLetter(code) {\r\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\r\n}\r\nexport function equalsIgnoreCase(a, b) {\r\n    var len1 = a ? a.length : 0;\r\n    var len2 = b ? b.length : 0;\r\n    if (len1 !== len2) {\r\n        return false;\r\n    }\r\n    return doEqualsIgnoreCase(a, b);\r\n}\r\nfunction doEqualsIgnoreCase(a, b, stopAt) {\r\n    if (stopAt === void 0) { stopAt = a.length; }\r\n    if (typeof a !== 'string' || typeof b !== 'string') {\r\n        return false;\r\n    }\r\n    for (var i = 0; i < stopAt; i++) {\r\n        var codeA = a.charCodeAt(i);\r\n        var codeB = b.charCodeAt(i);\r\n        if (codeA === codeB) {\r\n            continue;\r\n        }\r\n        // a-z A-Z\r\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\r\n            var diff = Math.abs(codeA - codeB);\r\n            if (diff !== 0 && diff !== 32) {\r\n                return false;\r\n            }\r\n        }\r\n        // Any other charcode\r\n        else {\r\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function startsWithIgnoreCase(str, candidate) {\r\n    var candidateLength = candidate.length;\r\n    if (candidate.length > str.length) {\r\n        return false;\r\n    }\r\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\r\n}\r\n/**\r\n * @returns the length of the common prefix of the two strings.\r\n */\r\nexport function commonPrefixLength(a, b) {\r\n    var i, len = Math.min(a.length, b.length);\r\n    for (i = 0; i < len; i++) {\r\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return len;\r\n}\r\n/**\r\n * @returns the length of the common suffix of the two strings.\r\n */\r\nexport function commonSuffixLength(a, b) {\r\n    var i, len = Math.min(a.length, b.length);\r\n    var aLastIndex = a.length - 1;\r\n    var bLastIndex = b.length - 1;\r\n    for (i = 0; i < len; i++) {\r\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return len;\r\n}\r\n// --- unicode\r\n// http://en.wikipedia.org/wiki/Surrogate_pair\r\n// Returns the code point starting at a specified index in a string\r\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\r\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\r\n//export function getUnicodePoint(str:string, index:number, len:number):number {\r\n//\tlet chrCode = str.charCodeAt(index);\r\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\r\n//\t\tlet nextChrCode = str.charCodeAt(index + 1);\r\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\r\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\r\n//\t\t}\r\n//\t}\r\n//\treturn chrCode;\r\n//}\r\nexport function isHighSurrogate(charCode) {\r\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\r\n}\r\nexport function isLowSurrogate(charCode) {\r\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\r\n}\r\n/**\r\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\r\n */\r\nvar CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\r\n/**\r\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\r\n */\r\nexport function containsRTL(str) {\r\n    return CONTAINS_RTL.test(str);\r\n}\r\n/**\r\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\r\n */\r\nvar CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\r\nexport function containsEmoji(str) {\r\n    return CONTAINS_EMOJI.test(str);\r\n}\r\nvar IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\r\n/**\r\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\r\n */\r\nexport function isBasicASCII(str) {\r\n    return IS_BASIC_ASCII.test(str);\r\n}\r\nexport function containsFullWidthCharacter(str) {\r\n    for (var i = 0, len = str.length; i < len; i++) {\r\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function isFullWidthCharacter(charCode) {\r\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\r\n    // http://jrgraphix.net/research/unicode_blocks.php\r\n    //          2E80 — 2EFF   CJK Radicals Supplement\r\n    //          2F00 — 2FDF   Kangxi Radicals\r\n    //          2FF0 — 2FFF   Ideographic Description Characters\r\n    //          3000 — 303F   CJK Symbols and Punctuation\r\n    //          3040 — 309F   Hiragana\r\n    //          30A0 — 30FF   Katakana\r\n    //          3100 — 312F   Bopomofo\r\n    //          3130 — 318F   Hangul Compatibility Jamo\r\n    //          3190 — 319F   Kanbun\r\n    //          31A0 — 31BF   Bopomofo Extended\r\n    //          31F0 — 31FF   Katakana Phonetic Extensions\r\n    //          3200 — 32FF   Enclosed CJK Letters and Months\r\n    //          3300 — 33FF   CJK Compatibility\r\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\r\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\r\n    //          4E00 — 9FFF   CJK Unified Ideographs\r\n    //          A000 — A48F   Yi Syllables\r\n    //          A490 — A4CF   Yi Radicals\r\n    //          AC00 — D7AF   Hangul Syllables\r\n    // [IGNORE] D800 — DB7F   High Surrogates\r\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\r\n    // [IGNORE] DC00 — DFFF   Low Surrogates\r\n    // [IGNORE] E000 — F8FF   Private Use Area\r\n    //          F900 — FAFF   CJK Compatibility Ideographs\r\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\r\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\r\n    // [IGNORE] FE00 — FE0F   Variation Selectors\r\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\r\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\r\n    // [IGNORE] FE50 — FE6F   Small Form Variants\r\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\r\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\r\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\r\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\r\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\r\n    // [IGNORE] FFF0 — FFFF   Specials\r\n    charCode = +charCode; // @perf\r\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\r\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\r\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\r\n}\r\n// -- UTF-8 BOM\r\nexport var UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\r\nexport function startsWithUTF8BOM(str) {\r\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\r\n}\r\nexport function safeBtoa(str) {\r\n    return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\r\n}\r\nexport function repeat(s, count) {\r\n    var result = '';\r\n    for (var i = 0; i < count; i++) {\r\n        result += s;\r\n    }\r\n    return result;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nvar MAXIMUM_RUN_TIME = 5000; // 5 seconds\r\nvar MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\r\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\r\n    var diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\r\n    return diffAlgo.ComputeDiff(pretty);\r\n}\r\nvar LineMarkerSequence = /** @class */ (function () {\r\n    function LineMarkerSequence(lines) {\r\n        var startColumns = [];\r\n        var endColumns = [];\r\n        for (var i = 0, length_1 = lines.length; i < length_1; i++) {\r\n            startColumns[i] = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\r\n            endColumns[i] = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\r\n        }\r\n        this._lines = lines;\r\n        this._startColumns = startColumns;\r\n        this._endColumns = endColumns;\r\n    }\r\n    LineMarkerSequence.prototype.getLength = function () {\r\n        return this._lines.length;\r\n    };\r\n    LineMarkerSequence.prototype.getElementAtIndex = function (i) {\r\n        return this._lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\r\n    };\r\n    LineMarkerSequence.prototype.getStartLineNumber = function (i) {\r\n        return i + 1;\r\n    };\r\n    LineMarkerSequence.prototype.getEndLineNumber = function (i) {\r\n        return i + 1;\r\n    };\r\n    LineMarkerSequence._getFirstNonBlankColumn = function (txt, defaultValue) {\r\n        var r = strings.firstNonWhitespaceIndex(txt);\r\n        if (r === -1) {\r\n            return defaultValue;\r\n        }\r\n        return r + 1;\r\n    };\r\n    LineMarkerSequence._getLastNonBlankColumn = function (txt, defaultValue) {\r\n        var r = strings.lastNonWhitespaceIndex(txt);\r\n        if (r === -1) {\r\n            return defaultValue;\r\n        }\r\n        return r + 2;\r\n    };\r\n    LineMarkerSequence.prototype.getCharSequence = function (shouldIgnoreTrimWhitespace, startIndex, endIndex) {\r\n        var charCodes = [];\r\n        var lineNumbers = [];\r\n        var columns = [];\r\n        var len = 0;\r\n        for (var index = startIndex; index <= endIndex; index++) {\r\n            var lineContent = this._lines[index];\r\n            var startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\r\n            var endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\r\n            for (var col = startColumn; col < endColumn; col++) {\r\n                charCodes[len] = lineContent.charCodeAt(col - 1);\r\n                lineNumbers[len] = index + 1;\r\n                columns[len] = col;\r\n                len++;\r\n            }\r\n        }\r\n        return new CharSequence(charCodes, lineNumbers, columns);\r\n    };\r\n    return LineMarkerSequence;\r\n}());\r\nvar CharSequence = /** @class */ (function () {\r\n    function CharSequence(charCodes, lineNumbers, columns) {\r\n        this._charCodes = charCodes;\r\n        this._lineNumbers = lineNumbers;\r\n        this._columns = columns;\r\n    }\r\n    CharSequence.prototype.getLength = function () {\r\n        return this._charCodes.length;\r\n    };\r\n    CharSequence.prototype.getElementAtIndex = function (i) {\r\n        return this._charCodes[i];\r\n    };\r\n    CharSequence.prototype.getStartLineNumber = function (i) {\r\n        return this._lineNumbers[i];\r\n    };\r\n    CharSequence.prototype.getStartColumn = function (i) {\r\n        return this._columns[i];\r\n    };\r\n    CharSequence.prototype.getEndLineNumber = function (i) {\r\n        return this._lineNumbers[i];\r\n    };\r\n    CharSequence.prototype.getEndColumn = function (i) {\r\n        return this._columns[i] + 1;\r\n    };\r\n    return CharSequence;\r\n}());\r\nvar CharChange = /** @class */ (function () {\r\n    function CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\r\n        this.originalStartLineNumber = originalStartLineNumber;\r\n        this.originalStartColumn = originalStartColumn;\r\n        this.originalEndLineNumber = originalEndLineNumber;\r\n        this.originalEndColumn = originalEndColumn;\r\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\r\n        this.modifiedStartColumn = modifiedStartColumn;\r\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\r\n        this.modifiedEndColumn = modifiedEndColumn;\r\n    }\r\n    CharChange.createFromDiffChange = function (diffChange, originalCharSequence, modifiedCharSequence) {\r\n        var originalStartLineNumber;\r\n        var originalStartColumn;\r\n        var originalEndLineNumber;\r\n        var originalEndColumn;\r\n        var modifiedStartLineNumber;\r\n        var modifiedStartColumn;\r\n        var modifiedEndLineNumber;\r\n        var modifiedEndColumn;\r\n        if (diffChange.originalLength === 0) {\r\n            originalStartLineNumber = 0;\r\n            originalStartColumn = 0;\r\n            originalEndLineNumber = 0;\r\n            originalEndColumn = 0;\r\n        }\r\n        else {\r\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\r\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\r\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\r\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\r\n        }\r\n        if (diffChange.modifiedLength === 0) {\r\n            modifiedStartLineNumber = 0;\r\n            modifiedStartColumn = 0;\r\n            modifiedEndLineNumber = 0;\r\n            modifiedEndColumn = 0;\r\n        }\r\n        else {\r\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\r\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\r\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n        }\r\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\r\n    };\r\n    return CharChange;\r\n}());\r\nfunction postProcessCharChanges(rawChanges) {\r\n    if (rawChanges.length <= 1) {\r\n        return rawChanges;\r\n    }\r\n    var result = [rawChanges[0]];\r\n    var prevChange = result[0];\r\n    for (var i = 1, len = rawChanges.length; i < len; i++) {\r\n        var currChange = rawChanges[i];\r\n        var originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\r\n        var modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\r\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\r\n        var matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\r\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\r\n            // Merge the current change into the previous one\r\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\r\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\r\n        }\r\n        else {\r\n            // Add the current change\r\n            result.push(currChange);\r\n            prevChange = currChange;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nvar LineChange = /** @class */ (function () {\r\n    function LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\r\n        this.originalStartLineNumber = originalStartLineNumber;\r\n        this.originalEndLineNumber = originalEndLineNumber;\r\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\r\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\r\n        this.charChanges = charChanges;\r\n    }\r\n    LineChange.createFromDiffResult = function (shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueProcessingPredicate, shouldComputeCharChanges, shouldPostProcessCharChanges) {\r\n        var originalStartLineNumber;\r\n        var originalEndLineNumber;\r\n        var modifiedStartLineNumber;\r\n        var modifiedEndLineNumber;\r\n        var charChanges = undefined;\r\n        if (diffChange.originalLength === 0) {\r\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\r\n            originalEndLineNumber = 0;\r\n        }\r\n        else {\r\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\r\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\r\n        }\r\n        if (diffChange.modifiedLength === 0) {\r\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\r\n            modifiedEndLineNumber = 0;\r\n        }\r\n        else {\r\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\r\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n        }\r\n        if (shouldComputeCharChanges && diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\r\n            var originalCharSequence = originalLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\r\n            var modifiedCharSequence = modifiedLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n            var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\r\n            if (shouldPostProcessCharChanges) {\r\n                rawChanges = postProcessCharChanges(rawChanges);\r\n            }\r\n            charChanges = [];\r\n            for (var i = 0, length_2 = rawChanges.length; i < length_2; i++) {\r\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\r\n            }\r\n        }\r\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\r\n    };\r\n    return LineChange;\r\n}());\r\nvar DiffComputer = /** @class */ (function () {\r\n    function DiffComputer(originalLines, modifiedLines, opts) {\r\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\r\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\r\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\r\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\r\n        this.maximumRunTimeMs = MAXIMUM_RUN_TIME;\r\n        this.originalLines = originalLines;\r\n        this.modifiedLines = modifiedLines;\r\n        this.original = new LineMarkerSequence(originalLines);\r\n        this.modified = new LineMarkerSequence(modifiedLines);\r\n    }\r\n    DiffComputer.prototype.computeDiff = function () {\r\n        if (this.original.getLength() === 1 && this.original.getElementAtIndex(0).length === 0) {\r\n            // empty original => fast path\r\n            return [{\r\n                    originalStartLineNumber: 1,\r\n                    originalEndLineNumber: 1,\r\n                    modifiedStartLineNumber: 1,\r\n                    modifiedEndLineNumber: this.modified.getLength(),\r\n                    charChanges: [{\r\n                            modifiedEndColumn: 0,\r\n                            modifiedEndLineNumber: 0,\r\n                            modifiedStartColumn: 0,\r\n                            modifiedStartLineNumber: 0,\r\n                            originalEndColumn: 0,\r\n                            originalEndLineNumber: 0,\r\n                            originalStartColumn: 0,\r\n                            originalStartLineNumber: 0\r\n                        }]\r\n                }];\r\n        }\r\n        if (this.modified.getLength() === 1 && this.modified.getElementAtIndex(0).length === 0) {\r\n            // empty modified => fast path\r\n            return [{\r\n                    originalStartLineNumber: 1,\r\n                    originalEndLineNumber: this.original.getLength(),\r\n                    modifiedStartLineNumber: 1,\r\n                    modifiedEndLineNumber: 1,\r\n                    charChanges: [{\r\n                            modifiedEndColumn: 0,\r\n                            modifiedEndLineNumber: 0,\r\n                            modifiedStartColumn: 0,\r\n                            modifiedStartLineNumber: 0,\r\n                            originalEndColumn: 0,\r\n                            originalEndLineNumber: 0,\r\n                            originalStartColumn: 0,\r\n                            originalStartLineNumber: 0\r\n                        }]\r\n                }];\r\n        }\r\n        this.computationStartTime = (new Date()).getTime();\r\n        var rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\r\n        // The diff is always computed with ignoring trim whitespace\r\n        // This ensures we get the prettiest diff\r\n        if (this.shouldIgnoreTrimWhitespace) {\r\n            var lineChanges = [];\r\n            for (var i = 0, length_3 = rawChanges.length; i < length_3; i++) {\r\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\r\n            }\r\n            return lineChanges;\r\n        }\r\n        // Need to post-process and introduce changes where the trim whitespace is different\r\n        // Note that we are looping starting at -1 to also cover the lines before the first change\r\n        var result = [];\r\n        var originalLineIndex = 0;\r\n        var modifiedLineIndex = 0;\r\n        for (var i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\r\n            var nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\r\n            var originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\r\n            var modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\r\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\r\n                var originalLine = this.originalLines[originalLineIndex];\r\n                var modifiedLine = this.modifiedLines[modifiedLineIndex];\r\n                if (originalLine !== modifiedLine) {\r\n                    // These lines differ only in trim whitespace\r\n                    // Check the leading whitespace\r\n                    {\r\n                        var originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\r\n                        var modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\r\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\r\n                            var originalChar = originalLine.charCodeAt(originalStartColumn - 2);\r\n                            var modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\r\n                            if (originalChar !== modifiedChar) {\r\n                                break;\r\n                            }\r\n                            originalStartColumn--;\r\n                            modifiedStartColumn--;\r\n                        }\r\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\r\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\r\n                        }\r\n                    }\r\n                    // Check the trailing whitespace\r\n                    {\r\n                        var originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\r\n                        var modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\r\n                        var originalMaxColumn = originalLine.length + 1;\r\n                        var modifiedMaxColumn = modifiedLine.length + 1;\r\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\r\n                            var originalChar = originalLine.charCodeAt(originalEndColumn - 1);\r\n                            var modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\r\n                            if (originalChar !== modifiedChar) {\r\n                                break;\r\n                            }\r\n                            originalEndColumn++;\r\n                            modifiedEndColumn++;\r\n                        }\r\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\r\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\r\n                        }\r\n                    }\r\n                }\r\n                originalLineIndex++;\r\n                modifiedLineIndex++;\r\n            }\r\n            if (nextChange) {\r\n                // Emit the actual change\r\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\r\n                originalLineIndex += nextChange.originalLength;\r\n                modifiedLineIndex += nextChange.modifiedLength;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    DiffComputer.prototype._pushTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\r\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\r\n            // Merged into previous\r\n            return;\r\n        }\r\n        var charChanges = undefined;\r\n        if (this.shouldComputeCharChanges) {\r\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\r\n        }\r\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\r\n    };\r\n    DiffComputer.prototype._mergeTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\r\n        var len = result.length;\r\n        if (len === 0) {\r\n            return false;\r\n        }\r\n        var prevChange = result[len - 1];\r\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\r\n            // Don't merge with inserts/deletes\r\n            return false;\r\n        }\r\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\r\n            prevChange.originalEndLineNumber = originalLineNumber;\r\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\r\n            if (this.shouldComputeCharChanges) {\r\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    DiffComputer.prototype._continueProcessingPredicate = function () {\r\n        if (this.maximumRunTimeMs === 0) {\r\n            return true;\r\n        }\r\n        var now = (new Date()).getTime();\r\n        return now - this.computationStartTime < this.maximumRunTimeMs;\r\n    };\r\n    return DiffComputer;\r\n}());\r\nexport { DiffComputer };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar Uint8Matrix = /** @class */ (function () {\r\n    function Uint8Matrix(rows, cols, defaultValue) {\r\n        var data = new Uint8Array(rows * cols);\r\n        for (var i = 0, len = rows * cols; i < len; i++) {\r\n            data[i] = defaultValue;\r\n        }\r\n        this._data = data;\r\n        this.rows = rows;\r\n        this.cols = cols;\r\n    }\r\n    Uint8Matrix.prototype.get = function (row, col) {\r\n        return this._data[row * this.cols + col];\r\n    };\r\n    Uint8Matrix.prototype.set = function (row, col, value) {\r\n        this._data[row * this.cols + col] = value;\r\n    };\r\n    return Uint8Matrix;\r\n}());\r\nexport { Uint8Matrix };\r\nexport function toUint8(v) {\r\n    if (v < 0) {\r\n        return 0;\r\n    }\r\n    if (v > 255 /* MAX_UINT_8 */) {\r\n        return 255 /* MAX_UINT_8 */;\r\n    }\r\n    return v | 0;\r\n}\r\nexport function toUint32(v) {\r\n    if (v < 0) {\r\n        return 0;\r\n    }\r\n    if (v > 4294967295 /* MAX_UINT_32 */) {\r\n        return 4294967295 /* MAX_UINT_32 */;\r\n    }\r\n    return v | 0;\r\n}\r\nexport function toUint32Array(arr) {\r\n    var len = arr.length;\r\n    var r = new Uint32Array(len);\r\n    for (var i = 0; i < len; i++) {\r\n        r[i] = toUint32(arr[i]);\r\n    }\r\n    return r;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { toUint32 } from '../core/uint.js';\r\nvar PrefixSumIndexOfResult = /** @class */ (function () {\r\n    function PrefixSumIndexOfResult(index, remainder) {\r\n        this.index = index;\r\n        this.remainder = remainder;\r\n    }\r\n    return PrefixSumIndexOfResult;\r\n}());\r\nexport { PrefixSumIndexOfResult };\r\nvar PrefixSumComputer = /** @class */ (function () {\r\n    function PrefixSumComputer(values) {\r\n        this.values = values;\r\n        this.prefixSum = new Uint32Array(values.length);\r\n        this.prefixSumValidIndex = new Int32Array(1);\r\n        this.prefixSumValidIndex[0] = -1;\r\n    }\r\n    PrefixSumComputer.prototype.getCount = function () {\r\n        return this.values.length;\r\n    };\r\n    PrefixSumComputer.prototype.insertValues = function (insertIndex, insertValues) {\r\n        insertIndex = toUint32(insertIndex);\r\n        var oldValues = this.values;\r\n        var oldPrefixSum = this.prefixSum;\r\n        var insertValuesLen = insertValues.length;\r\n        if (insertValuesLen === 0) {\r\n            return false;\r\n        }\r\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\r\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\r\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\r\n        this.values.set(insertValues, insertIndex);\r\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\r\n            this.prefixSumValidIndex[0] = insertIndex - 1;\r\n        }\r\n        this.prefixSum = new Uint32Array(this.values.length);\r\n        if (this.prefixSumValidIndex[0] >= 0) {\r\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\r\n        }\r\n        return true;\r\n    };\r\n    PrefixSumComputer.prototype.changeValue = function (index, value) {\r\n        index = toUint32(index);\r\n        value = toUint32(value);\r\n        if (this.values[index] === value) {\r\n            return false;\r\n        }\r\n        this.values[index] = value;\r\n        if (index - 1 < this.prefixSumValidIndex[0]) {\r\n            this.prefixSumValidIndex[0] = index - 1;\r\n        }\r\n        return true;\r\n    };\r\n    PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\r\n        startIndex = toUint32(startIndex);\r\n        cnt = toUint32(cnt);\r\n        var oldValues = this.values;\r\n        var oldPrefixSum = this.prefixSum;\r\n        if (startIndex >= oldValues.length) {\r\n            return false;\r\n        }\r\n        var maxCnt = oldValues.length - startIndex;\r\n        if (cnt >= maxCnt) {\r\n            cnt = maxCnt;\r\n        }\r\n        if (cnt === 0) {\r\n            return false;\r\n        }\r\n        this.values = new Uint32Array(oldValues.length - cnt);\r\n        this.values.set(oldValues.subarray(0, startIndex), 0);\r\n        this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\r\n        this.prefixSum = new Uint32Array(this.values.length);\r\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\r\n            this.prefixSumValidIndex[0] = startIndex - 1;\r\n        }\r\n        if (this.prefixSumValidIndex[0] >= 0) {\r\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\r\n        }\r\n        return true;\r\n    };\r\n    PrefixSumComputer.prototype.getTotalValue = function () {\r\n        if (this.values.length === 0) {\r\n            return 0;\r\n        }\r\n        return this._getAccumulatedValue(this.values.length - 1);\r\n    };\r\n    PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\r\n        if (index < 0) {\r\n            return 0;\r\n        }\r\n        index = toUint32(index);\r\n        return this._getAccumulatedValue(index);\r\n    };\r\n    PrefixSumComputer.prototype._getAccumulatedValue = function (index) {\r\n        if (index <= this.prefixSumValidIndex[0]) {\r\n            return this.prefixSum[index];\r\n        }\r\n        var startIndex = this.prefixSumValidIndex[0] + 1;\r\n        if (startIndex === 0) {\r\n            this.prefixSum[0] = this.values[0];\r\n            startIndex++;\r\n        }\r\n        if (index >= this.values.length) {\r\n            index = this.values.length - 1;\r\n        }\r\n        for (var i = startIndex; i <= index; i++) {\r\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\r\n        }\r\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\r\n        return this.prefixSum[index];\r\n    };\r\n    PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\r\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\r\n        // Compute all sums (to get a fully valid prefixSum)\r\n        this.getTotalValue();\r\n        var low = 0;\r\n        var high = this.values.length - 1;\r\n        var mid = 0;\r\n        var midStop = 0;\r\n        var midStart = 0;\r\n        while (low <= high) {\r\n            mid = low + ((high - low) / 2) | 0;\r\n            midStop = this.prefixSum[mid];\r\n            midStart = midStop - this.values[mid];\r\n            if (accumulatedValue < midStart) {\r\n                high = mid - 1;\r\n            }\r\n            else if (accumulatedValue >= midStop) {\r\n                low = mid + 1;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\r\n    };\r\n    return PrefixSumComputer;\r\n}());\r\nexport { PrefixSumComputer };\r\nvar PrefixSumComputerWithCache = /** @class */ (function () {\r\n    function PrefixSumComputerWithCache(values) {\r\n        this._cacheAccumulatedValueStart = 0;\r\n        this._cache = null;\r\n        this._actual = new PrefixSumComputer(values);\r\n        this._bustCache();\r\n    }\r\n    PrefixSumComputerWithCache.prototype._bustCache = function () {\r\n        this._cacheAccumulatedValueStart = 0;\r\n        this._cache = null;\r\n    };\r\n    PrefixSumComputerWithCache.prototype.insertValues = function (insertIndex, insertValues) {\r\n        if (this._actual.insertValues(insertIndex, insertValues)) {\r\n            this._bustCache();\r\n        }\r\n    };\r\n    PrefixSumComputerWithCache.prototype.changeValue = function (index, value) {\r\n        if (this._actual.changeValue(index, value)) {\r\n            this._bustCache();\r\n        }\r\n    };\r\n    PrefixSumComputerWithCache.prototype.removeValues = function (startIndex, cnt) {\r\n        if (this._actual.removeValues(startIndex, cnt)) {\r\n            this._bustCache();\r\n        }\r\n    };\r\n    PrefixSumComputerWithCache.prototype.getTotalValue = function () {\r\n        return this._actual.getTotalValue();\r\n    };\r\n    PrefixSumComputerWithCache.prototype.getAccumulatedValue = function (index) {\r\n        return this._actual.getAccumulatedValue(index);\r\n    };\r\n    PrefixSumComputerWithCache.prototype.getIndexOf = function (accumulatedValue) {\r\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\r\n        if (this._cache !== null) {\r\n            var cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\r\n            if (cacheIndex >= 0 && cacheIndex < this._cache.length) {\r\n                // Cache hit!\r\n                return this._cache[cacheIndex];\r\n            }\r\n        }\r\n        // Cache miss!\r\n        return this._actual.getIndexOf(accumulatedValue);\r\n    };\r\n    /**\r\n     * Gives a hint that a lot of requests are about to come in for these accumulated values.\r\n     */\r\n    PrefixSumComputerWithCache.prototype.warmUpCache = function (accumulatedValueStart, accumulatedValueEnd) {\r\n        var newCache = [];\r\n        for (var accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\r\n            newCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\r\n        }\r\n        this._cache = newCache;\r\n        this._cacheAccumulatedValueStart = accumulatedValueStart;\r\n    };\r\n    return PrefixSumComputerWithCache;\r\n}());\r\nexport { PrefixSumComputerWithCache };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Position } from '../core/position.js';\r\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\r\nvar MirrorTextModel = /** @class */ (function () {\r\n    function MirrorTextModel(uri, lines, eol, versionId) {\r\n        this._uri = uri;\r\n        this._lines = lines;\r\n        this._eol = eol;\r\n        this._versionId = versionId;\r\n        this._lineStarts = null;\r\n    }\r\n    MirrorTextModel.prototype.dispose = function () {\r\n        this._lines.length = 0;\r\n    };\r\n    MirrorTextModel.prototype.getText = function () {\r\n        return this._lines.join(this._eol);\r\n    };\r\n    MirrorTextModel.prototype.onEvents = function (e) {\r\n        if (e.eol && e.eol !== this._eol) {\r\n            this._eol = e.eol;\r\n            this._lineStarts = null;\r\n        }\r\n        // Update my lines\r\n        var changes = e.changes;\r\n        for (var i = 0, len = changes.length; i < len; i++) {\r\n            var change = changes[i];\r\n            this._acceptDeleteRange(change.range);\r\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\r\n        }\r\n        this._versionId = e.versionId;\r\n    };\r\n    MirrorTextModel.prototype._ensureLineStarts = function () {\r\n        if (!this._lineStarts) {\r\n            var eolLength = this._eol.length;\r\n            var linesLength = this._lines.length;\r\n            var lineStartValues = new Uint32Array(linesLength);\r\n            for (var i = 0; i < linesLength; i++) {\r\n                lineStartValues[i] = this._lines[i].length + eolLength;\r\n            }\r\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\r\n        }\r\n    };\r\n    /**\r\n     * All changes to a line's text go through this method\r\n     */\r\n    MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\r\n        this._lines[lineIndex] = newValue;\r\n        if (this._lineStarts) {\r\n            // update prefix sum\r\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\r\n        }\r\n    };\r\n    MirrorTextModel.prototype._acceptDeleteRange = function (range) {\r\n        if (range.startLineNumber === range.endLineNumber) {\r\n            if (range.startColumn === range.endColumn) {\r\n                // Nothing to delete\r\n                return;\r\n            }\r\n            // Delete text on the affected line\r\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\r\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\r\n            return;\r\n        }\r\n        // Take remaining text on last line and append it to remaining text on first line\r\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\r\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\r\n        // Delete middle lines\r\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n        if (this._lineStarts) {\r\n            // update prefix sum\r\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n        }\r\n    };\r\n    MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\r\n        if (insertText.length === 0) {\r\n            // Nothing to insert\r\n            return;\r\n        }\r\n        var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\r\n        if (insertLines.length === 1) {\r\n            // Inserting text on one line\r\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\r\n                + insertLines[0]\r\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\r\n            return;\r\n        }\r\n        // Append overflowing text from first line to the end of text to insert\r\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\r\n        // Delete overflowing text from first line and insert text on first line\r\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\r\n            + insertLines[0]);\r\n        // Insert new lines & store lengths\r\n        var newLengths = new Uint32Array(insertLines.length - 1);\r\n        for (var i = 1; i < insertLines.length; i++) {\r\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\r\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\r\n        }\r\n        if (this._lineStarts) {\r\n            // update prefix sum\r\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\r\n        }\r\n    };\r\n    return MirrorTextModel;\r\n}());\r\nexport { MirrorTextModel };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\r\n/**\r\n * Create a word definition regular expression based on default word separators.\r\n * Optionally provide allowed separators that should be included in words.\r\n *\r\n * The default would look like this:\r\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\r\n */\r\nfunction createWordRegExp(allowInWords) {\r\n    if (allowInWords === void 0) { allowInWords = ''; }\r\n    var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\r\n    for (var i = 0; i < USUAL_WORD_SEPARATORS.length; i++) {\r\n        if (allowInWords.indexOf(USUAL_WORD_SEPARATORS[i]) >= 0) {\r\n            continue;\r\n        }\r\n        source += '\\\\' + USUAL_WORD_SEPARATORS[i];\r\n    }\r\n    source += '\\\\s]+)';\r\n    return new RegExp(source, 'g');\r\n}\r\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\r\nexport var DEFAULT_WORD_REGEXP = createWordRegExp();\r\nexport function ensureValidWordDefinition(wordDefinition) {\r\n    var result = DEFAULT_WORD_REGEXP;\r\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\r\n        if (!wordDefinition.global) {\r\n            var flags = 'g';\r\n            if (wordDefinition.ignoreCase) {\r\n                flags += 'i';\r\n            }\r\n            if (wordDefinition.multiline) {\r\n                flags += 'm';\r\n            }\r\n            result = new RegExp(wordDefinition.source, flags);\r\n        }\r\n        else {\r\n            result = wordDefinition;\r\n        }\r\n    }\r\n    result.lastIndex = 0;\r\n    return result;\r\n}\r\nfunction getWordAtPosFast(column, wordDefinition, text, textOffset) {\r\n    // find whitespace enclosed text around column and match from there\r\n    var pos = column - 1 - textOffset;\r\n    var start = text.lastIndexOf(' ', pos - 1) + 1;\r\n    var end = text.indexOf(' ', pos);\r\n    if (end === -1) {\r\n        end = text.length;\r\n    }\r\n    wordDefinition.lastIndex = start;\r\n    var match;\r\n    while (match = wordDefinition.exec(text)) {\r\n        var matchIndex = match.index || 0;\r\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\r\n            return {\r\n                word: match[0],\r\n                startColumn: textOffset + 1 + matchIndex,\r\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction getWordAtPosSlow(column, wordDefinition, text, textOffset) {\r\n    // matches all words starting at the beginning\r\n    // of the input until it finds a match that encloses\r\n    // the desired column. slow but correct\r\n    var pos = column - 1 - textOffset;\r\n    wordDefinition.lastIndex = 0;\r\n    var match;\r\n    while (match = wordDefinition.exec(text)) {\r\n        var matchIndex = match.index || 0;\r\n        if (matchIndex > pos) {\r\n            // |nW -> matched only after the pos\r\n            return null;\r\n        }\r\n        else if (wordDefinition.lastIndex >= pos) {\r\n            // W|W -> match encloses pos\r\n            return {\r\n                word: match[0],\r\n                startColumn: textOffset + 1 + matchIndex,\r\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function getWordAtText(column, wordDefinition, text, textOffset) {\r\n    // if `words` can contain whitespace character we have to use the slow variant\r\n    // otherwise we use the fast variant of finding a word\r\n    wordDefinition.lastIndex = 0;\r\n    var match = wordDefinition.exec(text);\r\n    if (!match) {\r\n        return null;\r\n    }\r\n    // todo@joh the `match` could already be the (first) word\r\n    var ret = match[0].indexOf(' ') >= 0\r\n        // did match a word which contains a space character -> use slow word find\r\n        ? getWordAtPosSlow(column, wordDefinition, text, textOffset)\r\n        // sane word definition -> use fast word find\r\n        : getWordAtPosFast(column, wordDefinition, text, textOffset);\r\n    // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\r\n    // in an undefined state and to not confuse other users of the wordDefinition\r\n    // we reset the lastIndex\r\n    wordDefinition.lastIndex = 0;\r\n    return ret;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { toUint8 } from './uint.js';\r\n/**\r\n * A fast character classifier that uses a compact array for ASCII values.\r\n */\r\nvar CharacterClassifier = /** @class */ (function () {\r\n    function CharacterClassifier(_defaultValue) {\r\n        var defaultValue = toUint8(_defaultValue);\r\n        this._defaultValue = defaultValue;\r\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\r\n        this._map = new Map();\r\n    }\r\n    CharacterClassifier._createAsciiMap = function (defaultValue) {\r\n        var asciiMap = new Uint8Array(256);\r\n        for (var i = 0; i < 256; i++) {\r\n            asciiMap[i] = defaultValue;\r\n        }\r\n        return asciiMap;\r\n    };\r\n    CharacterClassifier.prototype.set = function (charCode, _value) {\r\n        var value = toUint8(_value);\r\n        if (charCode >= 0 && charCode < 256) {\r\n            this._asciiMap[charCode] = value;\r\n        }\r\n        else {\r\n            this._map.set(charCode, value);\r\n        }\r\n    };\r\n    CharacterClassifier.prototype.get = function (charCode) {\r\n        if (charCode >= 0 && charCode < 256) {\r\n            return this._asciiMap[charCode];\r\n        }\r\n        else {\r\n            return (this._map.get(charCode) || this._defaultValue);\r\n        }\r\n    };\r\n    return CharacterClassifier;\r\n}());\r\nexport { CharacterClassifier };\r\nvar CharacterSet = /** @class */ (function () {\r\n    function CharacterSet() {\r\n        this._actual = new CharacterClassifier(0 /* False */);\r\n    }\r\n    CharacterSet.prototype.add = function (charCode) {\r\n        this._actual.set(charCode, 1 /* True */);\r\n    };\r\n    CharacterSet.prototype.has = function (charCode) {\r\n        return (this._actual.get(charCode) === 1 /* True */);\r\n    };\r\n    return CharacterSet;\r\n}());\r\nexport { CharacterSet };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { CharacterClassifier } from '../core/characterClassifier.js';\r\nimport { Uint8Matrix } from '../core/uint.js';\r\nvar StateMachine = /** @class */ (function () {\r\n    function StateMachine(edges) {\r\n        var maxCharCode = 0;\r\n        var maxState = 0 /* Invalid */;\r\n        for (var i = 0, len = edges.length; i < len; i++) {\r\n            var _a = edges[i], from = _a[0], chCode = _a[1], to = _a[2];\r\n            if (chCode > maxCharCode) {\r\n                maxCharCode = chCode;\r\n            }\r\n            if (from > maxState) {\r\n                maxState = from;\r\n            }\r\n            if (to > maxState) {\r\n                maxState = to;\r\n            }\r\n        }\r\n        maxCharCode++;\r\n        maxState++;\r\n        var states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\r\n        for (var i = 0, len = edges.length; i < len; i++) {\r\n            var _b = edges[i], from = _b[0], chCode = _b[1], to = _b[2];\r\n            states.set(from, chCode, to);\r\n        }\r\n        this._states = states;\r\n        this._maxCharCode = maxCharCode;\r\n    }\r\n    StateMachine.prototype.nextState = function (currentState, chCode) {\r\n        if (chCode < 0 || chCode >= this._maxCharCode) {\r\n            return 0 /* Invalid */;\r\n        }\r\n        return this._states.get(currentState, chCode);\r\n    };\r\n    return StateMachine;\r\n}());\r\n// State machine for http:// or https:// or file://\r\nvar _stateMachine = null;\r\nfunction getStateMachine() {\r\n    if (_stateMachine === null) {\r\n        _stateMachine = new StateMachine([\r\n            [1 /* Start */, 104 /* h */, 2 /* H */],\r\n            [1 /* Start */, 72 /* H */, 2 /* H */],\r\n            [1 /* Start */, 102 /* f */, 6 /* F */],\r\n            [1 /* Start */, 70 /* F */, 6 /* F */],\r\n            [2 /* H */, 116 /* t */, 3 /* HT */],\r\n            [2 /* H */, 84 /* T */, 3 /* HT */],\r\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\r\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\r\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\r\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\r\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\r\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\r\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\r\n            [6 /* F */, 105 /* i */, 7 /* FI */],\r\n            [6 /* F */, 73 /* I */, 7 /* FI */],\r\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\r\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\r\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\r\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\r\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\r\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\r\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\r\n        ]);\r\n    }\r\n    return _stateMachine;\r\n}\r\nvar _classifier = null;\r\nfunction getClassifier() {\r\n    if (_classifier === null) {\r\n        _classifier = new CharacterClassifier(0 /* None */);\r\n        var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\r\n        for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\r\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\r\n        }\r\n        var CANNOT_END_WITH_CHARACTERS = '.,;';\r\n        for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\r\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\r\n        }\r\n    }\r\n    return _classifier;\r\n}\r\nvar LinkComputer = /** @class */ (function () {\r\n    function LinkComputer() {\r\n    }\r\n    LinkComputer._createLink = function (classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\r\n        // Do not allow to end link in certain characters...\r\n        var lastIncludedCharIndex = linkEndIndex - 1;\r\n        do {\r\n            var chCode = line.charCodeAt(lastIncludedCharIndex);\r\n            var chClass = classifier.get(chCode);\r\n            if (chClass !== 2 /* CannotEndIn */) {\r\n                break;\r\n            }\r\n            lastIncludedCharIndex--;\r\n        } while (lastIncludedCharIndex > linkBeginIndex);\r\n        // Handle links enclosed in parens, square brackets and curlys.\r\n        if (linkBeginIndex > 0) {\r\n            var charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\r\n            var lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\r\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\r\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\r\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\r\n                // Do not end in ) if ( is before the link start\r\n                // Do not end in ] if [ is before the link start\r\n                // Do not end in } if { is before the link start\r\n                lastIncludedCharIndex--;\r\n            }\r\n        }\r\n        return {\r\n            range: {\r\n                startLineNumber: lineNumber,\r\n                startColumn: linkBeginIndex + 1,\r\n                endLineNumber: lineNumber,\r\n                endColumn: lastIncludedCharIndex + 2\r\n            },\r\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\r\n        };\r\n    };\r\n    LinkComputer.computeLinks = function (model) {\r\n        var stateMachine = getStateMachine();\r\n        var classifier = getClassifier();\r\n        var result = [];\r\n        for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\r\n            var line = model.getLineContent(i);\r\n            var len = line.length;\r\n            var j = 0;\r\n            var linkBeginIndex = 0;\r\n            var linkBeginChCode = 0;\r\n            var state = 1 /* Start */;\r\n            var hasOpenParens = false;\r\n            var hasOpenSquareBracket = false;\r\n            var hasOpenCurlyBracket = false;\r\n            while (j < len) {\r\n                var resetStateMachine = false;\r\n                var chCode = line.charCodeAt(j);\r\n                if (state === 13 /* Accept */) {\r\n                    var chClass = void 0;\r\n                    switch (chCode) {\r\n                        case 40 /* OpenParen */:\r\n                            hasOpenParens = true;\r\n                            chClass = 0 /* None */;\r\n                            break;\r\n                        case 41 /* CloseParen */:\r\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\r\n                            break;\r\n                        case 91 /* OpenSquareBracket */:\r\n                            hasOpenSquareBracket = true;\r\n                            chClass = 0 /* None */;\r\n                            break;\r\n                        case 93 /* CloseSquareBracket */:\r\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\r\n                            break;\r\n                        case 123 /* OpenCurlyBrace */:\r\n                            hasOpenCurlyBracket = true;\r\n                            chClass = 0 /* None */;\r\n                            break;\r\n                        case 125 /* CloseCurlyBrace */:\r\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\r\n                            break;\r\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\r\n                        case 39 /* SingleQuote */:\r\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\r\n                            break;\r\n                        case 34 /* DoubleQuote */:\r\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\r\n                            break;\r\n                        case 96 /* BackTick */:\r\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\r\n                            break;\r\n                        default:\r\n                            chClass = classifier.get(chCode);\r\n                    }\r\n                    // Check if character terminates link\r\n                    if (chClass === 1 /* ForceTermination */) {\r\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\r\n                        resetStateMachine = true;\r\n                    }\r\n                }\r\n                else if (state === 12 /* End */) {\r\n                    var chClass = classifier.get(chCode);\r\n                    // Check if character terminates link\r\n                    if (chClass === 1 /* ForceTermination */) {\r\n                        resetStateMachine = true;\r\n                    }\r\n                    else {\r\n                        state = 13 /* Accept */;\r\n                    }\r\n                }\r\n                else {\r\n                    state = stateMachine.nextState(state, chCode);\r\n                    if (state === 0 /* Invalid */) {\r\n                        resetStateMachine = true;\r\n                    }\r\n                }\r\n                if (resetStateMachine) {\r\n                    state = 1 /* Start */;\r\n                    hasOpenParens = false;\r\n                    hasOpenSquareBracket = false;\r\n                    hasOpenCurlyBracket = false;\r\n                    // Record where the link started\r\n                    linkBeginIndex = j + 1;\r\n                    linkBeginChCode = chCode;\r\n                }\r\n                j++;\r\n            }\r\n            if (state === 13 /* Accept */) {\r\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    return LinkComputer;\r\n}());\r\n/**\r\n * Returns an array of all links contains in the provided\r\n * document. *Note* that this operation is computational\r\n * expensive and should not run in the UI thread.\r\n */\r\nexport function computeLinks(model) {\r\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\r\n        // Unknown caller!\r\n        return [];\r\n    }\r\n    return LinkComputer.computeLinks(model);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar BasicInplaceReplace = /** @class */ (function () {\r\n    function BasicInplaceReplace() {\r\n        this._defaultValueSet = [\r\n            ['true', 'false'],\r\n            ['True', 'False'],\r\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\r\n            ['public', 'protected', 'private'],\r\n        ];\r\n    }\r\n    BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\r\n        if (range1 && text1) {\r\n            var result = this.doNavigateValueSet(text1, up);\r\n            if (result) {\r\n                return {\r\n                    range: range1,\r\n                    value: result\r\n                };\r\n            }\r\n        }\r\n        if (range2 && text2) {\r\n            var result = this.doNavigateValueSet(text2, up);\r\n            if (result) {\r\n                return {\r\n                    range: range2,\r\n                    value: result\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\r\n        var numberResult = this.numberReplace(text, up);\r\n        if (numberResult !== null) {\r\n            return numberResult;\r\n        }\r\n        return this.textReplace(text, up);\r\n    };\r\n    BasicInplaceReplace.prototype.numberReplace = function (value, up) {\r\n        var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\r\n        var n1 = Number(value);\r\n        var n2 = parseFloat(value);\r\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\r\n            if (n1 === 0 && !up) {\r\n                return null; // don't do negative\r\n                //\t\t\t} else if(n1 === 9 && up) {\r\n                //\t\t\t\treturn null; // don't insert 10 into a number\r\n            }\r\n            else {\r\n                n1 = Math.floor(n1 * precision);\r\n                n1 += up ? precision : -precision;\r\n                return String(n1 / precision);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    BasicInplaceReplace.prototype.textReplace = function (value, up) {\r\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\r\n    };\r\n    BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\r\n        var result = null;\r\n        for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\r\n            result = this.valueSetReplace(valueSets[i], value, up);\r\n        }\r\n        return result;\r\n    };\r\n    BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\r\n        var idx = valueSet.indexOf(value);\r\n        if (idx >= 0) {\r\n            idx += up ? +1 : -1;\r\n            if (idx < 0) {\r\n                idx = valueSet.length - 1;\r\n            }\r\n            else {\r\n                idx %= valueSet.length;\r\n            }\r\n            return valueSet[idx];\r\n        }\r\n        return null;\r\n    };\r\n    BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\r\n    return BasicInplaceReplace;\r\n}());\r\nexport { BasicInplaceReplace };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar KeyCodeStrMap = /** @class */ (function () {\r\n    function KeyCodeStrMap() {\r\n        this._keyCodeToStr = [];\r\n        this._strToKeyCode = Object.create(null);\r\n    }\r\n    KeyCodeStrMap.prototype.define = function (keyCode, str) {\r\n        this._keyCodeToStr[keyCode] = str;\r\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\r\n    };\r\n    KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {\r\n        return this._keyCodeToStr[keyCode];\r\n    };\r\n    KeyCodeStrMap.prototype.strToKeyCode = function (str) {\r\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\r\n    };\r\n    return KeyCodeStrMap;\r\n}());\r\nvar uiMap = new KeyCodeStrMap();\r\nvar userSettingsUSMap = new KeyCodeStrMap();\r\nvar userSettingsGeneralMap = new KeyCodeStrMap();\r\n(function () {\r\n    function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {\r\n        if (usUserSettingsLabel === void 0) { usUserSettingsLabel = uiLabel; }\r\n        if (generalUserSettingsLabel === void 0) { generalUserSettingsLabel = usUserSettingsLabel; }\r\n        uiMap.define(keyCode, uiLabel);\r\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\r\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\r\n    }\r\n    define(0 /* Unknown */, 'unknown');\r\n    define(1 /* Backspace */, 'Backspace');\r\n    define(2 /* Tab */, 'Tab');\r\n    define(3 /* Enter */, 'Enter');\r\n    define(4 /* Shift */, 'Shift');\r\n    define(5 /* Ctrl */, 'Ctrl');\r\n    define(6 /* Alt */, 'Alt');\r\n    define(7 /* PauseBreak */, 'PauseBreak');\r\n    define(8 /* CapsLock */, 'CapsLock');\r\n    define(9 /* Escape */, 'Escape');\r\n    define(10 /* Space */, 'Space');\r\n    define(11 /* PageUp */, 'PageUp');\r\n    define(12 /* PageDown */, 'PageDown');\r\n    define(13 /* End */, 'End');\r\n    define(14 /* Home */, 'Home');\r\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\r\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\r\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\r\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\r\n    define(19 /* Insert */, 'Insert');\r\n    define(20 /* Delete */, 'Delete');\r\n    define(21 /* KEY_0 */, '0');\r\n    define(22 /* KEY_1 */, '1');\r\n    define(23 /* KEY_2 */, '2');\r\n    define(24 /* KEY_3 */, '3');\r\n    define(25 /* KEY_4 */, '4');\r\n    define(26 /* KEY_5 */, '5');\r\n    define(27 /* KEY_6 */, '6');\r\n    define(28 /* KEY_7 */, '7');\r\n    define(29 /* KEY_8 */, '8');\r\n    define(30 /* KEY_9 */, '9');\r\n    define(31 /* KEY_A */, 'A');\r\n    define(32 /* KEY_B */, 'B');\r\n    define(33 /* KEY_C */, 'C');\r\n    define(34 /* KEY_D */, 'D');\r\n    define(35 /* KEY_E */, 'E');\r\n    define(36 /* KEY_F */, 'F');\r\n    define(37 /* KEY_G */, 'G');\r\n    define(38 /* KEY_H */, 'H');\r\n    define(39 /* KEY_I */, 'I');\r\n    define(40 /* KEY_J */, 'J');\r\n    define(41 /* KEY_K */, 'K');\r\n    define(42 /* KEY_L */, 'L');\r\n    define(43 /* KEY_M */, 'M');\r\n    define(44 /* KEY_N */, 'N');\r\n    define(45 /* KEY_O */, 'O');\r\n    define(46 /* KEY_P */, 'P');\r\n    define(47 /* KEY_Q */, 'Q');\r\n    define(48 /* KEY_R */, 'R');\r\n    define(49 /* KEY_S */, 'S');\r\n    define(50 /* KEY_T */, 'T');\r\n    define(51 /* KEY_U */, 'U');\r\n    define(52 /* KEY_V */, 'V');\r\n    define(53 /* KEY_W */, 'W');\r\n    define(54 /* KEY_X */, 'X');\r\n    define(55 /* KEY_Y */, 'Y');\r\n    define(56 /* KEY_Z */, 'Z');\r\n    define(57 /* Meta */, 'Meta');\r\n    define(58 /* ContextMenu */, 'ContextMenu');\r\n    define(59 /* F1 */, 'F1');\r\n    define(60 /* F2 */, 'F2');\r\n    define(61 /* F3 */, 'F3');\r\n    define(62 /* F4 */, 'F4');\r\n    define(63 /* F5 */, 'F5');\r\n    define(64 /* F6 */, 'F6');\r\n    define(65 /* F7 */, 'F7');\r\n    define(66 /* F8 */, 'F8');\r\n    define(67 /* F9 */, 'F9');\r\n    define(68 /* F10 */, 'F10');\r\n    define(69 /* F11 */, 'F11');\r\n    define(70 /* F12 */, 'F12');\r\n    define(71 /* F13 */, 'F13');\r\n    define(72 /* F14 */, 'F14');\r\n    define(73 /* F15 */, 'F15');\r\n    define(74 /* F16 */, 'F16');\r\n    define(75 /* F17 */, 'F17');\r\n    define(76 /* F18 */, 'F18');\r\n    define(77 /* F19 */, 'F19');\r\n    define(78 /* NumLock */, 'NumLock');\r\n    define(79 /* ScrollLock */, 'ScrollLock');\r\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\r\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\r\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\r\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\r\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\r\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\r\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\r\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\r\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\r\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\r\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\r\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\r\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\r\n    define(91 /* OEM_8 */, 'OEM_8');\r\n    define(92 /* OEM_102 */, 'OEM_102');\r\n    define(93 /* NUMPAD_0 */, 'NumPad0');\r\n    define(94 /* NUMPAD_1 */, 'NumPad1');\r\n    define(95 /* NUMPAD_2 */, 'NumPad2');\r\n    define(96 /* NUMPAD_3 */, 'NumPad3');\r\n    define(97 /* NUMPAD_4 */, 'NumPad4');\r\n    define(98 /* NUMPAD_5 */, 'NumPad5');\r\n    define(99 /* NUMPAD_6 */, 'NumPad6');\r\n    define(100 /* NUMPAD_7 */, 'NumPad7');\r\n    define(101 /* NUMPAD_8 */, 'NumPad8');\r\n    define(102 /* NUMPAD_9 */, 'NumPad9');\r\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\r\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\r\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\r\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\r\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\r\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\r\n})();\r\nexport var KeyCodeUtils;\r\n(function (KeyCodeUtils) {\r\n    function toString(keyCode) {\r\n        return uiMap.keyCodeToStr(keyCode);\r\n    }\r\n    KeyCodeUtils.toString = toString;\r\n    function fromString(key) {\r\n        return uiMap.strToKeyCode(key);\r\n    }\r\n    KeyCodeUtils.fromString = fromString;\r\n    function toUserSettingsUS(keyCode) {\r\n        return userSettingsUSMap.keyCodeToStr(keyCode);\r\n    }\r\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\r\n    function toUserSettingsGeneral(keyCode) {\r\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\r\n    }\r\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\r\n    function fromUserSettings(key) {\r\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\r\n    }\r\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\r\n})(KeyCodeUtils || (KeyCodeUtils = {}));\r\nexport function KeyChord(firstPart, secondPart) {\r\n    var chordPart = ((secondPart & 0x0000ffff) << 16) >>> 0;\r\n    return (firstPart | chordPart) >>> 0;\r\n}\r\nexport function createKeybinding(keybinding, OS) {\r\n    if (keybinding === 0) {\r\n        return null;\r\n    }\r\n    var firstPart = (keybinding & 0x0000ffff) >>> 0;\r\n    var chordPart = (keybinding & 0xffff0000) >>> 16;\r\n    if (chordPart !== 0) {\r\n        return new ChordKeybinding(createSimpleKeybinding(firstPart, OS), createSimpleKeybinding(chordPart, OS));\r\n    }\r\n    return createSimpleKeybinding(firstPart, OS);\r\n}\r\nexport function createSimpleKeybinding(keybinding, OS) {\r\n    var ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\r\n    var winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\r\n    var ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\r\n    var shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\r\n    var altKey = (keybinding & 512 /* Alt */ ? true : false);\r\n    var metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\r\n    var keyCode = (keybinding & 255 /* KeyCode */);\r\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\r\n}\r\nvar SimpleKeybinding = /** @class */ (function () {\r\n    function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\r\n        this.type = 1 /* Simple */;\r\n        this.ctrlKey = ctrlKey;\r\n        this.shiftKey = shiftKey;\r\n        this.altKey = altKey;\r\n        this.metaKey = metaKey;\r\n        this.keyCode = keyCode;\r\n    }\r\n    SimpleKeybinding.prototype.equals = function (other) {\r\n        if (other.type !== 1 /* Simple */) {\r\n            return false;\r\n        }\r\n        return (this.ctrlKey === other.ctrlKey\r\n            && this.shiftKey === other.shiftKey\r\n            && this.altKey === other.altKey\r\n            && this.metaKey === other.metaKey\r\n            && this.keyCode === other.keyCode);\r\n    };\r\n    SimpleKeybinding.prototype.isModifierKey = function () {\r\n        return (this.keyCode === 0 /* Unknown */\r\n            || this.keyCode === 5 /* Ctrl */\r\n            || this.keyCode === 57 /* Meta */\r\n            || this.keyCode === 6 /* Alt */\r\n            || this.keyCode === 4 /* Shift */);\r\n    };\r\n    /**\r\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\r\n     */\r\n    SimpleKeybinding.prototype.isDuplicateModifierCase = function () {\r\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\r\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\r\n            || (this.altKey && this.keyCode === 6 /* Alt */)\r\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\r\n    };\r\n    return SimpleKeybinding;\r\n}());\r\nexport { SimpleKeybinding };\r\nvar ChordKeybinding = /** @class */ (function () {\r\n    function ChordKeybinding(firstPart, chordPart) {\r\n        this.type = 2 /* Chord */;\r\n        this.firstPart = firstPart;\r\n        this.chordPart = chordPart;\r\n    }\r\n    return ChordKeybinding;\r\n}());\r\nexport { ChordKeybinding };\r\nvar ResolvedKeybindingPart = /** @class */ (function () {\r\n    function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\r\n        this.ctrlKey = ctrlKey;\r\n        this.shiftKey = shiftKey;\r\n        this.altKey = altKey;\r\n        this.metaKey = metaKey;\r\n        this.keyLabel = kbLabel;\r\n        this.keyAriaLabel = kbAriaLabel;\r\n    }\r\n    return ResolvedKeybindingPart;\r\n}());\r\nexport { ResolvedKeybindingPart };\r\n/**\r\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\r\n */\r\nvar ResolvedKeybinding = /** @class */ (function () {\r\n    function ResolvedKeybinding() {\r\n    }\r\n    return ResolvedKeybinding;\r\n}());\r\nexport { ResolvedKeybinding };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\r\nexport var MarkerTag;\r\n(function (MarkerTag) {\r\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\r\n})(MarkerTag || (MarkerTag = {}));\r\nexport var MarkerSeverity;\r\n(function (MarkerSeverity) {\r\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\r\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\r\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\r\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\r\n})(MarkerSeverity || (MarkerSeverity = {}));\r\n/**\r\n * Virtual Key Codes, the value does not hold any inherent meaning.\r\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\r\n * But these are \"more general\", as they should work across browsers & OS`s.\r\n */\r\nexport var KeyCode;\r\n(function (KeyCode) {\r\n    /**\r\n     * Placed first to cover the 0 value of the enum.\r\n     */\r\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\r\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\r\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\r\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\r\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\r\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\r\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\r\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\r\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\r\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\r\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\r\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\r\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\r\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\r\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\r\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\r\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\r\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\r\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\r\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\r\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\r\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\r\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\r\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\r\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\r\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\r\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\r\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\r\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\r\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\r\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\r\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\r\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\r\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\r\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\r\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\r\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\r\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\r\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\r\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\r\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\r\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\r\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\r\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\r\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\r\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\r\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\r\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\r\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\r\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\r\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\r\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\r\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\r\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\r\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\r\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\r\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\r\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\r\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\r\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\r\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\r\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\r\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\r\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\r\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\r\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\r\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\r\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\r\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\r\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\r\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\r\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\r\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\r\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\r\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\r\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\r\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\r\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\r\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\r\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the ';:' key\r\n     */\r\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\r\n    /**\r\n     * For any country/region, the '+' key\r\n     * For the US standard keyboard, the '=+' key\r\n     */\r\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\r\n    /**\r\n     * For any country/region, the ',' key\r\n     * For the US standard keyboard, the ',<' key\r\n     */\r\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\r\n    /**\r\n     * For any country/region, the '-' key\r\n     * For the US standard keyboard, the '-_' key\r\n     */\r\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\r\n    /**\r\n     * For any country/region, the '.' key\r\n     * For the US standard keyboard, the '.>' key\r\n     */\r\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '/?' key\r\n     */\r\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '`~' key\r\n     */\r\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '[{' key\r\n     */\r\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '\\|' key\r\n     */\r\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the ']}' key\r\n     */\r\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the ''\"' key\r\n     */\r\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     */\r\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\r\n    /**\r\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\r\n     */\r\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\r\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\r\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\r\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\r\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\r\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\r\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\r\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\r\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\r\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\r\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\r\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\r\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\r\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\r\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\r\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\r\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\r\n    /**\r\n     * Cover all key codes when IME is processing input.\r\n     */\r\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\r\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\r\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\r\n    /**\r\n     * Placed last to cover the length of the enum.\r\n     * Please do not depend on this value!\r\n     */\r\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\r\n})(KeyCode || (KeyCode = {}));\r\n/**\r\n * The direction of a selection.\r\n */\r\nexport var SelectionDirection;\r\n(function (SelectionDirection) {\r\n    /**\r\n     * The selection starts above where it ends.\r\n     */\r\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\r\n    /**\r\n     * The selection starts below where it ends.\r\n     */\r\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\r\n})(SelectionDirection || (SelectionDirection = {}));\r\nexport var ScrollbarVisibility;\r\n(function (ScrollbarVisibility) {\r\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\r\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\r\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\r\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\r\n/**\r\n * Vertical Lane in the overview ruler of the editor.\r\n */\r\nexport var OverviewRulerLane;\r\n(function (OverviewRulerLane) {\r\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\r\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\r\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\r\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\r\n})(OverviewRulerLane || (OverviewRulerLane = {}));\r\n/**\r\n * End of line character preference.\r\n */\r\nexport var EndOfLinePreference;\r\n(function (EndOfLinePreference) {\r\n    /**\r\n     * Use the end of line character identified in the text buffer.\r\n     */\r\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\r\n    /**\r\n     * Use line feed (\\n) as the end of line character.\r\n     */\r\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\r\n    /**\r\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n     */\r\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\r\n})(EndOfLinePreference || (EndOfLinePreference = {}));\r\n/**\r\n * The default end of line to use when instantiating models.\r\n */\r\nexport var DefaultEndOfLine;\r\n(function (DefaultEndOfLine) {\r\n    /**\r\n     * Use line feed (\\n) as the end of line character.\r\n     */\r\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\r\n    /**\r\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n     */\r\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\r\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\r\n/**\r\n * End of line character preference.\r\n */\r\nexport var EndOfLineSequence;\r\n(function (EndOfLineSequence) {\r\n    /**\r\n     * Use line feed (\\n) as the end of line character.\r\n     */\r\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\r\n    /**\r\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n     */\r\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\r\n})(EndOfLineSequence || (EndOfLineSequence = {}));\r\n/**\r\n * Describes the behavior of decorations when typing/editing near their edges.\r\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\r\n */\r\nexport var TrackedRangeStickiness;\r\n(function (TrackedRangeStickiness) {\r\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\r\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\r\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\r\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\r\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\r\nexport var ScrollType;\r\n(function (ScrollType) {\r\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\r\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\r\n})(ScrollType || (ScrollType = {}));\r\n/**\r\n * Describes the reason the cursor has changed its position.\r\n */\r\nexport var CursorChangeReason;\r\n(function (CursorChangeReason) {\r\n    /**\r\n     * Unknown or not set.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\r\n    /**\r\n     * A `model.setValue()` was called.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\r\n    /**\r\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\r\n    /**\r\n     * There was an explicit user gesture.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\r\n    /**\r\n     * There was a Paste.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\r\n    /**\r\n     * There was an Undo.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\r\n    /**\r\n     * There was a Redo.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\r\n})(CursorChangeReason || (CursorChangeReason = {}));\r\nexport var RenderMinimap;\r\n(function (RenderMinimap) {\r\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\r\n    RenderMinimap[RenderMinimap[\"Small\"] = 1] = \"Small\";\r\n    RenderMinimap[RenderMinimap[\"Large\"] = 2] = \"Large\";\r\n    RenderMinimap[RenderMinimap[\"SmallBlocks\"] = 3] = \"SmallBlocks\";\r\n    RenderMinimap[RenderMinimap[\"LargeBlocks\"] = 4] = \"LargeBlocks\";\r\n})(RenderMinimap || (RenderMinimap = {}));\r\n/**\r\n * Describes how to indent wrapped lines.\r\n */\r\nexport var WrappingIndent;\r\n(function (WrappingIndent) {\r\n    /**\r\n     * No indentation => wrapped lines begin at column 1.\r\n     */\r\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Same => wrapped lines get the same indentation as the parent.\r\n     */\r\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\r\n    /**\r\n     * Indent => wrapped lines get +1 indentation toward the parent.\r\n     */\r\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\r\n    /**\r\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\r\n     */\r\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\r\n})(WrappingIndent || (WrappingIndent = {}));\r\n/**\r\n * The kind of animation in which the editor's cursor should be rendered.\r\n */\r\nexport var TextEditorCursorBlinkingStyle;\r\n(function (TextEditorCursorBlinkingStyle) {\r\n    /**\r\n     * Hidden\r\n     */\r\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\r\n    /**\r\n     * Blinking\r\n     */\r\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\r\n    /**\r\n     * Blinking with smooth fading\r\n     */\r\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\r\n    /**\r\n     * Blinking with prolonged filled state and smooth fading\r\n     */\r\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\r\n    /**\r\n     * Expand collapse animation on the y axis\r\n     */\r\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\r\n    /**\r\n     * No-Blinking\r\n     */\r\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\r\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\r\n/**\r\n * The style in which the editor's cursor should be rendered.\r\n */\r\nexport var TextEditorCursorStyle;\r\n(function (TextEditorCursorStyle) {\r\n    /**\r\n     * As a vertical line (sitting between two characters).\r\n     */\r\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\r\n    /**\r\n     * As a block (sitting on top of a character).\r\n     */\r\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\r\n    /**\r\n     * As a horizontal line (sitting under a character).\r\n     */\r\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\r\n    /**\r\n     * As a thin vertical line (sitting between two characters).\r\n     */\r\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\r\n    /**\r\n     * As an outlined block (sitting on top of a character).\r\n     */\r\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\r\n    /**\r\n     * As a thin horizontal line (sitting under a character).\r\n     */\r\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\r\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\r\nexport var RenderLineNumbersType;\r\n(function (RenderLineNumbersType) {\r\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\r\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\r\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\r\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\r\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\r\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\r\n/**\r\n * A positioning preference for rendering content widgets.\r\n */\r\nexport var ContentWidgetPositionPreference;\r\n(function (ContentWidgetPositionPreference) {\r\n    /**\r\n     * Place the content widget exactly at a position\r\n     */\r\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\r\n    /**\r\n     * Place the content widget above a position\r\n     */\r\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\r\n    /**\r\n     * Place the content widget below a position\r\n     */\r\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\r\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\r\n/**\r\n * A positioning preference for rendering overlay widgets.\r\n */\r\nexport var OverlayWidgetPositionPreference;\r\n(function (OverlayWidgetPositionPreference) {\r\n    /**\r\n     * Position the overlay widget in the top right corner\r\n     */\r\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\r\n    /**\r\n     * Position the overlay widget in the bottom right corner\r\n     */\r\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\r\n    /**\r\n     * Position the overlay widget in the top center\r\n     */\r\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\r\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\r\n/**\r\n * Type of hit element with the mouse in the editor.\r\n */\r\nexport var MouseTargetType;\r\n(function (MouseTargetType) {\r\n    /**\r\n     * Mouse is on top of an unknown element.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    /**\r\n     * Mouse is on top of the textarea used for input.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\r\n    /**\r\n     * Mouse is on top of the glyph margin\r\n     */\r\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\r\n    /**\r\n     * Mouse is on top of the line numbers\r\n     */\r\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\r\n    /**\r\n     * Mouse is on top of the line decorations\r\n     */\r\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\r\n    /**\r\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\r\n    /**\r\n     * Mouse is on top of text in the content.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\r\n    /**\r\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\r\n     */\r\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\r\n    /**\r\n     * Mouse is on top of a view zone in the content.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\r\n    /**\r\n     * Mouse is on top of a content widget.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\r\n    /**\r\n     * Mouse is on top of the decorations overview ruler.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\r\n    /**\r\n     * Mouse is on top of a scrollbar.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\r\n    /**\r\n     * Mouse is on top of an overlay widget.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\r\n    /**\r\n     * Mouse is outside of the editor.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\r\n})(MouseTargetType || (MouseTargetType = {}));\r\n/**\r\n * Describes what to do with the indentation when pressing Enter.\r\n */\r\nexport var IndentAction;\r\n(function (IndentAction) {\r\n    /**\r\n     * Insert new line and copy the previous line's indentation.\r\n     */\r\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Insert new line and indent once (relative to the previous line's indentation).\r\n     */\r\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\r\n    /**\r\n     * Insert two new lines:\r\n     *  - the first one indented which will hold the cursor\r\n     *  - the second one at the same indentation level\r\n     */\r\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\r\n    /**\r\n     * Insert new line and outdent once (relative to the previous line's indentation).\r\n     */\r\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\r\n})(IndentAction || (IndentAction = {}));\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\r\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\r\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\r\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\r\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\r\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\r\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\r\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\r\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\r\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\r\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\r\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\r\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\r\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\r\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\r\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\r\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\r\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\r\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\r\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\r\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\r\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\r\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\r\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\r\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\r\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 25] = \"Snippet\";\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\nexport var CompletionItemInsertTextRule;\r\n(function (CompletionItemInsertTextRule) {\r\n    /**\r\n     * Adjust whitespace/indentation of multiline insert texts to\r\n     * match the current line indentation.\r\n     */\r\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\r\n    /**\r\n     * `insertText` is a snippet.\r\n     */\r\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\r\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\r\n/**\r\n * How a suggest provider was triggered.\r\n */\r\nexport var CompletionTriggerKind;\r\n(function (CompletionTriggerKind) {\r\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\r\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\r\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\r\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\r\nexport var SignatureHelpTriggerReason;\r\n(function (SignatureHelpTriggerReason) {\r\n    SignatureHelpTriggerReason[SignatureHelpTriggerReason[\"Invoke\"] = 1] = \"Invoke\";\r\n    SignatureHelpTriggerReason[SignatureHelpTriggerReason[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\r\n    SignatureHelpTriggerReason[SignatureHelpTriggerReason[\"ContentChange\"] = 3] = \"ContentChange\";\r\n})(SignatureHelpTriggerReason || (SignatureHelpTriggerReason = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\r\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\r\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\r\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\r\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\r\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\r\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\r\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\r\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\r\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\r\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\r\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\r\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\r\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\r\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\r\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\r\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\r\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\r\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\r\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\r\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\r\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\r\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\r\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\r\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\r\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\r\n})(SymbolKind || (SymbolKind = {}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { Position } from './position.js';\r\nimport { Range } from './range.js';\r\n/**\r\n * A selection in the editor.\r\n * The selection is a range that has an orientation.\r\n */\r\nvar Selection = /** @class */ (function (_super) {\r\n    __extends(Selection, _super);\r\n    function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\r\n        var _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) || this;\r\n        _this.selectionStartLineNumber = selectionStartLineNumber;\r\n        _this.selectionStartColumn = selectionStartColumn;\r\n        _this.positionLineNumber = positionLineNumber;\r\n        _this.positionColumn = positionColumn;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Clone this selection.\r\n     */\r\n    Selection.prototype.clone = function () {\r\n        return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\r\n    };\r\n    /**\r\n     * Transform to a human-readable representation.\r\n     */\r\n    Selection.prototype.toString = function () {\r\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\r\n    };\r\n    /**\r\n     * Test if equals other selection.\r\n     */\r\n    Selection.prototype.equalsSelection = function (other) {\r\n        return (Selection.selectionsEqual(this, other));\r\n    };\r\n    /**\r\n     * Test if the two selections are equal.\r\n     */\r\n    Selection.selectionsEqual = function (a, b) {\r\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\r\n            a.selectionStartColumn === b.selectionStartColumn &&\r\n            a.positionLineNumber === b.positionLineNumber &&\r\n            a.positionColumn === b.positionColumn);\r\n    };\r\n    /**\r\n     * Get directions (LTR or RTL).\r\n     */\r\n    Selection.prototype.getDirection = function () {\r\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\r\n            return 0 /* LTR */;\r\n        }\r\n        return 1 /* RTL */;\r\n    };\r\n    /**\r\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\r\n     */\r\n    Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\r\n        if (this.getDirection() === 0 /* LTR */) {\r\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\r\n        }\r\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\r\n    };\r\n    /**\r\n     * Get the position at `positionLineNumber` and `positionColumn`.\r\n     */\r\n    Selection.prototype.getPosition = function () {\r\n        return new Position(this.positionLineNumber, this.positionColumn);\r\n    };\r\n    /**\r\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\r\n     */\r\n    Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\r\n        if (this.getDirection() === 0 /* LTR */) {\r\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\r\n        }\r\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\r\n    };\r\n    // ----\r\n    /**\r\n     * Create a `Selection` from one or two positions\r\n     */\r\n    Selection.fromPositions = function (start, end) {\r\n        if (end === void 0) { end = start; }\r\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\r\n    };\r\n    /**\r\n     * Create a `Selection` from an `ISelection`.\r\n     */\r\n    Selection.liftSelection = function (sel) {\r\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\r\n    };\r\n    /**\r\n     * `a` equals `b`.\r\n     */\r\n    Selection.selectionsArrEqual = function (a, b) {\r\n        if (a && !b || !a && b) {\r\n            return false;\r\n        }\r\n        if (!a && !b) {\r\n            return true;\r\n        }\r\n        if (a.length !== b.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0, len = a.length; i < len; i++) {\r\n            if (!this.selectionsEqual(a[i], b[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Test if `obj` is an `ISelection`.\r\n     */\r\n    Selection.isISelection = function (obj) {\r\n        return (obj\r\n            && (typeof obj.selectionStartLineNumber === 'number')\r\n            && (typeof obj.selectionStartColumn === 'number')\r\n            && (typeof obj.positionLineNumber === 'number')\r\n            && (typeof obj.positionColumn === 'number'));\r\n    };\r\n    /**\r\n     * Create with a direction.\r\n     */\r\n    Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\r\n        if (direction === 0 /* LTR */) {\r\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\r\n        }\r\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\r\n    };\r\n    return Selection;\r\n}(Range));\r\nexport { Selection };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar Token = /** @class */ (function () {\r\n    function Token(offset, type, language) {\r\n        this.offset = offset | 0; // @perf\r\n        this.type = type;\r\n        this.language = language;\r\n    }\r\n    Token.prototype.toString = function () {\r\n        return '(' + this.offset + ', ' + this.type + ')';\r\n    };\r\n    return Token;\r\n}());\r\nexport { Token };\r\nvar TokenizationResult = /** @class */ (function () {\r\n    function TokenizationResult(tokens, endState) {\r\n        this.tokens = tokens;\r\n        this.endState = endState;\r\n    }\r\n    return TokenizationResult;\r\n}());\r\nexport { TokenizationResult };\r\nvar TokenizationResult2 = /** @class */ (function () {\r\n    function TokenizationResult2(tokens, endState) {\r\n        this.tokens = tokens;\r\n        this.endState = endState;\r\n    }\r\n    return TokenizationResult2;\r\n}());\r\nexport { TokenizationResult2 };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { TPromise } from '../../../base/common/winjs.base.js';\r\nimport { Position } from '../core/position.js';\r\nimport { Range } from '../core/range.js';\r\nimport { Selection } from '../core/selection.js';\r\nimport { Token } from '../core/token.js';\r\nimport * as standaloneEnums from './standaloneEnums.js';\r\nvar KeyMod = /** @class */ (function () {\r\n    function KeyMod() {\r\n    }\r\n    KeyMod.chord = function (firstPart, secondPart) {\r\n        return KeyChord(firstPart, secondPart);\r\n    };\r\n    KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\r\n    KeyMod.Shift = 1024 /* Shift */;\r\n    KeyMod.Alt = 512 /* Alt */;\r\n    KeyMod.WinCtrl = 256 /* WinCtrl */;\r\n    return KeyMod;\r\n}());\r\nexport { KeyMod };\r\nexport function createMonacoBaseAPI() {\r\n    return {\r\n        editor: undefined,\r\n        languages: undefined,\r\n        CancellationTokenSource: CancellationTokenSource,\r\n        Emitter: Emitter,\r\n        KeyCode: standaloneEnums.KeyCode,\r\n        KeyMod: KeyMod,\r\n        Position: Position,\r\n        Range: Range,\r\n        Selection: Selection,\r\n        SelectionDirection: standaloneEnums.SelectionDirection,\r\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\r\n        MarkerTag: standaloneEnums.MarkerTag,\r\n        Promise: TPromise,\r\n        Uri: URI,\r\n        Token: Token\r\n    };\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { mergeSort } from '../../../base/common/arrays.js';\r\nimport { stringDiff } from '../../../base/common/diff/diff.js';\r\nimport { FIN } from '../../../base/common/iterator.js';\r\nimport { globals } from '../../../base/common/platform.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Position } from '../core/position.js';\r\nimport { Range } from '../core/range.js';\r\nimport { DiffComputer } from '../diff/diffComputer.js';\r\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\r\nimport { ensureValidWordDefinition, getWordAtText } from '../model/wordHelper.js';\r\nimport { computeLinks } from '../modes/linkComputer.js';\r\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\r\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\r\n/**\r\n * @internal\r\n */\r\nvar MirrorModel = /** @class */ (function (_super) {\r\n    __extends(MirrorModel, _super);\r\n    function MirrorModel() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(MirrorModel.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MirrorModel.prototype, \"version\", {\r\n        get: function () {\r\n            return this._versionId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MirrorModel.prototype, \"eol\", {\r\n        get: function () {\r\n            return this._eol;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MirrorModel.prototype.getValue = function () {\r\n        return this.getText();\r\n    };\r\n    MirrorModel.prototype.getLinesContent = function () {\r\n        return this._lines.slice(0);\r\n    };\r\n    MirrorModel.prototype.getLineCount = function () {\r\n        return this._lines.length;\r\n    };\r\n    MirrorModel.prototype.getLineContent = function (lineNumber) {\r\n        return this._lines[lineNumber - 1];\r\n    };\r\n    MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\r\n        var wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\r\n        if (wordAtText) {\r\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\r\n        }\r\n        return null;\r\n    };\r\n    MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\r\n        var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\r\n        if (!wordAtPosition) {\r\n            return {\r\n                word: '',\r\n                startColumn: position.column,\r\n                endColumn: position.column\r\n            };\r\n        }\r\n        return {\r\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\r\n            startColumn: wordAtPosition.startColumn,\r\n            endColumn: position.column\r\n        };\r\n    };\r\n    MirrorModel.prototype.createWordIterator = function (wordDefinition) {\r\n        var _this = this;\r\n        var obj;\r\n        var lineNumber = 0;\r\n        var lineText;\r\n        var wordRangesIdx = 0;\r\n        var wordRanges = [];\r\n        var next = function () {\r\n            if (wordRangesIdx < wordRanges.length) {\r\n                var value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\r\n                wordRangesIdx += 1;\r\n                if (!obj) {\r\n                    obj = { done: false, value: value };\r\n                }\r\n                else {\r\n                    obj.value = value;\r\n                }\r\n                return obj;\r\n            }\r\n            else if (lineNumber >= _this._lines.length) {\r\n                return FIN;\r\n            }\r\n            else {\r\n                lineText = _this._lines[lineNumber];\r\n                wordRanges = _this._wordenize(lineText, wordDefinition);\r\n                wordRangesIdx = 0;\r\n                lineNumber += 1;\r\n                return next();\r\n            }\r\n        };\r\n        return { next: next };\r\n    };\r\n    MirrorModel.prototype.getLineWords = function (lineNumber, wordDefinition) {\r\n        var content = this._lines[lineNumber - 1];\r\n        var ranges = this._wordenize(content, wordDefinition);\r\n        var words = [];\r\n        for (var _i = 0, ranges_1 = ranges; _i < ranges_1.length; _i++) {\r\n            var range = ranges_1[_i];\r\n            words.push({\r\n                word: content.substring(range.start, range.end),\r\n                startColumn: range.start + 1,\r\n                endColumn: range.end + 1\r\n            });\r\n        }\r\n        return words;\r\n    };\r\n    MirrorModel.prototype._wordenize = function (content, wordDefinition) {\r\n        var result = [];\r\n        var match;\r\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\r\n        while (match = wordDefinition.exec(content)) {\r\n            if (match[0].length === 0) {\r\n                // it did match the empty string\r\n                break;\r\n            }\r\n            result.push({ start: match.index, end: match.index + match[0].length });\r\n        }\r\n        return result;\r\n    };\r\n    MirrorModel.prototype.getValueInRange = function (range) {\r\n        range = this._validateRange(range);\r\n        if (range.startLineNumber === range.endLineNumber) {\r\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\r\n        }\r\n        var lineEnding = this._eol;\r\n        var startLineIndex = range.startLineNumber - 1;\r\n        var endLineIndex = range.endLineNumber - 1;\r\n        var resultLines = [];\r\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\r\n        for (var i = startLineIndex + 1; i < endLineIndex; i++) {\r\n            resultLines.push(this._lines[i]);\r\n        }\r\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\r\n        return resultLines.join(lineEnding);\r\n    };\r\n    MirrorModel.prototype.offsetAt = function (position) {\r\n        position = this._validatePosition(position);\r\n        this._ensureLineStarts();\r\n        return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\r\n    };\r\n    MirrorModel.prototype.positionAt = function (offset) {\r\n        offset = Math.floor(offset);\r\n        offset = Math.max(0, offset);\r\n        this._ensureLineStarts();\r\n        var out = this._lineStarts.getIndexOf(offset);\r\n        var lineLength = this._lines[out.index].length;\r\n        // Ensure we return a valid position\r\n        return {\r\n            lineNumber: 1 + out.index,\r\n            column: 1 + Math.min(out.remainder, lineLength)\r\n        };\r\n    };\r\n    MirrorModel.prototype._validateRange = function (range) {\r\n        var start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\r\n        var end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\r\n        if (start.lineNumber !== range.startLineNumber\r\n            || start.column !== range.startColumn\r\n            || end.lineNumber !== range.endLineNumber\r\n            || end.column !== range.endColumn) {\r\n            return {\r\n                startLineNumber: start.lineNumber,\r\n                startColumn: start.column,\r\n                endLineNumber: end.lineNumber,\r\n                endColumn: end.column\r\n            };\r\n        }\r\n        return range;\r\n    };\r\n    MirrorModel.prototype._validatePosition = function (position) {\r\n        if (!Position.isIPosition(position)) {\r\n            throw new Error('bad position');\r\n        }\r\n        var lineNumber = position.lineNumber, column = position.column;\r\n        var hasChanged = false;\r\n        if (lineNumber < 1) {\r\n            lineNumber = 1;\r\n            column = 1;\r\n            hasChanged = true;\r\n        }\r\n        else if (lineNumber > this._lines.length) {\r\n            lineNumber = this._lines.length;\r\n            column = this._lines[lineNumber - 1].length + 1;\r\n            hasChanged = true;\r\n        }\r\n        else {\r\n            var maxCharacter = this._lines[lineNumber - 1].length + 1;\r\n            if (column < 1) {\r\n                column = 1;\r\n                hasChanged = true;\r\n            }\r\n            else if (column > maxCharacter) {\r\n                column = maxCharacter;\r\n                hasChanged = true;\r\n            }\r\n        }\r\n        if (!hasChanged) {\r\n            return position;\r\n        }\r\n        else {\r\n            return { lineNumber: lineNumber, column: column };\r\n        }\r\n    };\r\n    return MirrorModel;\r\n}(BaseMirrorModel));\r\n/**\r\n * @internal\r\n */\r\nvar BaseEditorSimpleWorker = /** @class */ (function () {\r\n    function BaseEditorSimpleWorker(foreignModuleFactory) {\r\n        this._foreignModuleFactory = foreignModuleFactory;\r\n        this._foreignModule = null;\r\n    }\r\n    // ---- BEGIN diff --------------------------------------------------------------------------\r\n    BaseEditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\r\n        var original = this._getModel(originalUrl);\r\n        var modified = this._getModel(modifiedUrl);\r\n        if (!original || !modified) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var originalLines = original.getLinesContent();\r\n        var modifiedLines = modified.getLinesContent();\r\n        var diffComputer = new DiffComputer(originalLines, modifiedLines, {\r\n            shouldComputeCharChanges: true,\r\n            shouldPostProcessCharChanges: true,\r\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\r\n            shouldMakePrettyDiff: true\r\n        });\r\n        var changes = diffComputer.computeDiff();\r\n        var identical = (changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\r\n        return Promise.resolve({\r\n            identical: identical,\r\n            changes: changes\r\n        });\r\n    };\r\n    BaseEditorSimpleWorker.prototype._modelsAreIdentical = function (original, modified) {\r\n        var originalLineCount = original.getLineCount();\r\n        var modifiedLineCount = modified.getLineCount();\r\n        if (originalLineCount !== modifiedLineCount) {\r\n            return false;\r\n        }\r\n        for (var line = 1; line <= originalLineCount; line++) {\r\n            var originalLine = original.getLineContent(line);\r\n            var modifiedLine = modified.getLineContent(line);\r\n            if (originalLine !== modifiedLine) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    BaseEditorSimpleWorker.prototype.computeMoreMinimalEdits = function (modelUrl, edits) {\r\n        var model = this._getModel(modelUrl);\r\n        if (!model) {\r\n            return Promise.resolve(edits);\r\n        }\r\n        var result = [];\r\n        var lastEol = undefined;\r\n        edits = mergeSort(edits, function (a, b) {\r\n            if (a.range && b.range) {\r\n                return Range.compareRangesUsingStarts(a.range, b.range);\r\n            }\r\n            // eol only changes should go to the end\r\n            var aRng = a.range ? 0 : 1;\r\n            var bRng = b.range ? 0 : 1;\r\n            return aRng - bRng;\r\n        });\r\n        for (var _i = 0, edits_1 = edits; _i < edits_1.length; _i++) {\r\n            var _a = edits_1[_i], range = _a.range, text = _a.text, eol = _a.eol;\r\n            if (typeof eol === 'number') {\r\n                lastEol = eol;\r\n            }\r\n            if (!range) {\r\n                // eol-change only\r\n                continue;\r\n            }\r\n            var original = model.getValueInRange(range);\r\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\r\n            if (original === text) {\r\n                // noop\r\n                continue;\r\n            }\r\n            // make sure diff won't take too long\r\n            if (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\r\n                result.push({ range: range, text: text });\r\n                continue;\r\n            }\r\n            // compute diff between original and edit.text\r\n            var changes = stringDiff(original, text, false);\r\n            var editOffset = model.offsetAt(Range.lift(range).getStartPosition());\r\n            for (var _b = 0, changes_1 = changes; _b < changes_1.length; _b++) {\r\n                var change = changes_1[_b];\r\n                var start = model.positionAt(editOffset + change.originalStart);\r\n                var end = model.positionAt(editOffset + change.originalStart + change.originalLength);\r\n                var newEdit = {\r\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\r\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\r\n                };\r\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\r\n                    result.push(newEdit);\r\n                }\r\n            }\r\n        }\r\n        if (typeof lastEol === 'number') {\r\n            result.push({ eol: lastEol, text: undefined, range: undefined });\r\n        }\r\n        return Promise.resolve(result);\r\n    };\r\n    // ---- END minimal edits ---------------------------------------------------------------\r\n    BaseEditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\r\n        var model = this._getModel(modelUrl);\r\n        if (!model) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return Promise.resolve(computeLinks(model));\r\n    };\r\n    BaseEditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\r\n        var model = this._getModel(modelUrl);\r\n        if (!model) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var suggestions = [];\r\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\r\n        var currentWord = model.getWordUntilPosition(position, wordDefRegExp);\r\n        var seen = Object.create(null);\r\n        seen[currentWord.word] = true;\r\n        for (var iter = model.createWordIterator(wordDefRegExp), e = iter.next(); !e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit; e = iter.next()) {\r\n            var word = e.value;\r\n            if (seen[word]) {\r\n                continue;\r\n            }\r\n            seen[word] = true;\r\n            if (!isNaN(Number(word))) {\r\n                continue;\r\n            }\r\n            suggestions.push({\r\n                kind: 18 /* Text */,\r\n                label: word,\r\n                insertText: word,\r\n                range: { startLineNumber: position.lineNumber, startColumn: currentWord.startColumn, endLineNumber: position.lineNumber, endColumn: currentWord.endColumn }\r\n            });\r\n        }\r\n        return Promise.resolve({ suggestions: suggestions });\r\n    };\r\n    // ---- END suggest --------------------------------------------------------------------------\r\n    //#region -- word ranges --\r\n    BaseEditorSimpleWorker.prototype.computeWordRanges = function (modelUrl, range, wordDef, wordDefFlags) {\r\n        var model = this._getModel(modelUrl);\r\n        if (!model) {\r\n            return Promise.resolve(Object.create(null));\r\n        }\r\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\r\n        var result = Object.create(null);\r\n        for (var line = range.startLineNumber; line < range.endLineNumber; line++) {\r\n            var words = model.getLineWords(line, wordDefRegExp);\r\n            for (var _i = 0, words_1 = words; _i < words_1.length; _i++) {\r\n                var word = words_1[_i];\r\n                if (!isNaN(Number(word.word))) {\r\n                    continue;\r\n                }\r\n                var array = result[word.word];\r\n                if (!array) {\r\n                    array = [];\r\n                    result[word.word] = array;\r\n                }\r\n                array.push({\r\n                    startLineNumber: line,\r\n                    startColumn: word.startColumn,\r\n                    endLineNumber: line,\r\n                    endColumn: word.endColumn\r\n                });\r\n            }\r\n        }\r\n        return Promise.resolve(result);\r\n    };\r\n    //#endregion\r\n    BaseEditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\r\n        var model = this._getModel(modelUrl);\r\n        if (!model) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\r\n        if (range.startColumn === range.endColumn) {\r\n            range = {\r\n                startLineNumber: range.startLineNumber,\r\n                startColumn: range.startColumn,\r\n                endLineNumber: range.endLineNumber,\r\n                endColumn: range.endColumn + 1\r\n            };\r\n        }\r\n        var selectionText = model.getValueInRange(range);\r\n        var wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\r\n        if (!wordRange) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var word = model.getValueInRange(wordRange);\r\n        var result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\r\n        return Promise.resolve(result);\r\n    };\r\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\r\n    BaseEditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData) {\r\n        var _this = this;\r\n        var ctx = {\r\n            getMirrorModels: function () {\r\n                return _this._getModels();\r\n            }\r\n        };\r\n        if (this._foreignModuleFactory) {\r\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\r\n            // static foreing module\r\n            var methods = [];\r\n            for (var prop in this._foreignModule) {\r\n                if (typeof this._foreignModule[prop] === 'function') {\r\n                    methods.push(prop);\r\n                }\r\n            }\r\n            return Promise.resolve(methods);\r\n        }\r\n        // ESM-comment-begin\r\n        // \t\treturn new Promise<any>((resolve, reject) => {\r\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\r\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\r\n        // \r\n        // \t\t\t\tlet methods: string[] = [];\r\n        // \t\t\t\tfor (let prop in this._foreignModule) {\r\n        // \t\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\r\n        // \t\t\t\t\t\tmethods.push(prop);\r\n        // \t\t\t\t\t}\r\n        // \t\t\t\t}\r\n        // \r\n        // \t\t\t\tresolve(methods);\r\n        // \r\n        // \t\t\t}, reject);\r\n        // \t\t});\r\n        // ESM-comment-end\r\n        // ESM-uncomment-begin\r\n        return Promise.reject(new Error(\"Unexpected usage\"));\r\n        // ESM-uncomment-end\r\n    };\r\n    // foreign method request\r\n    BaseEditorSimpleWorker.prototype.fmr = function (method, args) {\r\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\r\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\r\n        }\r\n        try {\r\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n    // ---- END diff --------------------------------------------------------------------------\r\n    // ---- BEGIN minimal edits ---------------------------------------------------------------\r\n    BaseEditorSimpleWorker._diffLimit = 10000;\r\n    // ---- BEGIN suggest --------------------------------------------------------------------------\r\n    BaseEditorSimpleWorker._suggestionsLimit = 10000;\r\n    return BaseEditorSimpleWorker;\r\n}());\r\nexport { BaseEditorSimpleWorker };\r\n/**\r\n * @internal\r\n */\r\nvar EditorSimpleWorkerImpl = /** @class */ (function (_super) {\r\n    __extends(EditorSimpleWorkerImpl, _super);\r\n    function EditorSimpleWorkerImpl(foreignModuleFactory) {\r\n        var _this = _super.call(this, foreignModuleFactory) || this;\r\n        _this._models = Object.create(null);\r\n        return _this;\r\n    }\r\n    EditorSimpleWorkerImpl.prototype.dispose = function () {\r\n        this._models = Object.create(null);\r\n    };\r\n    EditorSimpleWorkerImpl.prototype._getModel = function (uri) {\r\n        return this._models[uri];\r\n    };\r\n    EditorSimpleWorkerImpl.prototype._getModels = function () {\r\n        var _this = this;\r\n        var all = [];\r\n        Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\r\n        return all;\r\n    };\r\n    EditorSimpleWorkerImpl.prototype.acceptNewModel = function (data) {\r\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\r\n    };\r\n    EditorSimpleWorkerImpl.prototype.acceptModelChanged = function (strURL, e) {\r\n        if (!this._models[strURL]) {\r\n            return;\r\n        }\r\n        var model = this._models[strURL];\r\n        model.onEvents(e);\r\n    };\r\n    EditorSimpleWorkerImpl.prototype.acceptRemovedModel = function (strURL) {\r\n        if (!this._models[strURL]) {\r\n            return;\r\n        }\r\n        delete this._models[strURL];\r\n    };\r\n    return EditorSimpleWorkerImpl;\r\n}(BaseEditorSimpleWorker));\r\nexport { EditorSimpleWorkerImpl };\r\n/**\r\n * Called on the worker side\r\n * @internal\r\n */\r\nexport function create() {\r\n    return new EditorSimpleWorkerImpl(null);\r\n}\r\nif (typeof importScripts === 'function') {\r\n    // Running in a web worker\r\n    globals.monaco = createMonacoBaseAPI();\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\r\nimport { EditorSimpleWorkerImpl } from './common/services/editorSimpleWorker.js';\r\nvar initialized = false;\r\nexport function initialize(foreignModule) {\r\n    if (initialized) {\r\n        return;\r\n    }\r\n    initialized = true;\r\n    var editorWorker = new EditorSimpleWorkerImpl(foreignModule);\r\n    var simpleWorker = new SimpleWorkerServer(function (msg) {\r\n        self.postMessage(msg);\r\n    }, editorWorker);\r\n    self.onmessage = function (e) {\r\n        simpleWorker.onmessage(e.data);\r\n    };\r\n}\r\nself.onmessage = function (e) {\r\n    // Ignore first message in this case and initialize if not yet initialized\r\n    if (!initialized) {\r\n        initialize(null);\r\n    }\r\n};\r\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"sourceRoot":""}